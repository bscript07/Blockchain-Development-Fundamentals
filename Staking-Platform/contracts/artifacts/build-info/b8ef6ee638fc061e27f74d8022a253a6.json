{
	"id": "b8ef6ee638fc061e27f74d8022a253a6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.28",
	"solcLongVersion": "0.8.28+commit.7893614a",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/StakingPool.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.28;\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport {Ownable} from \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport {AccessControl} from \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport {IStakeX} from \"./IStakeX.sol\";\r\n\r\ncontract StakingPool is Ownable, AccessControl {\r\n    bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\");\r\n\r\n    IERC20 public stakeXToken;\r\n    uint256 public totalStaked;\r\n\r\n    struct Staker {\r\n        uint256 balance;\r\n        uint256 rewardDebt;\r\n        uint256 stakingStartTime;\r\n    }\r\n\r\n    mapping(address => Staker) public stakers;\r\n\r\n    event Deposited(address indexed user, uint256 amount);\r\n    event Withdrawn(address indexed user, uint256 amount);\r\n    event RewardsClaimed(address indexed user, uint256 reward);\r\n\r\n    error InsufficientAmount(uint256 amount);\r\n    error RewardsTransferFailed();\r\n    error NoAvailableRewards();\r\n    error WithdrawnFailed();\r\n    error InsufficientBalance(uint256 balance);\r\n\r\n    constructor(address _stakeXToken) {\r\n        stakeXToken = IERC20(_stakeXToken);\r\n\r\n        _setupRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n        _setupRole(MINTER_ROLE, address(this));\r\n    }\r\n\r\n    function deposit(uint256 amount) external {\r\n        if (amount == 0) {\r\n            revert InsufficientAmount(amount);\r\n        }\r\n\r\n        bool success = stakeXToken.transferFrom(\r\n            msg.sender,\r\n            address(this),\r\n            amount\r\n        );\r\n\r\n        if (!success) {\r\n            revert InsufficientAmount(amount);\r\n        }\r\n\r\n        _calculateAndClaimRewards();\r\n\r\n        Staker storage staker = stakers[msg.sender];\r\n        staker.balance += amount;\r\n        staker.stakingStartTime = block.timestamp;\r\n\r\n        totalStaked += amount;\r\n\r\n        emit Deposited(msg.sender, amount);\r\n    }\r\n\r\n    function _mintRewards(address to, uint256 rewardAmount) internal {\r\n        IStakeX(address(stakeXToken)).mint(to, rewardAmount);\r\n    }\r\n\r\n    function _calculateAndClaimRewards() internal {\r\n        Staker storage staker = stakers[msg.sender];\r\n\r\n        if (staker.balance > 0) {\r\n            uint256 elapsedTime = block.timestamp - staker.stakingStartTime;\r\n            uint256 reward = (((staker.balance * 5) / 100) * elapsedTime) /\r\n                365 days;\r\n            staker.rewardDebt += reward;\r\n\r\n            _mintRewards(msg.sender, reward);\r\n\r\n            emit RewardsClaimed(msg.sender, reward);\r\n        }\r\n\r\n        staker.stakingStartTime = block.timestamp;\r\n    }\r\n\r\n    function claimRewards() external {\r\n        Staker storage staker = stakers[msg.sender];\r\n        uint256 rewards = staker.rewardDebt;\r\n\r\n        if (rewards == 0) {\r\n            revert NoAvailableRewards();\r\n        }\r\n\r\n        staker.rewardDebt = 0;\r\n\r\n        _mintRewards(msg.sender, rewards);\r\n\r\n        emit RewardsClaimed(msg.sender, rewards);\r\n    }\r\n\r\n    function withdraw(uint256 amount) external {\r\n        if (amount == 0) {\r\n            revert InsufficientAmount(amount);\r\n        }\r\n\r\n        _calculateAndClaimRewards();\r\n        Staker storage staker = stakers[msg.sender];\r\n\r\n        if (staker.balance < amount) {\r\n            revert InsufficientBalance(staker.balance);\r\n        }\r\n\r\n        staker.balance -= amount;\r\n        totalStaked -= amount;\r\n\r\n        bool success = stakeXToken.transfer(msg.sender, amount);\r\n        if (!success) {\r\n            revert WithdrawnFailed();\r\n        }\r\n\r\n        emit Withdrawn(msg.sender, amount);\r\n    }\r\n}\r\n"
			},
			"contracts/IStakeX.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity 0.8.28;\r\n\r\nimport {IERC20} from \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\n\r\ninterface IStakeX is IERC20 {\r\n    function decimals() external view returns (uint8);\r\n\r\n    function mint(address account, uint256 amount) external;\r\n}\r\n"
			},
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\nimport \"./math/SignedMath.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `int256` to its ASCII `string` decimal representation.\n     */\n    function toString(int256 value) internal pure returns (string memory) {\n        return string(abi.encodePacked(value < 0 ? \"-\" : \"\", toString(SignedMath.abs(value))));\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n\n    /**\n     * @dev Returns true if the two strings are equal.\n     */\n    function equal(string memory a, string memory b) internal pure returns (bool) {\n        return keccak256(bytes(a)) == keccak256(bytes(b));\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SignedMath.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard signed math utilities missing in the Solidity language.\n */\nlibrary SignedMath {\n    /**\n     * @dev Returns the largest of two signed numbers.\n     */\n    function max(int256 a, int256 b) internal pure returns (int256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two signed numbers.\n     */\n    function min(int256 a, int256 b) internal pure returns (int256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two signed numbers without overflow.\n     * The result is rounded towards zero.\n     */\n    function average(int256 a, int256 b) internal pure returns (int256) {\n        // Formula from the book \"Hacker's Delight\"\n        int256 x = (a & b) + ((a ^ b) >> 1);\n        return x + (int256(uint256(x) >> 255) & (a ^ b));\n    }\n\n    /**\n     * @dev Returns the absolute unsigned value of a signed value.\n     */\n    function abs(int256 n) internal pure returns (uint256) {\n        unchecked {\n            // must be unchecked in order to support `n = type(int256).min`\n            return uint256(n >= 0 ? n : -n);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1, \"Math: mulDiv overflow\");\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"AccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 24,
								"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
								"label": "_roles",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "@openzeppelin/contracts/access/AccessControl.sol:AccessControl",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 396,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"Strings": {
					"abi": [],
					"devdoc": {
						"details": "String operations.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":220:2779  library Strings {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220cc68128f78aa8c7aa06255dc38875cdcc324ba9a95621ffb91c7f39e3b82945b64736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cc68128f78aa8c7aa06255dc38875cdcc324ba9a95621ffb91c7f39e3b82945b64736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH9 0x128F78AA8C7AA06255 0xDC CODESIZE DUP8 TLOAD 0xDC 0xC3 0x24 0xBA SWAP11 SWAP6 PUSH3 0x1FFB91 0xC7 RETURN SWAP15 EXTCODESIZE DUP3 SWAP5 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "220:2559:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220cc68128f78aa8c7aa06255dc38875cdcc324ba9a95621ffb91c7f39e3b82945b64736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC PUSH9 0x128F78AA8C7AA06255 0xDC CODESIZE DUP8 TLOAD 0xDC 0xC3 0x24 0xBA SWAP11 SWAP6 PUSH3 0x1FFB91 0xC7 RETURN SWAP15 EXTCODESIZE DUP3 SWAP5 JUMPDEST PUSH5 0x736F6C6343 STOP ADDMOD SHR STOP CALLER ",
							"sourceMap": "220:2559:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"equal(string memory,string memory)": "infinite",
								"toHexString(address)": "infinite",
								"toHexString(uint256)": "infinite",
								"toHexString(uint256,uint256)": "infinite",
								"toString(int256)": "infinite",
								"toString(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 220,
									"end": 2779,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220cc68128f78aa8c7aa06255dc38875cdcc324ba9a95621ffb91c7f39e3b82945b64736f6c634300081c0033",
									".code": [
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 2779,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IStakeX.sol",
								"contracts/StakingPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/Math.sol\":202:12784  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220135db465707f56824fe78a3ac5feb476a1816b6b6e5aa063aaf08f555214338864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220135db465707f56824fe78a3ac5feb476a1816b6b6e5aa063aaf08f555214338864736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT TSTORE 0xB4 PUSH6 0x707F56824FE7 DUP11 GASPRICE 0xC5 INVALID 0xB4 PUSH23 0xA1816B6B6E5AA063AAF08F555214338864736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "202:12582:8:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220135db465707f56824fe78a3ac5feb476a1816b6b6e5aa063aaf08f555214338864736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT TSTORE 0xB4 PUSH6 0x707F56824FE7 DUP11 GASPRICE 0xC5 INVALID 0xB4 PUSH23 0xA1816B6B6E5AA063AAF08F555214338864736F6C634300 ADDMOD SHR STOP CALLER ",
							"sourceMap": "202:12582:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 202,
									"end": 12784,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220135db465707f56824fe78a3ac5feb476a1816b6b6e5aa063aaf08f555214338864736f6c634300081c0033",
									".code": [
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 12784,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IStakeX.sol",
								"contracts/StakingPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"SignedMath": {
					"abi": [],
					"devdoc": {
						"details": "Standard signed math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/math/SignedMath.sol\":215:1262  library SignedMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220bf2e58234dde072f47f487263a107ae14850aed0c8fa30340a4d65cba7559c2164736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220bf2e58234dde072f47f487263a107ae14850aed0c8fa30340a4d65cba7559c2164736f6c634300081c0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0x2E PC 0x23 0x4D 0xDE SMOD 0x2F SELFBALANCE DELEGATECALL DUP8 0x26 GASPRICE LT PUSH27 0xE14850AED0C8FA30340A4D65CBA7559C2164736F6C634300081C00 CALLER ",
							"sourceMap": "215:1047:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220bf2e58234dde072f47f487263a107ae14850aed0c8fa30340a4d65cba7559c2164736f6c634300081c0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xBF 0x2E PC 0x23 0x4D 0xDE SMOD 0x2F SELFBALANCE DELEGATECALL DUP8 0x26 GASPRICE LT PUSH27 0xE14850AED0C8FA30340A4D65CBA7559C2164736F6C634300081C00 CALLER ",
							"sourceMap": "215:1047:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"abs(int256)": "infinite",
								"average(int256,int256)": "infinite",
								"max(int256,int256)": "infinite",
								"min(int256,int256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 215,
									"end": 1262,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220bf2e58234dde072f47f487263a107ae14850aed0c8fa30340a4d65cba7559c2164736f6c634300081c0033",
									".code": [
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 215,
											"end": 1262,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IStakeX.sol",
								"contracts/StakingPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard signed math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":\"SignedMath\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/IStakeX.sol": {
				"IStakeX": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"mint(address,uint256)": "40c10f19",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IStakeX.sol\":\"IStakeX\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"contracts/IStakeX.sol\":{\"keccak256\":\"0xc78bc6fc5eea58b3b5c3b8a8a92cdfa14e977f938527d7d947d9dba4220d1728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc5b252fc21de30c31f8a859e79534068a6db25ab000174f1013a951c7fbc520\",\"dweb:/ipfs/QmYbvLqT9hc8MMd7iMEVDubobwv6KwRuAVtEXeGR6F8bqY\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/StakingPool.sol": {
				"StakingPool": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_stakeXToken",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "InsufficientAmount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NoAvailableRewards",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "RewardsTransferFailed",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "WithdrawnFailed",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Deposited",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "RewardsClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Withdrawn",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MINTER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimRewards",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "deposit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakeXToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakers",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "rewardDebt",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "stakingStartTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalStaked",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdraw",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._"
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/StakingPool.sol\":324:3562  contract StakingPool is Ownable, AccessControl {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/StakingPool.sol\":1070:1261  constructor(address _stakeXToken) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_7\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_8\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_8:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_10)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_7:\n    /* \"contracts/StakingPool.sol\":1136:1148  _stakeXToken */\n  dup1\n    /* \"contracts/StakingPool.sol\":1115:1126  stakeXToken */\n  0x02\n  0x00\n    /* \"contracts/StakingPool.sol\":1115:1149  stakeXToken = IERC20(_stakeXToken) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/StakingPool.sol\":1162:1204  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  tag_12\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n  0x00\n    /* \"contracts/StakingPool.sol\":1173:1191  DEFAULT_ADMIN_ROLE */\n  0x00\n  shl\n    /* \"contracts/StakingPool.sol\":1193:1203  msg.sender */\n  caller\n    /* \"contracts/StakingPool.sol\":1162:1172  _setupRole */\n  shl(0x20, tag_13)\n    /* \"contracts/StakingPool.sol\":1162:1204  _setupRole(DEFAULT_ADMIN_ROLE, msg.sender) */\n  0x20\n  shr\n  jump\t// in\ntag_12:\n    /* \"contracts/StakingPool.sol\":1215:1253  _setupRole(MINTER_ROLE, address(this)) */\n  tag_14\n    /* \"contracts/StakingPool.sol\":416:440  keccak256(\"MINTER_ROLE\") */\n  0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n    /* \"contracts/StakingPool.sol\":1247:1251  this */\n  address\n    /* \"contracts/StakingPool.sol\":1215:1225  _setupRole */\n  shl(0x20, tag_13)\n    /* \"contracts/StakingPool.sol\":1215:1253  _setupRole(MINTER_ROLE, address(this)) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"contracts/StakingPool.sol\":1070:1261  constructor(address _stakeXToken) {... */\n  pop\n    /* \"contracts/StakingPool.sol\":324:3562  contract StakingPool is Ownable, AccessControl {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\ntag_9:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":708:715  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":734:744  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":727:744  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\ntag_10:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n  0x00\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n  0x00\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6937:7047  function _setupRole(bytes32 role, address account) internal virtual {... */\ntag_13:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7015:7040  _grantRole(role, account) */\n  tag_19\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7026:7030  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7032:7039  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7015:7025  _grantRole */\n  shl(0x20, tag_20)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7015:7040  _grantRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_19:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":6937:7047  function _setupRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\ntag_20:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  tag_22\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7678:7682  role */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7684:7691  account */\n  dup3\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n  shl(0x20, tag_23)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n  0x20\n  shr\n  jump\t// in\ntag_22:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n  tag_24\n  jumpi\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7740:7744  true */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7714  _roles */\n  dup1\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7715:7719  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7729:7736  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n  tag_25\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n  shl(0x20, tag_9)\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_25:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7781:7788  account */\n  dup2\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7775:7779  role */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n  0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\ntag_24:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\ntag_23:\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3107:3111  bool */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3136  _roles */\n  0x01\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3137:3141  role */\n  dup5\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n  0x00\n  add\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  0x00\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3151:3158  account */\n  dup4\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_28:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_30:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_31:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_40\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_30\n  jump\t// in\ntag_40:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_32:\n    /* \"#utility.yul\":641:665   */\n  tag_42\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_31\n  jump\t// in\ntag_42:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_43\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_43:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_33:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_45\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_32\n  jump\t// in\ntag_45:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:1196   */\ntag_3:\n    /* \"#utility.yul\":915:921   */\n  0x00\n    /* \"#utility.yul\":964:966   */\n  0x20\n    /* \"#utility.yul\":952:961   */\n  dup3\n    /* \"#utility.yul\":943:950   */\n  dup5\n    /* \"#utility.yul\":939:962   */\n  sub\n    /* \"#utility.yul\":935:967   */\n  slt\n    /* \"#utility.yul\":932:1051   */\n  iszero\n  tag_47\n  jumpi\n    /* \"#utility.yul\":970:1049   */\n  tag_48\n  tag_28\n  jump\t// in\ntag_48:\n    /* \"#utility.yul\":932:1051   */\ntag_47:\n    /* \"#utility.yul\":1090:1091   */\n  0x00\n    /* \"#utility.yul\":1115:1179   */\n  tag_49\n    /* \"#utility.yul\":1171:1178   */\n  dup5\n    /* \"#utility.yul\":1162:1168   */\n  dup3\n    /* \"#utility.yul\":1151:1160   */\n  dup6\n    /* \"#utility.yul\":1147:1169   */\n  add\n    /* \"#utility.yul\":1115:1179   */\n  tag_33\n  jump\t// in\ntag_49:\n    /* \"#utility.yul\":1105:1179   */\n  swap2\n  pop\n    /* \"#utility.yul\":1061:1189   */\n  pop\n    /* \"#utility.yul\":845:1196   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/StakingPool.sol\":324:3562  contract StakingPool is Ownable, AccessControl {... */\ntag_15:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/StakingPool.sol\":324:3562  contract StakingPool is Ownable, AccessControl {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x817b1cd2\n      gt\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xb6b55f25\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xd5391393\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_19\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x817b1cd2\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9168ae72\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_14\n      jumpi\n      jump(tag_2)\n    tag_20:\n      dup1\n      0x36568abe\n      gt\n      tag_22\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x372500ab\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x6ae674e2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x2e1a7d4d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_4:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      tag_32\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingPool.sol\":2958:3559  function withdraw(uint256 amount) external {... */\n    tag_5:\n      tag_35\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      tag_38\n      jump\t// in\n    tag_35:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_6:\n      tag_39\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      tag_42\n      jump\t// in\n    tag_39:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_7:\n      tag_43\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_44\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_44:\n      tag_45\n      jump\t// in\n    tag_43:\n      stop\n        /* \"contracts/StakingPool.sol\":2592:2950  function claimRewards() external {... */\n    tag_8:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      stop\n        /* \"contracts/StakingPool.sol\":449:474  IERC20 public stakeXToken */\n    tag_9:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_10:\n      tag_52\n      tag_53\n      jump\t// in\n    tag_52:\n      stop\n        /* \"contracts/StakingPool.sol\":481:507  uint256 public totalStaked */\n    tag_11:\n      tag_54\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      tag_56\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_56:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_61\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingPool.sol\":636:677  mapping(address => Staker) public stakers */\n    tag_13:\n      tag_62\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_63\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_63:\n      tag_65\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      tag_66\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_67\n      jump\t// in\n    tag_66:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_15:\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_74\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/StakingPool.sol\":1269:1893  function deposit(uint256 amount) external {... */\n    tag_16:\n      tag_75\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_76\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_76:\n      tag_77\n      jump\t// in\n    tag_75:\n      stop\n        /* \"contracts/StakingPool.sol\":378:440  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_82:\n      tag_83\n      jump\t// in\n    tag_81:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_64\n      jump\t// in\n    tag_85:\n      tag_86\n      jump\t// in\n    tag_84:\n      stop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_26:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2817:2821  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2855:2887  type(IAccessControl).interfaceId */\n      0x7965db0b00000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2851  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2887  interfaceId == type(IAccessControl).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      dup1\n      tag_88\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      tag_89\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2915:2926  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2914  super.supportsInterface */\n      tag_90\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2891:2927  super.supportsInterface(interfaceId) */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2840:2927  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n    tag_88:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2833:2927  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2732:2934  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n    tag_32:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4578:4585  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4610  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4611:4615  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4616  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4604:4626  _roles[role].adminRole */\n      0x01\n      add\n      sload\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4597:4626  return _roles[role].adminRole */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4504:4633  function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":2958:3559  function withdraw(uint256 amount) external {... */\n    tag_38:\n        /* \"contracts/StakingPool.sol\":3026:3027  0 */\n      0x00\n        /* \"contracts/StakingPool.sol\":3016:3022  amount */\n      dup2\n        /* \"contracts/StakingPool.sol\":3016:3027  amount == 0 */\n      sub\n        /* \"contracts/StakingPool.sol\":3012:3089  if (amount == 0) {... */\n      tag_93\n      jumpi\n        /* \"contracts/StakingPool.sol\":3070:3076  amount */\n      dup1\n        /* \"contracts/StakingPool.sol\":3051:3077  InsufficientAmount(amount) */\n      mload(0x40)\n      0x77b8dde300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_94\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_94:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/StakingPool.sol\":3012:3089  if (amount == 0) {... */\n    tag_93:\n        /* \"contracts/StakingPool.sol\":3101:3128  _calculateAndClaimRewards() */\n      tag_95\n        /* \"contracts/StakingPool.sol\":3101:3126  _calculateAndClaimRewards */\n      tag_96\n        /* \"contracts/StakingPool.sol\":3101:3128  _calculateAndClaimRewards() */\n      jump\t// in\n    tag_95:\n        /* \"contracts/StakingPool.sol\":3139:3160  Staker storage staker */\n      0x00\n        /* \"contracts/StakingPool.sol\":3163:3170  stakers */\n      0x04\n        /* \"contracts/StakingPool.sol\":3163:3182  stakers[msg.sender] */\n      0x00\n        /* \"contracts/StakingPool.sol\":3171:3181  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":3163:3182  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingPool.sol\":3139:3182  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":3216:3222  amount */\n      dup2\n        /* \"contracts/StakingPool.sol\":3199:3205  staker */\n      dup2\n        /* \"contracts/StakingPool.sol\":3199:3213  staker.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingPool.sol\":3199:3222  staker.balance < amount */\n      lt\n        /* \"contracts/StakingPool.sol\":3195:3293  if (staker.balance < amount) {... */\n      iszero\n      tag_97\n      jumpi\n        /* \"contracts/StakingPool.sol\":3266:3272  staker */\n      dup1\n        /* \"contracts/StakingPool.sol\":3266:3280  staker.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingPool.sol\":3246:3281  InsufficientBalance(staker.balance) */\n      mload(0x40)\n      0x9266535100000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_98\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/StakingPool.sol\":3195:3293  if (staker.balance < amount) {... */\n    tag_97:\n        /* \"contracts/StakingPool.sol\":3323:3329  amount */\n      dup2\n        /* \"contracts/StakingPool.sol\":3305:3311  staker */\n      dup2\n        /* \"contracts/StakingPool.sol\":3305:3319  staker.balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/StakingPool.sol\":3305:3329  staker.balance -= amount */\n      dup3\n      dup3\n      sload\n      tag_99\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingPool.sol\":3355:3361  amount */\n      dup2\n        /* \"contracts/StakingPool.sol\":3340:3351  totalStaked */\n      0x03\n      0x00\n        /* \"contracts/StakingPool.sol\":3340:3361  totalStaked -= amount */\n      dup3\n      dup3\n      sload\n      tag_101\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_101:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingPool.sol\":3374:3386  bool success */\n      0x00\n        /* \"contracts/StakingPool.sol\":3389:3400  stakeXToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingPool.sol\":3389:3409  stakeXToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/StakingPool.sol\":3410:3420  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":3422:3428  amount */\n      dup6\n        /* \"contracts/StakingPool.sol\":3389:3429  stakeXToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_102\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_102:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_105:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_106\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"contracts/StakingPool.sol\":3374:3429  bool success = stakeXToken.transfer(msg.sender, amount) */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":3445:3452  success */\n      dup1\n        /* \"contracts/StakingPool.sol\":3440:3505  if (!success) {... */\n      tag_108\n      jumpi\n        /* \"contracts/StakingPool.sol\":3476:3493  WithdrawnFailed() */\n      mload(0x40)\n      0x6f3f6cd000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/StakingPool.sol\":3440:3505  if (!success) {... */\n    tag_108:\n        /* \"contracts/StakingPool.sol\":3532:3542  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":3522:3551  Withdrawn(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5\n        /* \"contracts/StakingPool.sol\":3544:3550  amount */\n      dup5\n        /* \"contracts/StakingPool.sol\":3522:3551  Withdrawn(msg.sender, amount) */\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingPool.sol\":3001:3559  {... */\n      pop\n      pop\n        /* \"contracts/StakingPool.sol\":2958:3559  function withdraw(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_42:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      tag_110\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5025:5029  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5024  getRoleAdmin */\n      tag_32\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5012:5030  getRoleAdmin(role) */\n      jump\t// in\n    tag_110:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_112\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_112:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      tag_115\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5053:5057  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5059:5066  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5052  _grantRole */\n      tag_116\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5042:5067  _grantRole(role, account) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4929:5074  function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n    tag_45:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      tag_118\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6154  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6144:6156  _msgSender() */\n      jump\t// in\n    tag_118:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6140  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6133:6156  account == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6125:6208  require(account == _msgSender(), \"AccessControl: can only renounce roles for self\") */\n      tag_120\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_121\n      swap1\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_120:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      tag_123\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6231:6235  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6237:6244  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6230  _revokeRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6219:6245  _revokeRole(role, account) */\n      jump\t// in\n    tag_123:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":6038:6252  function renounceRole(bytes32 role, address account) public virtual override {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":2592:2950  function claimRewards() external {... */\n    tag_47:\n        /* \"contracts/StakingPool.sol\":2636:2657  Staker storage staker */\n      0x00\n        /* \"contracts/StakingPool.sol\":2660:2667  stakers */\n      0x04\n        /* \"contracts/StakingPool.sol\":2660:2679  stakers[msg.sender] */\n      0x00\n        /* \"contracts/StakingPool.sol\":2668:2678  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":2660:2679  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingPool.sol\":2636:2679  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":2690:2705  uint256 rewards */\n      0x00\n        /* \"contracts/StakingPool.sol\":2708:2714  staker */\n      dup2\n        /* \"contracts/StakingPool.sol\":2708:2725  staker.rewardDebt */\n      0x01\n      add\n      sload\n        /* \"contracts/StakingPool.sol\":2690:2725  uint256 rewards = staker.rewardDebt */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":2753:2754  0 */\n      0x00\n        /* \"contracts/StakingPool.sol\":2742:2749  rewards */\n      dup2\n        /* \"contracts/StakingPool.sol\":2742:2754  rewards == 0 */\n      sub\n        /* \"contracts/StakingPool.sol\":2738:2810  if (rewards == 0) {... */\n      tag_126\n      jumpi\n        /* \"contracts/StakingPool.sol\":2778:2798  NoAvailableRewards() */\n      mload(0x40)\n      0x83a8cdb600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/StakingPool.sol\":2738:2810  if (rewards == 0) {... */\n    tag_126:\n        /* \"contracts/StakingPool.sol\":2842:2843  0 */\n      0x00\n        /* \"contracts/StakingPool.sol\":2822:2828  staker */\n      dup3\n        /* \"contracts/StakingPool.sol\":2822:2839  staker.rewardDebt */\n      0x01\n      add\n        /* \"contracts/StakingPool.sol\":2822:2843  staker.rewardDebt = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingPool.sol\":2856:2889  _mintRewards(msg.sender, rewards) */\n      tag_127\n        /* \"contracts/StakingPool.sol\":2869:2879  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":2881:2888  rewards */\n      dup3\n        /* \"contracts/StakingPool.sol\":2856:2868  _mintRewards */\n      tag_128\n        /* \"contracts/StakingPool.sol\":2856:2889  _mintRewards(msg.sender, rewards) */\n      jump\t// in\n    tag_127:\n        /* \"contracts/StakingPool.sol\":2922:2932  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":2907:2942  RewardsClaimed(msg.sender, rewards) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n        /* \"contracts/StakingPool.sol\":2934:2941  rewards */\n      dup3\n        /* \"contracts/StakingPool.sol\":2907:2942  RewardsClaimed(msg.sender, rewards) */\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingPool.sol\":2625:2950  {... */\n      pop\n      pop\n        /* \"contracts/StakingPool.sol\":2592:2950  function claimRewards() external {... */\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":449:474  IERC20 public stakeXToken */\n    tag_49:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_131\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_131:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1915:1916  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1906  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1888:1918  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1824:1925  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":481:507  uint256 public totalStaked */\n    tag_55:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":636:677  mapping(address => Staker) public stakers */\n    tag_65:\n      mstore(0x20, 0x04)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      pop\n      dup4\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3107:3111  bool */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3136  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3137:3141  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3142  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3150  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3151:3158  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3130:3159  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3123:3159  return _roles[role].members[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3021:3166  function hasRole(bytes32 role, address account) public view virtual override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_73:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2198:2202  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2153:2202  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      0x00\n      shl\n      dup2\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":1269:1893  function deposit(uint256 amount) external {... */\n    tag_77:\n        /* \"contracts/StakingPool.sol\":1336:1337  0 */\n      0x00\n        /* \"contracts/StakingPool.sol\":1326:1332  amount */\n      dup2\n        /* \"contracts/StakingPool.sol\":1326:1337  amount == 0 */\n      sub\n        /* \"contracts/StakingPool.sol\":1322:1399  if (amount == 0) {... */\n      tag_139\n      jumpi\n        /* \"contracts/StakingPool.sol\":1380:1386  amount */\n      dup1\n        /* \"contracts/StakingPool.sol\":1361:1387  InsufficientAmount(amount) */\n      mload(0x40)\n      0x77b8dde300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/StakingPool.sol\":1322:1399  if (amount == 0) {... */\n    tag_139:\n        /* \"contracts/StakingPool.sol\":1411:1423  bool success */\n      0x00\n        /* \"contracts/StakingPool.sol\":1426:1437  stakeXToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingPool.sol\":1426:1450  stakeXToken.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/StakingPool.sol\":1465:1475  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":1498:1502  this */\n      address\n        /* \"contracts/StakingPool.sol\":1518:1524  amount */\n      dup6\n        /* \"contracts/StakingPool.sol\":1426:1535  stakeXToken.transferFrom(... */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n    tag_141:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_145\n      swap2\n      swap1\n      tag_107\n      jump\t// in\n    tag_145:\n        /* \"contracts/StakingPool.sol\":1411:1535  bool success = stakeXToken.transferFrom(... */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":1553:1560  success */\n      dup1\n        /* \"contracts/StakingPool.sol\":1548:1622  if (!success) {... */\n      tag_146\n      jumpi\n        /* \"contracts/StakingPool.sol\":1603:1609  amount */\n      dup2\n        /* \"contracts/StakingPool.sol\":1584:1610  InsufficientAmount(amount) */\n      mload(0x40)\n      0x77b8dde300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_147\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/StakingPool.sol\":1548:1622  if (!success) {... */\n    tag_146:\n        /* \"contracts/StakingPool.sol\":1634:1661  _calculateAndClaimRewards() */\n      tag_148\n        /* \"contracts/StakingPool.sol\":1634:1659  _calculateAndClaimRewards */\n      tag_96\n        /* \"contracts/StakingPool.sol\":1634:1661  _calculateAndClaimRewards() */\n      jump\t// in\n    tag_148:\n        /* \"contracts/StakingPool.sol\":1674:1695  Staker storage staker */\n      0x00\n        /* \"contracts/StakingPool.sol\":1698:1705  stakers */\n      0x04\n        /* \"contracts/StakingPool.sol\":1698:1717  stakers[msg.sender] */\n      0x00\n        /* \"contracts/StakingPool.sol\":1706:1716  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":1698:1717  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingPool.sol\":1674:1717  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":1746:1752  amount */\n      dup3\n        /* \"contracts/StakingPool.sol\":1728:1734  staker */\n      dup2\n        /* \"contracts/StakingPool.sol\":1728:1742  staker.balance */\n      0x00\n      add\n      0x00\n        /* \"contracts/StakingPool.sol\":1728:1752  staker.balance += amount */\n      dup3\n      dup3\n      sload\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingPool.sol\":1789:1804  block.timestamp */\n      timestamp\n        /* \"contracts/StakingPool.sol\":1763:1769  staker */\n      dup2\n        /* \"contracts/StakingPool.sol\":1763:1786  staker.stakingStartTime */\n      0x02\n      add\n        /* \"contracts/StakingPool.sol\":1763:1804  staker.stakingStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingPool.sol\":1832:1838  amount */\n      dup3\n        /* \"contracts/StakingPool.sol\":1817:1828  totalStaked */\n      0x03\n      0x00\n        /* \"contracts/StakingPool.sol\":1817:1838  totalStaked += amount */\n      dup3\n      dup3\n      sload\n      tag_151\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_151:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingPool.sol\":1866:1876  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":1856:1885  Deposited(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4\n        /* \"contracts/StakingPool.sol\":1878:1884  amount */\n      dup5\n        /* \"contracts/StakingPool.sol\":1856:1885  Deposited(msg.sender, amount) */\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingPool.sol\":1311:1893  {... */\n      pop\n      pop\n        /* \"contracts/StakingPool.sol\":1269:1893  function deposit(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":378:440  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n    tag_79:\n        /* \"contracts/StakingPool.sol\":416:440  keccak256(\"MINTER_ROLE\") */\n      0x9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6\n        /* \"contracts/StakingPool.sol\":378:440  bytes32 public constant MINTER_ROLE = keccak256(\"MINTER_ROLE\") */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n    tag_83:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      tag_153\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5451:5455  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5450  getRoleAdmin */\n      tag_32\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5438:5456  getRoleAdmin(role) */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      tag_155\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2642:2646  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2641  _checkRole */\n      tag_113\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":2631:2647  _checkRole(role) */\n      jump\t// in\n    tag_155:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      tag_157\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5480:5484  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5486:5493  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5479  _revokeRole */\n      tag_124\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5468:5494  _revokeRole(role, account) */\n      jump\t// in\n    tag_157:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":5354:5501  function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_86:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_159\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2182:2183  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2170  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2162:2184  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2154:2227  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_161\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_162\n      swap1\n      tag_163\n      jump\t// in\n    tag_162:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_161:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      tag_164\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2256:2264  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2255  _transferOwnership */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2237:2265  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_164:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2074:2272  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_90:\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":914:918  bool */\n      0x00\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":952:977  type(IERC165).interfaceId */\n      0x01ffc9a700000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:948  interfaceId */\n      dup3\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":937:977  interfaceId == type(IERC165).interfaceId */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      eq\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":930:977  return interfaceId == type(IERC165).interfaceId */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/introspection/ERC165.sol\":829:984  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":2045:2584  function _calculateAndClaimRewards() internal {... */\n    tag_96:\n        /* \"contracts/StakingPool.sol\":2102:2123  Staker storage staker */\n      0x00\n        /* \"contracts/StakingPool.sol\":2126:2133  stakers */\n      0x04\n        /* \"contracts/StakingPool.sol\":2126:2145  stakers[msg.sender] */\n      0x00\n        /* \"contracts/StakingPool.sol\":2134:2144  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":2126:2145  stakers[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/StakingPool.sol\":2102:2145  Staker storage staker = stakers[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":2179:2180  0 */\n      0x00\n        /* \"contracts/StakingPool.sol\":2162:2168  staker */\n      dup2\n        /* \"contracts/StakingPool.sol\":2162:2176  staker.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingPool.sol\":2162:2180  staker.balance > 0 */\n      gt\n        /* \"contracts/StakingPool.sol\":2158:2523  if (staker.balance > 0) {... */\n      iszero\n      tag_167\n      jumpi\n        /* \"contracts/StakingPool.sol\":2197:2216  uint256 elapsedTime */\n      0x00\n        /* \"contracts/StakingPool.sol\":2237:2243  staker */\n      dup2\n        /* \"contracts/StakingPool.sol\":2237:2260  staker.stakingStartTime */\n      0x02\n      add\n      sload\n        /* \"contracts/StakingPool.sol\":2219:2234  block.timestamp */\n      timestamp\n        /* \"contracts/StakingPool.sol\":2219:2260  block.timestamp - staker.stakingStartTime */\n      tag_168\n      swap2\n      swap1\n      tag_100\n      jump\t// in\n    tag_168:\n        /* \"contracts/StakingPool.sol\":2197:2260  uint256 elapsedTime = block.timestamp - staker.stakingStartTime */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":2275:2289  uint256 reward */\n      0x00\n        /* \"contracts/StakingPool.sol\":2356:2364  365 days */\n      0x01e13380\n        /* \"contracts/StakingPool.sol\":2324:2335  elapsedTime */\n      dup3\n        /* \"contracts/StakingPool.sol\":2317:2320  100 */\n      0x64\n        /* \"contracts/StakingPool.sol\":2312:2313  5 */\n      0x05\n        /* \"contracts/StakingPool.sol\":2295:2301  staker */\n      dup7\n        /* \"contracts/StakingPool.sol\":2295:2309  staker.balance */\n      0x00\n      add\n      sload\n        /* \"contracts/StakingPool.sol\":2295:2313  staker.balance * 5 */\n      tag_169\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"contracts/StakingPool.sol\":2294:2320  (staker.balance * 5) / 100 */\n      tag_171\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_171:\n        /* \"contracts/StakingPool.sol\":2293:2335  ((staker.balance * 5) / 100) * elapsedTime */\n      tag_173\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_173:\n        /* \"contracts/StakingPool.sol\":2292:2364  (((staker.balance * 5) / 100) * elapsedTime) /... */\n      tag_174\n      swap2\n      swap1\n      tag_172\n      jump\t// in\n    tag_174:\n        /* \"contracts/StakingPool.sol\":2275:2364  uint256 reward = (((staker.balance * 5) / 100) * elapsedTime) /... */\n      swap1\n      pop\n        /* \"contracts/StakingPool.sol\":2400:2406  reward */\n      dup1\n        /* \"contracts/StakingPool.sol\":2379:2385  staker */\n      dup4\n        /* \"contracts/StakingPool.sol\":2379:2396  staker.rewardDebt */\n      0x01\n      add\n      0x00\n        /* \"contracts/StakingPool.sol\":2379:2406  staker.rewardDebt += reward */\n      dup3\n      dup3\n      sload\n      tag_175\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_175:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingPool.sol\":2423:2455  _mintRewards(msg.sender, reward) */\n      tag_176\n        /* \"contracts/StakingPool.sol\":2436:2446  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":2448:2454  reward */\n      dup3\n        /* \"contracts/StakingPool.sol\":2423:2435  _mintRewards */\n      tag_128\n        /* \"contracts/StakingPool.sol\":2423:2455  _mintRewards(msg.sender, reward) */\n      jump\t// in\n    tag_176:\n        /* \"contracts/StakingPool.sol\":2492:2502  msg.sender */\n      caller\n        /* \"contracts/StakingPool.sol\":2477:2511  RewardsClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe\n        /* \"contracts/StakingPool.sol\":2504:2510  reward */\n      dup3\n        /* \"contracts/StakingPool.sol\":2477:2511  RewardsClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_177\n      swap2\n      swap1\n      tag_57\n      jump\t// in\n    tag_177:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/StakingPool.sol\":2182:2523  {... */\n      pop\n      pop\n        /* \"contracts/StakingPool.sol\":2158:2523  if (staker.balance > 0) {... */\n    tag_167:\n        /* \"contracts/StakingPool.sol\":2561:2576  block.timestamp */\n      timestamp\n        /* \"contracts/StakingPool.sol\":2535:2541  staker */\n      dup2\n        /* \"contracts/StakingPool.sol\":2535:2558  staker.stakingStartTime */\n      0x02\n      add\n        /* \"contracts/StakingPool.sol\":2535:2576  staker.stakingStartTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/StakingPool.sol\":2091:2584  {... */\n      pop\n        /* \"contracts/StakingPool.sol\":2045:2584  function _calculateAndClaimRewards() internal {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      tag_179\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3537:3541  role */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      tag_180\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3553  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3543:3555  _msgSender() */\n      jump\t// in\n    tag_180:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3536  _checkRole */\n      tag_181\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3526:3556  _checkRole(role, _msgSender()) */\n      jump\t// in\n    tag_179:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3460:3563  function _checkRole(bytes32 role) internal view virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      tag_183\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7678:7682  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7684:7691  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7677  hasRole */\n      tag_70\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7670:7692  hasRole(role, account) */\n      jump\t// in\n    tag_183:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n      tag_184\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7740:7744  true */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7714  _roles */\n      dup1\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7715:7719  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7720  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7728  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7729:7736  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7737  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7708:7744  _roles[role].members[account] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      tag_185\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7800  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7790:7802  _msgSender() */\n      jump\t// in\n    tag_185:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7781:7788  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7775:7779  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7763:7803  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7665:7814  if (!hasRole(role, account)) {... */\n    tag_184:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7587:7820  function _grantRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n    tag_119:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":708:715  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":734:744  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":727:744  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":655:751  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n    tag_124:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      tag_188\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8082:8086  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8088:8095  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8081  hasRole */\n      tag_70\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8074:8096  hasRole(role, account) */\n      jump\t// in\n    tag_188:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n      iszero\n      tag_189\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8144:8149  false */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8118  _roles */\n      0x01\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8119:8123  role */\n      dup5\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8124  _roles[role] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8132  _roles[role].members */\n      0x00\n      add\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8133:8140  account */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8141  _roles[role].members[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8112:8149  _roles[role].members[account] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      tag_190\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8205  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8195:8207  _msgSender() */\n      jump\t// in\n    tag_190:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8186:8193  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8180:8184  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8168:8208  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":8070:8219  if (hasRole(role, account)) {... */\n    tag_189:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":7991:8225  function _revokeRole(bytes32 role, address account) internal virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/StakingPool.sol\":1901:2037  function _mintRewards(address to, uint256 rewardAmount) internal {... */\n    tag_128:\n        /* \"contracts/StakingPool.sol\":1993:2004  stakeXToken */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/StakingPool.sol\":1977:2011  IStakeX(address(stakeXToken)).mint */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40c10f19\n        /* \"contracts/StakingPool.sol\":2012:2014  to */\n      dup4\n        /* \"contracts/StakingPool.sol\":2016:2028  rewardAmount */\n      dup4\n        /* \"contracts/StakingPool.sol\":1977:2029  IStakeX(address(stakeXToken)).mint(to, rewardAmount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap3\n      swap2\n      swap1\n      tag_103\n      jump\t// in\n    tag_192:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_193\n      jumpi\n      revert(0x00, 0x00)\n    tag_193:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_195\n      jumpi\n      returndatacopy(0x00, 0x00, returndatasize)\n      revert(0x00, returndatasize)\n    tag_195:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/StakingPool.sol\":1901:2037  function _mintRewards(address to, uint256 rewardAmount) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_197\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_119\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_197:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_198\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_59\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_198:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_199\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_200\n      swap1\n      tag_201\n      jump\t// in\n    tag_200:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_199:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2515  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2518:2524  _owner */\n      0x00\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2499:2524  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2551  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2540  _owner */\n      0x00\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2534:2551  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2597:2605  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2587:2595  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2566:2606  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2489:2613  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2426:2613  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_181:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      tag_204\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3940:3944  role */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3946:3953  account */\n      dup3\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3939  hasRole */\n      tag_70\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3932:3954  hasRole(role, account) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n      tag_205\n      jumpi\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      tag_206\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4135:4142  account */\n      dup2\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4134  Strings.toHexString */\n      tag_207\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4115:4143  Strings.toHexString(account) */\n      jump\t// in\n    tag_206:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      tag_208\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4242:4246  role */\n      dup4\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4234:4247  uint256(role) */\n      0x00\n      shr\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4249:4251  32 */\n      0x20\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4233  Strings.toHexString */\n      tag_209\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4214:4252  Strings.toHexString(uint256(role), 32) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":4022:4274  abi.encodePacked(... */\n      add(0x20, mload(0x40))\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3970:4306  revert(... */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_212\n      swap2\n      swap1\n      tag_213\n      jump\t// in\n    tag_212:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3927:4317  if (!hasRole(role, account)) {... */\n    tag_205:\n        /* \"@openzeppelin/contracts/access/AccessControl.sol\":3844:4323  function _checkRole(bytes32 role, address account) internal view virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2465:2478  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      tag_215\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2525:2529  addr */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2509:2531  uint256(uint160(addr)) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":343:345  20 */\n      0x14\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      0xff\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2508  toHexString */\n      tag_209\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2497:2549  toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      jump\t// in\n    tag_215:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2490:2549  return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2407:2556  function toHexString(address addr) internal pure returns (string memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n    tag_209:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1893:1906  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1937  bytes memory buffer */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1963:1964  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1954:1960  length */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1951  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1960  2 * length */\n      tag_217\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1950:1964  2 * length + 2 */\n      tag_218\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_218:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1940:1965  new bytes(2 * length + 2) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_219\n      jumpi\n      tag_220\n      tag_221\n      jump\t// in\n    tag_220:\n    tag_219:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x1f\n      add\n      not(0x1f)\n      and\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_222\n      jumpi\n      dup2\n      0x20\n      add\n      0x01\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      dup1\n      dup3\n      add\n      swap2\n      pop\n      pop\n      swap1\n      pop\n    tag_222:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1918:1965  bytes memory buffer = new bytes(2 * length + 2) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      0x3000000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1981  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1982:1983  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1984  buffer[0] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_223\n      jumpi\n      tag_224\n      tag_225\n      jump\t// in\n    tag_224:\n    tag_223:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1975:1990  buffer[0] = \"0\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      0x7800000000000000000000000000000000000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2006  buffer */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2007:2008  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2009  buffer[1] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_226\n      jumpi\n      tag_227\n      tag_225\n      jump\t// in\n    tag_227:\n    tag_226:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2000:2015  buffer[1] = \"x\" */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2039  uint256 i */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2055:2056  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2046:2052  length */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2043  2 */\n      0x02\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2052  2 * length */\n      tag_231\n      swap2\n      swap1\n      tag_170\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2042:2056  2 * length + 1 */\n      tag_232\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_232:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2030:2056  uint256 i = 2 * length + 1 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n    tag_228:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2062:2063  1 */\n      0x01\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2059  i */\n      dup2\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2058:2063  i > 1 */\n      gt\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      iszero\n      tag_229\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2104  _SYMBOLS */\n      0x3031323334353637383961626364656600000000000000000000000000000000\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2113:2116  0xf */\n      0x0f\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2110  value */\n      dup7\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2105:2116  value & 0xf */\n      and\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2096:2117  _SYMBOLS[value & 0xf] */\n      0x10\n      dup2\n      lt\n      tag_233\n      jumpi\n      tag_234\n      tag_225\n      jump\t// in\n    tag_234:\n    tag_233:\n      byte\n      0xf8\n      shl\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2090  buffer */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2091:2092  i */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2093  buffer[i] */\n      dup2\n      mload\n      dup2\n      lt\n      tag_235\n      jumpi\n      tag_236\n      tag_225\n      jump\t// in\n    tag_236:\n    tag_235:\n      0x20\n      add\n      add\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2084:2117  buffer[i] = _SYMBOLS[value & 0xf] */\n      swap1\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      dup2\n      0x00\n      byte\n      swap1\n      mstore8\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2141:2142  4 */\n      0x04\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2131:2142  value >>= 4 */\n      dup6\n      swap1\n      shr\n      swap5\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2065:2068  --i */\n      dup1\n      tag_237\n      swap1\n      tag_238\n      jump\t// in\n    tag_237:\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2025:2153  for (uint256 i = 2 * length + 1; i > 1; --i) {... */\n      jump(tag_228)\n    tag_229:\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2179:2180  0 */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2175  value */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2170:2180  value == 0 */\n      eq\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2162:2217  require(value == 0, \"Strings: hex length insufficient\") */\n      tag_239\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_240\n      swap1\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_239:\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2241:2247  buffer */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":2227:2248  return string(buffer) */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/utils/Strings.sol\":1818:2255  function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_243:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_245:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_246:\n        /* \"#utility.yul\":561:584   */\n      tag_297\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_245\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      0x00\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_298:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_247:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_300\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_246\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_25:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_302\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_303\n      tag_243\n      jump\t// in\n    tag_303:\n        /* \"#utility.yul\":833:952   */\n    tag_302:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_304\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_247\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_248:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_249:\n        /* \"#utility.yul\":1268:1289   */\n      tag_307\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_248\n      jump\t// in\n    tag_307:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_28:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_309\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_249\n      jump\t// in\n    tag_309:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1518:1595   */\n    tag_250:\n        /* \"#utility.yul\":1555:1562   */\n      0x00\n        /* \"#utility.yul\":1584:1589   */\n      dup2\n        /* \"#utility.yul\":1573:1589   */\n      swap1\n      pop\n        /* \"#utility.yul\":1518:1595   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1601:1723   */\n    tag_251:\n        /* \"#utility.yul\":1674:1698   */\n      tag_312\n        /* \"#utility.yul\":1692:1697   */\n      dup2\n        /* \"#utility.yul\":1674:1698   */\n      tag_250\n      jump\t// in\n    tag_312:\n        /* \"#utility.yul\":1667:1672   */\n      dup2\n        /* \"#utility.yul\":1664:1699   */\n      eq\n        /* \"#utility.yul\":1654:1717   */\n      tag_313\n      jumpi\n        /* \"#utility.yul\":1713:1714   */\n      0x00\n        /* \"#utility.yul\":1710:1711   */\n      0x00\n        /* \"#utility.yul\":1703:1715   */\n      revert\n        /* \"#utility.yul\":1654:1717   */\n    tag_313:\n        /* \"#utility.yul\":1601:1723   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1729:1868   */\n    tag_252:\n        /* \"#utility.yul\":1775:1780   */\n      0x00\n        /* \"#utility.yul\":1813:1819   */\n      dup2\n        /* \"#utility.yul\":1800:1820   */\n      calldataload\n        /* \"#utility.yul\":1791:1820   */\n      swap1\n      pop\n        /* \"#utility.yul\":1829:1862   */\n      tag_315\n        /* \"#utility.yul\":1856:1861   */\n      dup2\n        /* \"#utility.yul\":1829:1862   */\n      tag_251\n      jump\t// in\n    tag_315:\n        /* \"#utility.yul\":1729:1868   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1874:2203   */\n    tag_31:\n        /* \"#utility.yul\":1933:1939   */\n      0x00\n        /* \"#utility.yul\":1982:1984   */\n      0x20\n        /* \"#utility.yul\":1970:1979   */\n      dup3\n        /* \"#utility.yul\":1961:1968   */\n      dup5\n        /* \"#utility.yul\":1957:1980   */\n      sub\n        /* \"#utility.yul\":1953:1985   */\n      slt\n        /* \"#utility.yul\":1950:2069   */\n      iszero\n      tag_317\n      jumpi\n        /* \"#utility.yul\":1988:2067   */\n      tag_318\n      tag_243\n      jump\t// in\n    tag_318:\n        /* \"#utility.yul\":1950:2069   */\n    tag_317:\n        /* \"#utility.yul\":2108:2109   */\n      0x00\n        /* \"#utility.yul\":2133:2186   */\n      tag_319\n        /* \"#utility.yul\":2178:2185   */\n      dup5\n        /* \"#utility.yul\":2169:2175   */\n      dup3\n        /* \"#utility.yul\":2158:2167   */\n      dup6\n        /* \"#utility.yul\":2154:2176   */\n      add\n        /* \"#utility.yul\":2133:2186   */\n      tag_252\n      jump\t// in\n    tag_319:\n        /* \"#utility.yul\":2123:2186   */\n      swap2\n      pop\n        /* \"#utility.yul\":2079:2196   */\n      pop\n        /* \"#utility.yul\":1874:2203   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2209:2327   */\n    tag_253:\n        /* \"#utility.yul\":2296:2320   */\n      tag_321\n        /* \"#utility.yul\":2314:2319   */\n      dup2\n        /* \"#utility.yul\":2296:2320   */\n      tag_250\n      jump\t// in\n    tag_321:\n        /* \"#utility.yul\":2291:2294   */\n      dup3\n        /* \"#utility.yul\":2284:2321   */\n      mstore\n        /* \"#utility.yul\":2209:2327   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2333:2555   */\n    tag_34:\n        /* \"#utility.yul\":2426:2430   */\n      0x00\n        /* \"#utility.yul\":2464:2466   */\n      0x20\n        /* \"#utility.yul\":2453:2462   */\n      dup3\n        /* \"#utility.yul\":2449:2467   */\n      add\n        /* \"#utility.yul\":2441:2467   */\n      swap1\n      pop\n        /* \"#utility.yul\":2477:2548   */\n      tag_323\n        /* \"#utility.yul\":2545:2546   */\n      0x00\n        /* \"#utility.yul\":2534:2543   */\n      dup4\n        /* \"#utility.yul\":2530:2547   */\n      add\n        /* \"#utility.yul\":2521:2527   */\n      dup5\n        /* \"#utility.yul\":2477:2548   */\n      tag_253\n      jump\t// in\n    tag_323:\n        /* \"#utility.yul\":2333:2555   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2561:2638   */\n    tag_254:\n        /* \"#utility.yul\":2598:2605   */\n      0x00\n        /* \"#utility.yul\":2627:2632   */\n      dup2\n        /* \"#utility.yul\":2616:2632   */\n      swap1\n      pop\n        /* \"#utility.yul\":2561:2638   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2644:2766   */\n    tag_255:\n        /* \"#utility.yul\":2717:2741   */\n      tag_326\n        /* \"#utility.yul\":2735:2740   */\n      dup2\n        /* \"#utility.yul\":2717:2741   */\n      tag_254\n      jump\t// in\n    tag_326:\n        /* \"#utility.yul\":2710:2715   */\n      dup2\n        /* \"#utility.yul\":2707:2742   */\n      eq\n        /* \"#utility.yul\":2697:2760   */\n      tag_327\n      jumpi\n        /* \"#utility.yul\":2756:2757   */\n      0x00\n        /* \"#utility.yul\":2753:2754   */\n      0x00\n        /* \"#utility.yul\":2746:2758   */\n      revert\n        /* \"#utility.yul\":2697:2760   */\n    tag_327:\n        /* \"#utility.yul\":2644:2766   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2772:2911   */\n    tag_256:\n        /* \"#utility.yul\":2818:2823   */\n      0x00\n        /* \"#utility.yul\":2856:2862   */\n      dup2\n        /* \"#utility.yul\":2843:2863   */\n      calldataload\n        /* \"#utility.yul\":2834:2863   */\n      swap1\n      pop\n        /* \"#utility.yul\":2872:2905   */\n      tag_329\n        /* \"#utility.yul\":2899:2904   */\n      dup2\n        /* \"#utility.yul\":2872:2905   */\n      tag_255\n      jump\t// in\n    tag_329:\n        /* \"#utility.yul\":2772:2911   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2917:3246   */\n    tag_37:\n        /* \"#utility.yul\":2976:2982   */\n      0x00\n        /* \"#utility.yul\":3025:3027   */\n      0x20\n        /* \"#utility.yul\":3013:3022   */\n      dup3\n        /* \"#utility.yul\":3004:3011   */\n      dup5\n        /* \"#utility.yul\":3000:3023   */\n      sub\n        /* \"#utility.yul\":2996:3028   */\n      slt\n        /* \"#utility.yul\":2993:3112   */\n      iszero\n      tag_331\n      jumpi\n        /* \"#utility.yul\":3031:3110   */\n      tag_332\n      tag_243\n      jump\t// in\n    tag_332:\n        /* \"#utility.yul\":2993:3112   */\n    tag_331:\n        /* \"#utility.yul\":3151:3152   */\n      0x00\n        /* \"#utility.yul\":3176:3229   */\n      tag_333\n        /* \"#utility.yul\":3221:3228   */\n      dup5\n        /* \"#utility.yul\":3212:3218   */\n      dup3\n        /* \"#utility.yul\":3201:3210   */\n      dup6\n        /* \"#utility.yul\":3197:3219   */\n      add\n        /* \"#utility.yul\":3176:3229   */\n      tag_256\n      jump\t// in\n    tag_333:\n        /* \"#utility.yul\":3166:3229   */\n      swap2\n      pop\n        /* \"#utility.yul\":3122:3239   */\n      pop\n        /* \"#utility.yul\":2917:3246   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3252:3378   */\n    tag_257:\n        /* \"#utility.yul\":3289:3296   */\n      0x00\n        /* \"#utility.yul\":3329:3371   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":3322:3327   */\n      dup3\n        /* \"#utility.yul\":3318:3372   */\n      and\n        /* \"#utility.yul\":3307:3372   */\n      swap1\n      pop\n        /* \"#utility.yul\":3252:3378   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3384:3480   */\n    tag_258:\n        /* \"#utility.yul\":3421:3428   */\n      0x00\n        /* \"#utility.yul\":3450:3474   */\n      tag_336\n        /* \"#utility.yul\":3468:3473   */\n      dup3\n        /* \"#utility.yul\":3450:3474   */\n      tag_257\n      jump\t// in\n    tag_336:\n        /* \"#utility.yul\":3439:3474   */\n      swap1\n      pop\n        /* \"#utility.yul\":3384:3480   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3486:3608   */\n    tag_259:\n        /* \"#utility.yul\":3559:3583   */\n      tag_338\n        /* \"#utility.yul\":3577:3582   */\n      dup2\n        /* \"#utility.yul\":3559:3583   */\n      tag_258\n      jump\t// in\n    tag_338:\n        /* \"#utility.yul\":3552:3557   */\n      dup2\n        /* \"#utility.yul\":3549:3584   */\n      eq\n        /* \"#utility.yul\":3539:3602   */\n      tag_339\n      jumpi\n        /* \"#utility.yul\":3598:3599   */\n      0x00\n        /* \"#utility.yul\":3595:3596   */\n      0x00\n        /* \"#utility.yul\":3588:3600   */\n      revert\n        /* \"#utility.yul\":3539:3602   */\n    tag_339:\n        /* \"#utility.yul\":3486:3608   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3614:3753   */\n    tag_260:\n        /* \"#utility.yul\":3660:3665   */\n      0x00\n        /* \"#utility.yul\":3698:3704   */\n      dup2\n        /* \"#utility.yul\":3685:3705   */\n      calldataload\n        /* \"#utility.yul\":3676:3705   */\n      swap1\n      pop\n        /* \"#utility.yul\":3714:3747   */\n      tag_341\n        /* \"#utility.yul\":3741:3746   */\n      dup2\n        /* \"#utility.yul\":3714:3747   */\n      tag_259\n      jump\t// in\n    tag_341:\n        /* \"#utility.yul\":3614:3753   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:4233   */\n    tag_41:\n        /* \"#utility.yul\":3827:3833   */\n      0x00\n        /* \"#utility.yul\":3835:3841   */\n      0x00\n        /* \"#utility.yul\":3884:3886   */\n      0x40\n        /* \"#utility.yul\":3872:3881   */\n      dup4\n        /* \"#utility.yul\":3863:3870   */\n      dup6\n        /* \"#utility.yul\":3859:3882   */\n      sub\n        /* \"#utility.yul\":3855:3887   */\n      slt\n        /* \"#utility.yul\":3852:3971   */\n      iszero\n      tag_343\n      jumpi\n        /* \"#utility.yul\":3890:3969   */\n      tag_344\n      tag_243\n      jump\t// in\n    tag_344:\n        /* \"#utility.yul\":3852:3971   */\n    tag_343:\n        /* \"#utility.yul\":4010:4011   */\n      0x00\n        /* \"#utility.yul\":4035:4088   */\n      tag_345\n        /* \"#utility.yul\":4080:4087   */\n      dup6\n        /* \"#utility.yul\":4071:4077   */\n      dup3\n        /* \"#utility.yul\":4060:4069   */\n      dup7\n        /* \"#utility.yul\":4056:4078   */\n      add\n        /* \"#utility.yul\":4035:4088   */\n      tag_252\n      jump\t// in\n    tag_345:\n        /* \"#utility.yul\":4025:4088   */\n      swap3\n      pop\n        /* \"#utility.yul\":3981:4098   */\n      pop\n        /* \"#utility.yul\":4137:4139   */\n      0x20\n        /* \"#utility.yul\":4163:4216   */\n      tag_346\n        /* \"#utility.yul\":4208:4215   */\n      dup6\n        /* \"#utility.yul\":4199:4205   */\n      dup3\n        /* \"#utility.yul\":4188:4197   */\n      dup7\n        /* \"#utility.yul\":4184:4206   */\n      add\n        /* \"#utility.yul\":4163:4216   */\n      tag_260\n      jump\t// in\n    tag_346:\n        /* \"#utility.yul\":4153:4216   */\n      swap2\n      pop\n        /* \"#utility.yul\":4108:4226   */\n      pop\n        /* \"#utility.yul\":3759:4233   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4239:4299   */\n    tag_261:\n        /* \"#utility.yul\":4267:4270   */\n      0x00\n        /* \"#utility.yul\":4288:4293   */\n      dup2\n        /* \"#utility.yul\":4281:4293   */\n      swap1\n      pop\n        /* \"#utility.yul\":4239:4299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4305:4447   */\n    tag_262:\n        /* \"#utility.yul\":4355:4364   */\n      0x00\n        /* \"#utility.yul\":4388:4441   */\n      tag_349\n        /* \"#utility.yul\":4406:4440   */\n      tag_350\n        /* \"#utility.yul\":4415:4439   */\n      tag_351\n        /* \"#utility.yul\":4433:4438   */\n      dup5\n        /* \"#utility.yul\":4415:4439   */\n      tag_257\n      jump\t// in\n    tag_351:\n        /* \"#utility.yul\":4406:4440   */\n      tag_261\n      jump\t// in\n    tag_350:\n        /* \"#utility.yul\":4388:4441   */\n      tag_257\n      jump\t// in\n    tag_349:\n        /* \"#utility.yul\":4375:4441   */\n      swap1\n      pop\n        /* \"#utility.yul\":4305:4447   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4453:4579   */\n    tag_263:\n        /* \"#utility.yul\":4503:4512   */\n      0x00\n        /* \"#utility.yul\":4536:4573   */\n      tag_353\n        /* \"#utility.yul\":4567:4572   */\n      dup3\n        /* \"#utility.yul\":4536:4573   */\n      tag_262\n      jump\t// in\n    tag_353:\n        /* \"#utility.yul\":4523:4573   */\n      swap1\n      pop\n        /* \"#utility.yul\":4453:4579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4585:4725   */\n    tag_264:\n        /* \"#utility.yul\":4649:4658   */\n      0x00\n        /* \"#utility.yul\":4682:4719   */\n      tag_355\n        /* \"#utility.yul\":4713:4718   */\n      dup3\n        /* \"#utility.yul\":4682:4719   */\n      tag_263\n      jump\t// in\n    tag_355:\n        /* \"#utility.yul\":4669:4719   */\n      swap1\n      pop\n        /* \"#utility.yul\":4585:4725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4731:4890   */\n    tag_265:\n        /* \"#utility.yul\":4832:4883   */\n      tag_357\n        /* \"#utility.yul\":4877:4882   */\n      dup2\n        /* \"#utility.yul\":4832:4883   */\n      tag_264\n      jump\t// in\n    tag_357:\n        /* \"#utility.yul\":4827:4830   */\n      dup3\n        /* \"#utility.yul\":4820:4884   */\n      mstore\n        /* \"#utility.yul\":4731:4890   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4896:5146   */\n    tag_51:\n        /* \"#utility.yul\":5003:5007   */\n      0x00\n        /* \"#utility.yul\":5041:5043   */\n      0x20\n        /* \"#utility.yul\":5030:5039   */\n      dup3\n        /* \"#utility.yul\":5026:5044   */\n      add\n        /* \"#utility.yul\":5018:5044   */\n      swap1\n      pop\n        /* \"#utility.yul\":5054:5139   */\n      tag_359\n        /* \"#utility.yul\":5136:5137   */\n      0x00\n        /* \"#utility.yul\":5125:5134   */\n      dup4\n        /* \"#utility.yul\":5121:5138   */\n      add\n        /* \"#utility.yul\":5112:5118   */\n      dup5\n        /* \"#utility.yul\":5054:5139   */\n      tag_265\n      jump\t// in\n    tag_359:\n        /* \"#utility.yul\":4896:5146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5152:5270   */\n    tag_266:\n        /* \"#utility.yul\":5239:5263   */\n      tag_361\n        /* \"#utility.yul\":5257:5262   */\n      dup2\n        /* \"#utility.yul\":5239:5263   */\n      tag_254\n      jump\t// in\n    tag_361:\n        /* \"#utility.yul\":5234:5237   */\n      dup3\n        /* \"#utility.yul\":5227:5264   */\n      mstore\n        /* \"#utility.yul\":5152:5270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5276:5498   */\n    tag_57:\n        /* \"#utility.yul\":5369:5373   */\n      0x00\n        /* \"#utility.yul\":5407:5409   */\n      0x20\n        /* \"#utility.yul\":5396:5405   */\n      dup3\n        /* \"#utility.yul\":5392:5410   */\n      add\n        /* \"#utility.yul\":5384:5410   */\n      swap1\n      pop\n        /* \"#utility.yul\":5420:5491   */\n      tag_363\n        /* \"#utility.yul\":5488:5489   */\n      0x00\n        /* \"#utility.yul\":5477:5486   */\n      dup4\n        /* \"#utility.yul\":5473:5490   */\n      add\n        /* \"#utility.yul\":5464:5470   */\n      dup5\n        /* \"#utility.yul\":5420:5491   */\n      tag_266\n      jump\t// in\n    tag_363:\n        /* \"#utility.yul\":5276:5498   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5504:5622   */\n    tag_267:\n        /* \"#utility.yul\":5591:5615   */\n      tag_365\n        /* \"#utility.yul\":5609:5614   */\n      dup2\n        /* \"#utility.yul\":5591:5615   */\n      tag_258\n      jump\t// in\n    tag_365:\n        /* \"#utility.yul\":5586:5589   */\n      dup3\n        /* \"#utility.yul\":5579:5616   */\n      mstore\n        /* \"#utility.yul\":5504:5622   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5628:5850   */\n    tag_61:\n        /* \"#utility.yul\":5721:5725   */\n      0x00\n        /* \"#utility.yul\":5759:5761   */\n      0x20\n        /* \"#utility.yul\":5748:5757   */\n      dup3\n        /* \"#utility.yul\":5744:5762   */\n      add\n        /* \"#utility.yul\":5736:5762   */\n      swap1\n      pop\n        /* \"#utility.yul\":5772:5843   */\n      tag_367\n        /* \"#utility.yul\":5840:5841   */\n      0x00\n        /* \"#utility.yul\":5829:5838   */\n      dup4\n        /* \"#utility.yul\":5825:5842   */\n      add\n        /* \"#utility.yul\":5816:5822   */\n      dup5\n        /* \"#utility.yul\":5772:5843   */\n      tag_267\n      jump\t// in\n    tag_367:\n        /* \"#utility.yul\":5628:5850   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5856:6185   */\n    tag_64:\n        /* \"#utility.yul\":5915:5921   */\n      0x00\n        /* \"#utility.yul\":5964:5966   */\n      0x20\n        /* \"#utility.yul\":5952:5961   */\n      dup3\n        /* \"#utility.yul\":5943:5950   */\n      dup5\n        /* \"#utility.yul\":5939:5962   */\n      sub\n        /* \"#utility.yul\":5935:5967   */\n      slt\n        /* \"#utility.yul\":5932:6051   */\n      iszero\n      tag_369\n      jumpi\n        /* \"#utility.yul\":5970:6049   */\n      tag_370\n      tag_243\n      jump\t// in\n    tag_370:\n        /* \"#utility.yul\":5932:6051   */\n    tag_369:\n        /* \"#utility.yul\":6090:6091   */\n      0x00\n        /* \"#utility.yul\":6115:6168   */\n      tag_371\n        /* \"#utility.yul\":6160:6167   */\n      dup5\n        /* \"#utility.yul\":6151:6157   */\n      dup3\n        /* \"#utility.yul\":6140:6149   */\n      dup6\n        /* \"#utility.yul\":6136:6158   */\n      add\n        /* \"#utility.yul\":6115:6168   */\n      tag_260\n      jump\t// in\n    tag_371:\n        /* \"#utility.yul\":6105:6168   */\n      swap2\n      pop\n        /* \"#utility.yul\":6061:6178   */\n      pop\n        /* \"#utility.yul\":5856:6185   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6191:6633   */\n    tag_67:\n        /* \"#utility.yul\":6340:6344   */\n      0x00\n        /* \"#utility.yul\":6378:6380   */\n      0x60\n        /* \"#utility.yul\":6367:6376   */\n      dup3\n        /* \"#utility.yul\":6363:6381   */\n      add\n        /* \"#utility.yul\":6355:6381   */\n      swap1\n      pop\n        /* \"#utility.yul\":6391:6462   */\n      tag_373\n        /* \"#utility.yul\":6459:6460   */\n      0x00\n        /* \"#utility.yul\":6448:6457   */\n      dup4\n        /* \"#utility.yul\":6444:6461   */\n      add\n        /* \"#utility.yul\":6435:6441   */\n      dup7\n        /* \"#utility.yul\":6391:6462   */\n      tag_266\n      jump\t// in\n    tag_373:\n        /* \"#utility.yul\":6472:6544   */\n      tag_374\n        /* \"#utility.yul\":6540:6542   */\n      0x20\n        /* \"#utility.yul\":6529:6538   */\n      dup4\n        /* \"#utility.yul\":6525:6543   */\n      add\n        /* \"#utility.yul\":6516:6522   */\n      dup6\n        /* \"#utility.yul\":6472:6544   */\n      tag_266\n      jump\t// in\n    tag_374:\n        /* \"#utility.yul\":6554:6626   */\n      tag_375\n        /* \"#utility.yul\":6622:6624   */\n      0x40\n        /* \"#utility.yul\":6611:6620   */\n      dup4\n        /* \"#utility.yul\":6607:6625   */\n      add\n        /* \"#utility.yul\":6598:6604   */\n      dup5\n        /* \"#utility.yul\":6554:6626   */\n      tag_266\n      jump\t// in\n    tag_375:\n        /* \"#utility.yul\":6191:6633   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6639:6819   */\n    tag_268:\n        /* \"#utility.yul\":6687:6764   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6684:6685   */\n      0x00\n        /* \"#utility.yul\":6677:6765   */\n      mstore\n        /* \"#utility.yul\":6784:6788   */\n      0x11\n        /* \"#utility.yul\":6781:6782   */\n      0x04\n        /* \"#utility.yul\":6774:6789   */\n      mstore\n        /* \"#utility.yul\":6808:6812   */\n      0x24\n        /* \"#utility.yul\":6805:6806   */\n      0x00\n        /* \"#utility.yul\":6798:6813   */\n      revert\n        /* \"#utility.yul\":6825:7019   */\n    tag_100:\n        /* \"#utility.yul\":6865:6869   */\n      0x00\n        /* \"#utility.yul\":6885:6905   */\n      tag_378\n        /* \"#utility.yul\":6903:6904   */\n      dup3\n        /* \"#utility.yul\":6885:6905   */\n      tag_254\n      jump\t// in\n    tag_378:\n        /* \"#utility.yul\":6880:6905   */\n      swap2\n      pop\n        /* \"#utility.yul\":6919:6939   */\n      tag_379\n        /* \"#utility.yul\":6937:6938   */\n      dup4\n        /* \"#utility.yul\":6919:6939   */\n      tag_254\n      jump\t// in\n    tag_379:\n        /* \"#utility.yul\":6914:6939   */\n      swap3\n      pop\n        /* \"#utility.yul\":6963:6964   */\n      dup3\n        /* \"#utility.yul\":6960:6961   */\n      dup3\n        /* \"#utility.yul\":6956:6965   */\n      sub\n        /* \"#utility.yul\":6948:6965   */\n      swap1\n      pop\n        /* \"#utility.yul\":6987:6988   */\n      dup2\n        /* \"#utility.yul\":6981:6985   */\n      dup2\n        /* \"#utility.yul\":6978:6989   */\n      gt\n        /* \"#utility.yul\":6975:7012   */\n      iszero\n      tag_380\n      jumpi\n        /* \"#utility.yul\":6992:7010   */\n      tag_381\n      tag_268\n      jump\t// in\n    tag_381:\n        /* \"#utility.yul\":6975:7012   */\n    tag_380:\n        /* \"#utility.yul\":6825:7019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7025:7357   */\n    tag_103:\n        /* \"#utility.yul\":7146:7150   */\n      0x00\n        /* \"#utility.yul\":7184:7186   */\n      0x40\n        /* \"#utility.yul\":7173:7182   */\n      dup3\n        /* \"#utility.yul\":7169:7187   */\n      add\n        /* \"#utility.yul\":7161:7187   */\n      swap1\n      pop\n        /* \"#utility.yul\":7197:7268   */\n      tag_383\n        /* \"#utility.yul\":7265:7266   */\n      0x00\n        /* \"#utility.yul\":7254:7263   */\n      dup4\n        /* \"#utility.yul\":7250:7267   */\n      add\n        /* \"#utility.yul\":7241:7247   */\n      dup6\n        /* \"#utility.yul\":7197:7268   */\n      tag_267\n      jump\t// in\n    tag_383:\n        /* \"#utility.yul\":7278:7350   */\n      tag_384\n        /* \"#utility.yul\":7346:7348   */\n      0x20\n        /* \"#utility.yul\":7335:7344   */\n      dup4\n        /* \"#utility.yul\":7331:7349   */\n      add\n        /* \"#utility.yul\":7322:7328   */\n      dup5\n        /* \"#utility.yul\":7278:7350   */\n      tag_266\n      jump\t// in\n    tag_384:\n        /* \"#utility.yul\":7025:7357   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7363:7479   */\n    tag_269:\n        /* \"#utility.yul\":7433:7454   */\n      tag_386\n        /* \"#utility.yul\":7448:7453   */\n      dup2\n        /* \"#utility.yul\":7433:7454   */\n      tag_248\n      jump\t// in\n    tag_386:\n        /* \"#utility.yul\":7426:7431   */\n      dup2\n        /* \"#utility.yul\":7423:7455   */\n      eq\n        /* \"#utility.yul\":7413:7473   */\n      tag_387\n      jumpi\n        /* \"#utility.yul\":7469:7470   */\n      0x00\n        /* \"#utility.yul\":7466:7467   */\n      0x00\n        /* \"#utility.yul\":7459:7471   */\n      revert\n        /* \"#utility.yul\":7413:7473   */\n    tag_387:\n        /* \"#utility.yul\":7363:7479   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7485:7622   */\n    tag_270:\n        /* \"#utility.yul\":7539:7544   */\n      0x00\n        /* \"#utility.yul\":7570:7576   */\n      dup2\n        /* \"#utility.yul\":7564:7577   */\n      mload\n        /* \"#utility.yul\":7555:7577   */\n      swap1\n      pop\n        /* \"#utility.yul\":7586:7616   */\n      tag_389\n        /* \"#utility.yul\":7610:7615   */\n      dup2\n        /* \"#utility.yul\":7586:7616   */\n      tag_269\n      jump\t// in\n    tag_389:\n        /* \"#utility.yul\":7485:7622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7628:7973   */\n    tag_107:\n        /* \"#utility.yul\":7695:7701   */\n      0x00\n        /* \"#utility.yul\":7744:7746   */\n      0x20\n        /* \"#utility.yul\":7732:7741   */\n      dup3\n        /* \"#utility.yul\":7723:7730   */\n      dup5\n        /* \"#utility.yul\":7719:7742   */\n      sub\n        /* \"#utility.yul\":7715:7747   */\n      slt\n        /* \"#utility.yul\":7712:7831   */\n      iszero\n      tag_391\n      jumpi\n        /* \"#utility.yul\":7750:7829   */\n      tag_392\n      tag_243\n      jump\t// in\n    tag_392:\n        /* \"#utility.yul\":7712:7831   */\n    tag_391:\n        /* \"#utility.yul\":7870:7871   */\n      0x00\n        /* \"#utility.yul\":7895:7956   */\n      tag_393\n        /* \"#utility.yul\":7948:7955   */\n      dup5\n        /* \"#utility.yul\":7939:7945   */\n      dup3\n        /* \"#utility.yul\":7928:7937   */\n      dup6\n        /* \"#utility.yul\":7924:7946   */\n      add\n        /* \"#utility.yul\":7895:7956   */\n      tag_270\n      jump\t// in\n    tag_393:\n        /* \"#utility.yul\":7885:7956   */\n      swap2\n      pop\n        /* \"#utility.yul\":7841:7966   */\n      pop\n        /* \"#utility.yul\":7628:7973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7979:8148   */\n    tag_271:\n        /* \"#utility.yul\":8063:8074   */\n      0x00\n        /* \"#utility.yul\":8097:8103   */\n      dup3\n        /* \"#utility.yul\":8092:8095   */\n      dup3\n        /* \"#utility.yul\":8085:8104   */\n      mstore\n        /* \"#utility.yul\":8137:8141   */\n      0x20\n        /* \"#utility.yul\":8132:8135   */\n      dup3\n        /* \"#utility.yul\":8128:8142   */\n      add\n        /* \"#utility.yul\":8113:8142   */\n      swap1\n      pop\n        /* \"#utility.yul\":7979:8148   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8154:8388   */\n    tag_272:\n        /* \"#utility.yul\":8294:8328   */\n      0x416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365\n        /* \"#utility.yul\":8290:8291   */\n      0x00\n        /* \"#utility.yul\":8282:8288   */\n      dup3\n        /* \"#utility.yul\":8278:8292   */\n      add\n        /* \"#utility.yul\":8271:8329   */\n      mstore\n        /* \"#utility.yul\":8363:8380   */\n      0x20726f6c657320666f722073656c660000000000000000000000000000000000\n        /* \"#utility.yul\":8358:8360   */\n      0x20\n        /* \"#utility.yul\":8350:8356   */\n      dup3\n        /* \"#utility.yul\":8346:8361   */\n      add\n        /* \"#utility.yul\":8339:8381   */\n      mstore\n        /* \"#utility.yul\":8154:8388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8394:8760   */\n    tag_273:\n        /* \"#utility.yul\":8536:8539   */\n      0x00\n        /* \"#utility.yul\":8557:8624   */\n      tag_397\n        /* \"#utility.yul\":8621:8623   */\n      0x2f\n        /* \"#utility.yul\":8616:8619   */\n      dup4\n        /* \"#utility.yul\":8557:8624   */\n      tag_271\n      jump\t// in\n    tag_397:\n        /* \"#utility.yul\":8550:8624   */\n      swap2\n      pop\n        /* \"#utility.yul\":8633:8726   */\n      tag_398\n        /* \"#utility.yul\":8722:8725   */\n      dup3\n        /* \"#utility.yul\":8633:8726   */\n      tag_272\n      jump\t// in\n    tag_398:\n        /* \"#utility.yul\":8751:8753   */\n      0x40\n        /* \"#utility.yul\":8746:8749   */\n      dup3\n        /* \"#utility.yul\":8742:8754   */\n      add\n        /* \"#utility.yul\":8735:8754   */\n      swap1\n      pop\n        /* \"#utility.yul\":8394:8760   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8766:9185   */\n    tag_122:\n        /* \"#utility.yul\":8932:8936   */\n      0x00\n        /* \"#utility.yul\":8970:8972   */\n      0x20\n        /* \"#utility.yul\":8959:8968   */\n      dup3\n        /* \"#utility.yul\":8955:8973   */\n      add\n        /* \"#utility.yul\":8947:8973   */\n      swap1\n      pop\n        /* \"#utility.yul\":9019:9028   */\n      dup2\n        /* \"#utility.yul\":9013:9017   */\n      dup2\n        /* \"#utility.yul\":9009:9029   */\n      sub\n        /* \"#utility.yul\":9005:9006   */\n      0x00\n        /* \"#utility.yul\":8994:9003   */\n      dup4\n        /* \"#utility.yul\":8990:9007   */\n      add\n        /* \"#utility.yul\":8983:9030   */\n      mstore\n        /* \"#utility.yul\":9047:9178   */\n      tag_400\n        /* \"#utility.yul\":9173:9177   */\n      dup2\n        /* \"#utility.yul\":9047:9178   */\n      tag_273\n      jump\t// in\n    tag_400:\n        /* \"#utility.yul\":9039:9178   */\n      swap1\n      pop\n        /* \"#utility.yul\":8766:9185   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9191:9633   */\n    tag_142:\n        /* \"#utility.yul\":9340:9344   */\n      0x00\n        /* \"#utility.yul\":9378:9380   */\n      0x60\n        /* \"#utility.yul\":9367:9376   */\n      dup3\n        /* \"#utility.yul\":9363:9381   */\n      add\n        /* \"#utility.yul\":9355:9381   */\n      swap1\n      pop\n        /* \"#utility.yul\":9391:9462   */\n      tag_402\n        /* \"#utility.yul\":9459:9460   */\n      0x00\n        /* \"#utility.yul\":9448:9457   */\n      dup4\n        /* \"#utility.yul\":9444:9461   */\n      add\n        /* \"#utility.yul\":9435:9441   */\n      dup7\n        /* \"#utility.yul\":9391:9462   */\n      tag_267\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":9472:9544   */\n      tag_403\n        /* \"#utility.yul\":9540:9542   */\n      0x20\n        /* \"#utility.yul\":9529:9538   */\n      dup4\n        /* \"#utility.yul\":9525:9543   */\n      add\n        /* \"#utility.yul\":9516:9522   */\n      dup6\n        /* \"#utility.yul\":9472:9544   */\n      tag_267\n      jump\t// in\n    tag_403:\n        /* \"#utility.yul\":9554:9626   */\n      tag_404\n        /* \"#utility.yul\":9622:9624   */\n      0x40\n        /* \"#utility.yul\":9611:9620   */\n      dup4\n        /* \"#utility.yul\":9607:9625   */\n      add\n        /* \"#utility.yul\":9598:9604   */\n      dup5\n        /* \"#utility.yul\":9554:9626   */\n      tag_266\n      jump\t// in\n    tag_404:\n        /* \"#utility.yul\":9191:9633   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9639:9830   */\n    tag_150:\n        /* \"#utility.yul\":9679:9682   */\n      0x00\n        /* \"#utility.yul\":9698:9718   */\n      tag_406\n        /* \"#utility.yul\":9716:9717   */\n      dup3\n        /* \"#utility.yul\":9698:9718   */\n      tag_254\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":9693:9718   */\n      swap2\n      pop\n        /* \"#utility.yul\":9732:9752   */\n      tag_407\n        /* \"#utility.yul\":9750:9751   */\n      dup4\n        /* \"#utility.yul\":9732:9752   */\n      tag_254\n      jump\t// in\n    tag_407:\n        /* \"#utility.yul\":9727:9752   */\n      swap3\n      pop\n        /* \"#utility.yul\":9775:9776   */\n      dup3\n        /* \"#utility.yul\":9772:9773   */\n      dup3\n        /* \"#utility.yul\":9768:9777   */\n      add\n        /* \"#utility.yul\":9761:9777   */\n      swap1\n      pop\n        /* \"#utility.yul\":9796:9799   */\n      dup1\n        /* \"#utility.yul\":9793:9794   */\n      dup3\n        /* \"#utility.yul\":9790:9800   */\n      gt\n        /* \"#utility.yul\":9787:9823   */\n      iszero\n      tag_408\n      jumpi\n        /* \"#utility.yul\":9803:9821   */\n      tag_409\n      tag_268\n      jump\t// in\n    tag_409:\n        /* \"#utility.yul\":9787:9823   */\n    tag_408:\n        /* \"#utility.yul\":9639:9830   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9836:10061   */\n    tag_274:\n        /* \"#utility.yul\":9976:10010   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":9972:9973   */\n      0x00\n        /* \"#utility.yul\":9964:9970   */\n      dup3\n        /* \"#utility.yul\":9960:9974   */\n      add\n        /* \"#utility.yul\":9953:10011   */\n      mstore\n        /* \"#utility.yul\":10045:10053   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10040:10042   */\n      0x20\n        /* \"#utility.yul\":10032:10038   */\n      dup3\n        /* \"#utility.yul\":10028:10043   */\n      add\n        /* \"#utility.yul\":10021:10054   */\n      mstore\n        /* \"#utility.yul\":9836:10061   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10067:10433   */\n    tag_275:\n        /* \"#utility.yul\":10209:10212   */\n      0x00\n        /* \"#utility.yul\":10230:10297   */\n      tag_412\n        /* \"#utility.yul\":10294:10296   */\n      0x26\n        /* \"#utility.yul\":10289:10292   */\n      dup4\n        /* \"#utility.yul\":10230:10297   */\n      tag_271\n      jump\t// in\n    tag_412:\n        /* \"#utility.yul\":10223:10297   */\n      swap2\n      pop\n        /* \"#utility.yul\":10306:10399   */\n      tag_413\n        /* \"#utility.yul\":10395:10398   */\n      dup3\n        /* \"#utility.yul\":10306:10399   */\n      tag_274\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":10424:10426   */\n      0x40\n        /* \"#utility.yul\":10419:10422   */\n      dup3\n        /* \"#utility.yul\":10415:10427   */\n      add\n        /* \"#utility.yul\":10408:10427   */\n      swap1\n      pop\n        /* \"#utility.yul\":10067:10433   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10439:10858   */\n    tag_163:\n        /* \"#utility.yul\":10605:10609   */\n      0x00\n        /* \"#utility.yul\":10643:10645   */\n      0x20\n        /* \"#utility.yul\":10632:10641   */\n      dup3\n        /* \"#utility.yul\":10628:10646   */\n      add\n        /* \"#utility.yul\":10620:10646   */\n      swap1\n      pop\n        /* \"#utility.yul\":10692:10701   */\n      dup2\n        /* \"#utility.yul\":10686:10690   */\n      dup2\n        /* \"#utility.yul\":10682:10702   */\n      sub\n        /* \"#utility.yul\":10678:10679   */\n      0x00\n        /* \"#utility.yul\":10667:10676   */\n      dup4\n        /* \"#utility.yul\":10663:10680   */\n      add\n        /* \"#utility.yul\":10656:10703   */\n      mstore\n        /* \"#utility.yul\":10720:10851   */\n      tag_415\n        /* \"#utility.yul\":10846:10850   */\n      dup2\n        /* \"#utility.yul\":10720:10851   */\n      tag_275\n      jump\t// in\n    tag_415:\n        /* \"#utility.yul\":10712:10851   */\n      swap1\n      pop\n        /* \"#utility.yul\":10439:10858   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:11274   */\n    tag_170:\n        /* \"#utility.yul\":10904:10911   */\n      0x00\n        /* \"#utility.yul\":10927:10947   */\n      tag_417\n        /* \"#utility.yul\":10945:10946   */\n      dup3\n        /* \"#utility.yul\":10927:10947   */\n      tag_254\n      jump\t// in\n    tag_417:\n        /* \"#utility.yul\":10922:10947   */\n      swap2\n      pop\n        /* \"#utility.yul\":10961:10981   */\n      tag_418\n        /* \"#utility.yul\":10979:10980   */\n      dup4\n        /* \"#utility.yul\":10961:10981   */\n      tag_254\n      jump\t// in\n    tag_418:\n        /* \"#utility.yul\":10956:10981   */\n      swap3\n      pop\n        /* \"#utility.yul\":11016:11017   */\n      dup3\n        /* \"#utility.yul\":11013:11014   */\n      dup3\n        /* \"#utility.yul\":11009:11018   */\n      mul\n        /* \"#utility.yul\":11038:11068   */\n      tag_419\n        /* \"#utility.yul\":11056:11067   */\n      dup2\n        /* \"#utility.yul\":11038:11068   */\n      tag_254\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":11027:11068   */\n      swap2\n      pop\n        /* \"#utility.yul\":11217:11218   */\n      dup3\n        /* \"#utility.yul\":11208:11215   */\n      dup3\n        /* \"#utility.yul\":11204:11219   */\n      div\n        /* \"#utility.yul\":11201:11202   */\n      dup5\n        /* \"#utility.yul\":11198:11220   */\n      eq\n        /* \"#utility.yul\":11178:11179   */\n      dup4\n        /* \"#utility.yul\":11171:11180   */\n      iszero\n        /* \"#utility.yul\":11151:11234   */\n      or\n        /* \"#utility.yul\":11128:11267   */\n      tag_420\n      jumpi\n        /* \"#utility.yul\":11247:11265   */\n      tag_421\n      tag_268\n      jump\t// in\n    tag_421:\n        /* \"#utility.yul\":11128:11267   */\n    tag_420:\n        /* \"#utility.yul\":10912:11274   */\n      pop\n        /* \"#utility.yul\":10864:11274   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11280:11460   */\n    tag_276:\n        /* \"#utility.yul\":11328:11405   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11325:11326   */\n      0x00\n        /* \"#utility.yul\":11318:11406   */\n      mstore\n        /* \"#utility.yul\":11425:11429   */\n      0x12\n        /* \"#utility.yul\":11422:11423   */\n      0x04\n        /* \"#utility.yul\":11415:11430   */\n      mstore\n        /* \"#utility.yul\":11449:11453   */\n      0x24\n        /* \"#utility.yul\":11446:11447   */\n      0x00\n        /* \"#utility.yul\":11439:11454   */\n      revert\n        /* \"#utility.yul\":11466:11651   */\n    tag_172:\n        /* \"#utility.yul\":11506:11507   */\n      0x00\n        /* \"#utility.yul\":11523:11543   */\n      tag_424\n        /* \"#utility.yul\":11541:11542   */\n      dup3\n        /* \"#utility.yul\":11523:11543   */\n      tag_254\n      jump\t// in\n    tag_424:\n        /* \"#utility.yul\":11518:11543   */\n      swap2\n      pop\n        /* \"#utility.yul\":11557:11577   */\n      tag_425\n        /* \"#utility.yul\":11575:11576   */\n      dup4\n        /* \"#utility.yul\":11557:11577   */\n      tag_254\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":11552:11577   */\n      swap3\n      pop\n        /* \"#utility.yul\":11596:11597   */\n      dup3\n        /* \"#utility.yul\":11586:11621   */\n      tag_426\n      jumpi\n        /* \"#utility.yul\":11601:11619   */\n      tag_427\n      tag_276\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":11586:11621   */\n    tag_426:\n        /* \"#utility.yul\":11643:11644   */\n      dup3\n        /* \"#utility.yul\":11640:11641   */\n      dup3\n        /* \"#utility.yul\":11636:11645   */\n      div\n        /* \"#utility.yul\":11631:11645   */\n      swap1\n      pop\n        /* \"#utility.yul\":11466:11651   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11657:11839   */\n    tag_277:\n        /* \"#utility.yul\":11797:11831   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":11793:11794   */\n      0x00\n        /* \"#utility.yul\":11785:11791   */\n      dup3\n        /* \"#utility.yul\":11781:11795   */\n      add\n        /* \"#utility.yul\":11774:11832   */\n      mstore\n        /* \"#utility.yul\":11657:11839   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11845:12211   */\n    tag_278:\n        /* \"#utility.yul\":11987:11990   */\n      0x00\n        /* \"#utility.yul\":12008:12075   */\n      tag_430\n        /* \"#utility.yul\":12072:12074   */\n      0x20\n        /* \"#utility.yul\":12067:12070   */\n      dup4\n        /* \"#utility.yul\":12008:12075   */\n      tag_271\n      jump\t// in\n    tag_430:\n        /* \"#utility.yul\":12001:12075   */\n      swap2\n      pop\n        /* \"#utility.yul\":12084:12177   */\n      tag_431\n        /* \"#utility.yul\":12173:12176   */\n      dup3\n        /* \"#utility.yul\":12084:12177   */\n      tag_277\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":12202:12204   */\n      0x20\n        /* \"#utility.yul\":12197:12200   */\n      dup3\n        /* \"#utility.yul\":12193:12205   */\n      add\n        /* \"#utility.yul\":12186:12205   */\n      swap1\n      pop\n        /* \"#utility.yul\":11845:12211   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12217:12636   */\n    tag_201:\n        /* \"#utility.yul\":12383:12387   */\n      0x00\n        /* \"#utility.yul\":12421:12423   */\n      0x20\n        /* \"#utility.yul\":12410:12419   */\n      dup3\n        /* \"#utility.yul\":12406:12424   */\n      add\n        /* \"#utility.yul\":12398:12424   */\n      swap1\n      pop\n        /* \"#utility.yul\":12470:12479   */\n      dup2\n        /* \"#utility.yul\":12464:12468   */\n      dup2\n        /* \"#utility.yul\":12460:12480   */\n      sub\n        /* \"#utility.yul\":12456:12457   */\n      0x00\n        /* \"#utility.yul\":12445:12454   */\n      dup4\n        /* \"#utility.yul\":12441:12458   */\n      add\n        /* \"#utility.yul\":12434:12481   */\n      mstore\n        /* \"#utility.yul\":12498:12629   */\n      tag_433\n        /* \"#utility.yul\":12624:12628   */\n      dup2\n        /* \"#utility.yul\":12498:12629   */\n      tag_278\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":12490:12629   */\n      swap1\n      pop\n        /* \"#utility.yul\":12217:12636   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12642:12790   */\n    tag_279:\n        /* \"#utility.yul\":12744:12755   */\n      0x00\n        /* \"#utility.yul\":12781:12784   */\n      dup2\n        /* \"#utility.yul\":12766:12784   */\n      swap1\n      pop\n        /* \"#utility.yul\":12642:12790   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12796:12969   */\n    tag_280:\n        /* \"#utility.yul\":12936:12961   */\n      0x416363657373436f6e74726f6c3a206163636f756e7420000000000000000000\n        /* \"#utility.yul\":12932:12933   */\n      0x00\n        /* \"#utility.yul\":12924:12930   */\n      dup3\n        /* \"#utility.yul\":12920:12934   */\n      add\n        /* \"#utility.yul\":12913:12962   */\n      mstore\n        /* \"#utility.yul\":12796:12969   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12975:13377   */\n    tag_281:\n        /* \"#utility.yul\":13135:13138   */\n      0x00\n        /* \"#utility.yul\":13156:13241   */\n      tag_437\n        /* \"#utility.yul\":13238:13240   */\n      0x17\n        /* \"#utility.yul\":13233:13236   */\n      dup4\n        /* \"#utility.yul\":13156:13241   */\n      tag_279\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":13149:13241   */\n      swap2\n      pop\n        /* \"#utility.yul\":13250:13343   */\n      tag_438\n        /* \"#utility.yul\":13339:13342   */\n      dup3\n        /* \"#utility.yul\":13250:13343   */\n      tag_280\n      jump\t// in\n    tag_438:\n        /* \"#utility.yul\":13368:13370   */\n      0x17\n        /* \"#utility.yul\":13363:13366   */\n      dup3\n        /* \"#utility.yul\":13359:13371   */\n      add\n        /* \"#utility.yul\":13352:13371   */\n      swap1\n      pop\n        /* \"#utility.yul\":12975:13377   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13383:13482   */\n    tag_282:\n        /* \"#utility.yul\":13435:13441   */\n      0x00\n        /* \"#utility.yul\":13469:13474   */\n      dup2\n        /* \"#utility.yul\":13463:13475   */\n      mload\n        /* \"#utility.yul\":13453:13475   */\n      swap1\n      pop\n        /* \"#utility.yul\":13383:13482   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13488:13627   */\n    tag_283:\n        /* \"#utility.yul\":13577:13583   */\n      dup3\n        /* \"#utility.yul\":13572:13575   */\n      dup2\n        /* \"#utility.yul\":13567:13570   */\n      dup4\n        /* \"#utility.yul\":13561:13584   */\n      mcopy\n        /* \"#utility.yul\":13618:13619   */\n      0x00\n        /* \"#utility.yul\":13609:13615   */\n      dup4\n        /* \"#utility.yul\":13604:13607   */\n      dup4\n        /* \"#utility.yul\":13600:13616   */\n      add\n        /* \"#utility.yul\":13593:13620   */\n      mstore\n        /* \"#utility.yul\":13488:13627   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13633:14023   */\n    tag_284:\n        /* \"#utility.yul\":13739:13742   */\n      0x00\n        /* \"#utility.yul\":13767:13806   */\n      tag_442\n        /* \"#utility.yul\":13800:13805   */\n      dup3\n        /* \"#utility.yul\":13767:13806   */\n      tag_282\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":13822:13911   */\n      tag_443\n        /* \"#utility.yul\":13904:13910   */\n      dup2\n        /* \"#utility.yul\":13899:13902   */\n      dup6\n        /* \"#utility.yul\":13822:13911   */\n      tag_279\n      jump\t// in\n    tag_443:\n        /* \"#utility.yul\":13815:13911   */\n      swap4\n      pop\n        /* \"#utility.yul\":13920:13985   */\n      tag_444\n        /* \"#utility.yul\":13978:13984   */\n      dup2\n        /* \"#utility.yul\":13973:13976   */\n      dup6\n        /* \"#utility.yul\":13966:13970   */\n      0x20\n        /* \"#utility.yul\":13959:13964   */\n      dup7\n        /* \"#utility.yul\":13955:13971   */\n      add\n        /* \"#utility.yul\":13920:13985   */\n      tag_283\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":14010:14016   */\n      dup1\n        /* \"#utility.yul\":14005:14008   */\n      dup5\n        /* \"#utility.yul\":14001:14017   */\n      add\n        /* \"#utility.yul\":13994:14017   */\n      swap2\n      pop\n        /* \"#utility.yul\":13743:14023   */\n      pop\n        /* \"#utility.yul\":13633:14023   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14029:14196   */\n    tag_285:\n        /* \"#utility.yul\":14169:14188   */\n      0x206973206d697373696e6720726f6c6520000000000000000000000000000000\n        /* \"#utility.yul\":14165:14166   */\n      0x00\n        /* \"#utility.yul\":14157:14163   */\n      dup3\n        /* \"#utility.yul\":14153:14167   */\n      add\n        /* \"#utility.yul\":14146:14189   */\n      mstore\n        /* \"#utility.yul\":14029:14196   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14202:14604   */\n    tag_286:\n        /* \"#utility.yul\":14362:14365   */\n      0x00\n        /* \"#utility.yul\":14383:14468   */\n      tag_447\n        /* \"#utility.yul\":14465:14467   */\n      0x11\n        /* \"#utility.yul\":14460:14463   */\n      dup4\n        /* \"#utility.yul\":14383:14468   */\n      tag_279\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":14376:14468   */\n      swap2\n      pop\n        /* \"#utility.yul\":14477:14570   */\n      tag_448\n        /* \"#utility.yul\":14566:14569   */\n      dup3\n        /* \"#utility.yul\":14477:14570   */\n      tag_285\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":14595:14597   */\n      0x11\n        /* \"#utility.yul\":14590:14593   */\n      dup3\n        /* \"#utility.yul\":14586:14598   */\n      add\n        /* \"#utility.yul\":14579:14598   */\n      swap1\n      pop\n        /* \"#utility.yul\":14202:14604   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14610:15577   */\n    tag_211:\n        /* \"#utility.yul\":14992:14995   */\n      0x00\n        /* \"#utility.yul\":15014:15162   */\n      tag_450\n        /* \"#utility.yul\":15158:15161   */\n      dup3\n        /* \"#utility.yul\":15014:15162   */\n      tag_281\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":15007:15162   */\n      swap2\n      pop\n        /* \"#utility.yul\":15179:15274   */\n      tag_451\n        /* \"#utility.yul\":15270:15273   */\n      dup3\n        /* \"#utility.yul\":15261:15267   */\n      dup6\n        /* \"#utility.yul\":15179:15274   */\n      tag_284\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":15172:15274   */\n      swap2\n      pop\n        /* \"#utility.yul\":15291:15439   */\n      tag_452\n        /* \"#utility.yul\":15435:15438   */\n      dup3\n        /* \"#utility.yul\":15291:15439   */\n      tag_286\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":15284:15439   */\n      swap2\n      pop\n        /* \"#utility.yul\":15456:15551   */\n      tag_453\n        /* \"#utility.yul\":15547:15550   */\n      dup3\n        /* \"#utility.yul\":15538:15544   */\n      dup5\n        /* \"#utility.yul\":15456:15551   */\n      tag_284\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":15449:15551   */\n      swap2\n      pop\n        /* \"#utility.yul\":15568:15571   */\n      dup2\n        /* \"#utility.yul\":15561:15571   */\n      swap1\n      pop\n        /* \"#utility.yul\":14610:15577   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15583:15685   */\n    tag_287:\n        /* \"#utility.yul\":15624:15630   */\n      0x00\n        /* \"#utility.yul\":15675:15677   */\n      0x1f\n        /* \"#utility.yul\":15671:15678   */\n      not\n        /* \"#utility.yul\":15666:15668   */\n      0x1f\n        /* \"#utility.yul\":15659:15664   */\n      dup4\n        /* \"#utility.yul\":15655:15669   */\n      add\n        /* \"#utility.yul\":15651:15679   */\n      and\n        /* \"#utility.yul\":15641:15679   */\n      swap1\n      pop\n        /* \"#utility.yul\":15583:15685   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15691:16068   */\n    tag_288:\n        /* \"#utility.yul\":15779:15782   */\n      0x00\n        /* \"#utility.yul\":15807:15846   */\n      tag_456\n        /* \"#utility.yul\":15840:15845   */\n      dup3\n        /* \"#utility.yul\":15807:15846   */\n      tag_282\n      jump\t// in\n    tag_456:\n        /* \"#utility.yul\":15862:15933   */\n      tag_457\n        /* \"#utility.yul\":15926:15932   */\n      dup2\n        /* \"#utility.yul\":15921:15924   */\n      dup6\n        /* \"#utility.yul\":15862:15933   */\n      tag_271\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":15855:15933   */\n      swap4\n      pop\n        /* \"#utility.yul\":15942:16007   */\n      tag_458\n        /* \"#utility.yul\":16000:16006   */\n      dup2\n        /* \"#utility.yul\":15995:15998   */\n      dup6\n        /* \"#utility.yul\":15988:15992   */\n      0x20\n        /* \"#utility.yul\":15981:15986   */\n      dup7\n        /* \"#utility.yul\":15977:15993   */\n      add\n        /* \"#utility.yul\":15942:16007   */\n      tag_283\n      jump\t// in\n    tag_458:\n        /* \"#utility.yul\":16032:16061   */\n      tag_459\n        /* \"#utility.yul\":16054:16060   */\n      dup2\n        /* \"#utility.yul\":16032:16061   */\n      tag_287\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":16027:16030   */\n      dup5\n        /* \"#utility.yul\":16023:16062   */\n      add\n        /* \"#utility.yul\":16016:16062   */\n      swap2\n      pop\n        /* \"#utility.yul\":15783:16068   */\n      pop\n        /* \"#utility.yul\":15691:16068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16074:16387   */\n    tag_213:\n        /* \"#utility.yul\":16187:16191   */\n      0x00\n        /* \"#utility.yul\":16225:16227   */\n      0x20\n        /* \"#utility.yul\":16214:16223   */\n      dup3\n        /* \"#utility.yul\":16210:16228   */\n      add\n        /* \"#utility.yul\":16202:16228   */\n      swap1\n      pop\n        /* \"#utility.yul\":16274:16283   */\n      dup2\n        /* \"#utility.yul\":16268:16272   */\n      dup2\n        /* \"#utility.yul\":16264:16284   */\n      sub\n        /* \"#utility.yul\":16260:16261   */\n      0x00\n        /* \"#utility.yul\":16249:16258   */\n      dup4\n        /* \"#utility.yul\":16245:16262   */\n      add\n        /* \"#utility.yul\":16238:16285   */\n      mstore\n        /* \"#utility.yul\":16302:16380   */\n      tag_461\n        /* \"#utility.yul\":16375:16379   */\n      dup2\n        /* \"#utility.yul\":16366:16372   */\n      dup5\n        /* \"#utility.yul\":16302:16380   */\n      tag_288\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":16294:16380   */\n      swap1\n      pop\n        /* \"#utility.yul\":16074:16387   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16393:16573   */\n    tag_221:\n        /* \"#utility.yul\":16441:16518   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16438:16439   */\n      0x00\n        /* \"#utility.yul\":16431:16519   */\n      mstore\n        /* \"#utility.yul\":16538:16542   */\n      0x41\n        /* \"#utility.yul\":16535:16536   */\n      0x04\n        /* \"#utility.yul\":16528:16543   */\n      mstore\n        /* \"#utility.yul\":16562:16566   */\n      0x24\n        /* \"#utility.yul\":16559:16560   */\n      0x00\n        /* \"#utility.yul\":16552:16567   */\n      revert\n        /* \"#utility.yul\":16579:16759   */\n    tag_225:\n        /* \"#utility.yul\":16627:16704   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":16624:16625   */\n      0x00\n        /* \"#utility.yul\":16617:16705   */\n      mstore\n        /* \"#utility.yul\":16724:16728   */\n      0x32\n        /* \"#utility.yul\":16721:16722   */\n      0x04\n        /* \"#utility.yul\":16714:16729   */\n      mstore\n        /* \"#utility.yul\":16748:16752   */\n      0x24\n        /* \"#utility.yul\":16745:16746   */\n      0x00\n        /* \"#utility.yul\":16738:16753   */\n      revert\n        /* \"#utility.yul\":16765:16936   */\n    tag_238:\n        /* \"#utility.yul\":16804:16807   */\n      0x00\n        /* \"#utility.yul\":16827:16851   */\n      tag_465\n        /* \"#utility.yul\":16845:16850   */\n      dup3\n        /* \"#utility.yul\":16827:16851   */\n      tag_254\n      jump\t// in\n    tag_465:\n        /* \"#utility.yul\":16818:16851   */\n      swap2\n      pop\n        /* \"#utility.yul\":16873:16877   */\n      0x00\n        /* \"#utility.yul\":16866:16871   */\n      dup3\n        /* \"#utility.yul\":16863:16878   */\n      sub\n        /* \"#utility.yul\":16860:16901   */\n      tag_466\n      jumpi\n        /* \"#utility.yul\":16881:16899   */\n      tag_467\n      tag_268\n      jump\t// in\n    tag_467:\n        /* \"#utility.yul\":16860:16901   */\n    tag_466:\n        /* \"#utility.yul\":16928:16929   */\n      0x01\n        /* \"#utility.yul\":16921:16926   */\n      dup3\n        /* \"#utility.yul\":16917:16930   */\n      sub\n        /* \"#utility.yul\":16910:16930   */\n      swap1\n      pop\n        /* \"#utility.yul\":16765:16936   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16942:17124   */\n    tag_289:\n        /* \"#utility.yul\":17082:17116   */\n      0x537472696e67733a20686578206c656e67746820696e73756666696369656e74\n        /* \"#utility.yul\":17078:17079   */\n      0x00\n        /* \"#utility.yul\":17070:17076   */\n      dup3\n        /* \"#utility.yul\":17066:17080   */\n      add\n        /* \"#utility.yul\":17059:17117   */\n      mstore\n        /* \"#utility.yul\":16942:17124   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17130:17496   */\n    tag_290:\n        /* \"#utility.yul\":17272:17275   */\n      0x00\n        /* \"#utility.yul\":17293:17360   */\n      tag_470\n        /* \"#utility.yul\":17357:17359   */\n      0x20\n        /* \"#utility.yul\":17352:17355   */\n      dup4\n        /* \"#utility.yul\":17293:17360   */\n      tag_271\n      jump\t// in\n    tag_470:\n        /* \"#utility.yul\":17286:17360   */\n      swap2\n      pop\n        /* \"#utility.yul\":17369:17462   */\n      tag_471\n        /* \"#utility.yul\":17458:17461   */\n      dup3\n        /* \"#utility.yul\":17369:17462   */\n      tag_289\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":17487:17489   */\n      0x20\n        /* \"#utility.yul\":17482:17485   */\n      dup3\n        /* \"#utility.yul\":17478:17490   */\n      add\n        /* \"#utility.yul\":17471:17490   */\n      swap1\n      pop\n        /* \"#utility.yul\":17130:17496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17502:17921   */\n    tag_241:\n        /* \"#utility.yul\":17668:17672   */\n      0x00\n        /* \"#utility.yul\":17706:17708   */\n      0x20\n        /* \"#utility.yul\":17695:17704   */\n      dup3\n        /* \"#utility.yul\":17691:17709   */\n      add\n        /* \"#utility.yul\":17683:17709   */\n      swap1\n      pop\n        /* \"#utility.yul\":17755:17764   */\n      dup2\n        /* \"#utility.yul\":17749:17753   */\n      dup2\n        /* \"#utility.yul\":17745:17765   */\n      sub\n        /* \"#utility.yul\":17741:17742   */\n      0x00\n        /* \"#utility.yul\":17730:17739   */\n      dup4\n        /* \"#utility.yul\":17726:17743   */\n      add\n        /* \"#utility.yul\":17719:17766   */\n      mstore\n        /* \"#utility.yul\":17783:17914   */\n      tag_473\n        /* \"#utility.yul\":17909:17913   */\n      dup2\n        /* \"#utility.yul\":17783:17914   */\n      tag_290\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":17775:17914   */\n      swap1\n      pop\n        /* \"#utility.yul\":17502:17921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200c01c0ed9c5d5c441e0f4e2458386c589e0778cd8bd32ca02a92b3907377895864736f6c634300081c0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1958": {
									"entryPoint": null,
									"id": 1958,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_412": {
									"entryPoint": null,
									"id": 412,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 433,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_591": {
									"entryPoint": 213,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setupRole_223": {
									"entryPoint": 413,
									"id": 223,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_500": {
									"entryPoint": 220,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 663,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 837,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 857,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 798,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 767,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 763,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 815,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1199:12",
										"nodeType": "YulBlock",
										"src": "0:1199:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "922:274:12",
													"nodeType": "YulBlock",
													"src": "922:274:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "968:83:12",
																"nodeType": "YulBlock",
																"src": "968:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "970:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "970:77:12"
																			},
																			"nativeSrc": "970:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "970:79:12"
																		},
																		"nativeSrc": "970:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "970:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "943:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "943:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "952:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "952:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "939:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "939:3:12"
																		},
																		"nativeSrc": "939:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "939:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "964:2:12",
																		"nodeType": "YulLiteral",
																		"src": "964:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "935:3:12"
																},
																"nativeSrc": "935:32:12",
																"nodeType": "YulFunctionCall",
																"src": "935:32:12"
															},
															"nativeSrc": "932:119:12",
															"nodeType": "YulIf",
															"src": "932:119:12"
														},
														{
															"nativeSrc": "1061:128:12",
															"nodeType": "YulBlock",
															"src": "1061:128:12",
															"statements": [
																{
																	"nativeSrc": "1076:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1076:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1080:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1080:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1105:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1105:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1151:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1151:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1162:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1162:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1147:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1147:3:12"
																				},
																				"nativeSrc": "1147:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1147:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1171:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1171:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1115:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1115:31:12"
																		},
																		"nativeSrc": "1115:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1115:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1105:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1105:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "845:351:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "892:9:12",
														"nodeType": "YulTypedName",
														"src": "892:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "903:7:12",
														"nodeType": "YulTypedName",
														"src": "903:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "915:6:12",
														"nodeType": "YulTypedName",
														"src": "915:6:12",
														"type": ""
													}
												],
												"src": "845:351:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060405161203138038061203183398181016040528101906100319190610359565b61004d6100426100d560201b60201c565b6100dc60201b60201c565b8060025f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061009f5f5f1b3361019d60201b60201c565b6100cf7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a63061019d60201b60201c565b50610384565b5f33905090565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6101ad82826101b160201b60201c565b5050565b6101c1828261029760201b60201c565b610293576001805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055506102386100d560201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610328826102ff565b9050919050565b6103388161031e565b8114610342575f5ffd5b50565b5f815190506103538161032f565b92915050565b5f6020828403121561036e5761036d6102fb565b5b5f61037b84828501610345565b91505092915050565b611ca0806103915f395ff3fe608060405234801561000f575f5ffd5b5060043610610109575f3560e01c8063817b1cd2116100a0578063a217fddf1161006f578063a217fddf14610291578063b6b55f25146102af578063d5391393146102cb578063d547741f146102e9578063f2fde38b1461030557610109565b8063817b1cd2146101f35780638da5cb5b146102115780639168ae721461022f57806391d148541461026157610109565b806336568abe116100dc57806336568abe146101a5578063372500ab146101c15780636ae674e2146101cb578063715018a6146101e957610109565b806301ffc9a71461010d578063248a9ca31461013d5780632e1a7d4d1461016d5780632f2ff15d14610189575b5f5ffd5b61012760048036038101906101229190611386565b610321565b60405161013491906113cb565b60405180910390f35b61015760048036038101906101529190611417565b61039a565b6040516101649190611451565b60405180910390f35b6101876004803603810190610182919061149d565b6103b7565b005b6101a3600480360381019061019e9190611522565b6105e8565b005b6101bf60048036038101906101ba9190611522565b610609565b005b6101c961068c565b005b6101d3610772565b6040516101e091906115bb565b60405180910390f35b6101f1610797565b005b6101fb6107aa565b60405161020891906115e3565b60405180910390f35b6102196107b0565b604051610226919061160b565b60405180910390f35b61024960048036038101906102449190611624565b6107d7565b6040516102589392919061164f565b60405180910390f35b61027b60048036038101906102769190611522565b6107fd565b60405161028891906113cb565b60405180910390f35b610299610861565b6040516102a69190611451565b60405180910390f35b6102c960048036038101906102c4919061149d565b610867565b005b6102d3610a63565b6040516102e09190611451565b60405180910390f35b61030360048036038101906102fe9190611522565b610a87565b005b61031f600480360381019061031a9190611624565b610aa8565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610393575061039282610b2a565b5b9050919050565b5f60015f8381526020019081526020015f20600101549050919050565b5f81036103fb57806040517f77b8dde30000000000000000000000000000000000000000000000000000000081526004016103f291906115e3565b60405180910390fd5b610403610b93565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f0154101561048e57805f01546040517f9266535100000000000000000000000000000000000000000000000000000000815260040161048591906115e3565b60405180910390fd5b81815f015f8282546104a091906116b1565b925050819055508160035f8282546104b891906116b1565b925050819055505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161051c9291906116e4565b6020604051808303815f875af1158015610538573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055c9190611735565b905080610595576040517f6f3f6cd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040516105db91906115e3565b60405180910390a2505050565b6105f18261039a565b6105fa81610cab565b6106048383610cbf565b505050565b610611610d99565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461067e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610675906117e0565b60405180910390fd5b6106888282610da0565b5050565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816001015490505f810361070d576040517f83a8cdb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82600101819055506107203382610e7b565b3373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8260405161076691906115e3565b60405180910390a25050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61079f610f08565b6107a85f610f86565b565b60035481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b5f81036108ab57806040517f77b8dde30000000000000000000000000000000000000000000000000000000081526004016108a291906115e3565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161090a939291906117fe565b6020604051808303815f875af1158015610926573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094a9190611735565b90508061098e57816040517f77b8dde300000000000000000000000000000000000000000000000000000000815260040161098591906115e3565b60405180910390fd5b610996610b93565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f015f8282546109e89190611833565b925050819055504281600201819055508260035f828254610a099190611833565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c484604051610a5691906115e3565b60405180910390a2505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610a908261039a565b610a9981610cab565b610aa38383610da0565b505050565b610ab0610f08565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b15906118d6565b60405180910390fd5b610b2781610f86565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01541115610c9f575f816002015442610bef91906116b1565b90505f6301e133808260646005865f0154610c0a91906118f4565b610c149190611962565b610c1e91906118f4565b610c289190611962565b905080836001015f828254610c3d9190611833565b92505081905550610c4e3382610e7b565b3373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe82604051610c9491906115e3565b60405180910390a250505b42816002018190555050565b610cbc81610cb7610d99565b611047565b50565b610cc982826107fd565b610d95576001805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d3a610d99565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b610daa82826107fd565b15610e77575f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610e1c610d99565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401610ed79291906116e4565b5f604051808303815f87803b158015610eee575f5ffd5b505af1158015610f00573d5f5f3e3d5ffd5b505050505050565b610f10610d99565b73ffffffffffffffffffffffffffffffffffffffff16610f2e6107b0565b73ffffffffffffffffffffffffffffffffffffffff1614610f84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7b906119dc565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61105182826107fd565b6110c75761105e816110cb565b61106b835f1c60206110f8565b60405160200161107c929190611ae0565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110be9190611b61565b60405180910390fd5b5050565b60606110f18273ffffffffffffffffffffffffffffffffffffffff16601460ff166110f8565b9050919050565b60605f600283600261110a91906118f4565b6111149190611833565b67ffffffffffffffff81111561112d5761112c611b81565b5b6040519080825280601f01601f19166020018201604052801561115f5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f8151811061119657611195611bae565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106111f9576111f8611bae565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f600184600261123791906118f4565b6112419190611833565b90505b60018111156112e0577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061128357611282611bae565b5b1a60f81b82828151811061129a57611299611bae565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c9450806112d990611bdb565b9050611244565b505f8414611323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131a90611c4c565b60405180910390fd5b8091505092915050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61136581611331565b811461136f575f5ffd5b50565b5f813590506113808161135c565b92915050565b5f6020828403121561139b5761139a61132d565b5b5f6113a884828501611372565b91505092915050565b5f8115159050919050565b6113c5816113b1565b82525050565b5f6020820190506113de5f8301846113bc565b92915050565b5f819050919050565b6113f6816113e4565b8114611400575f5ffd5b50565b5f81359050611411816113ed565b92915050565b5f6020828403121561142c5761142b61132d565b5b5f61143984828501611403565b91505092915050565b61144b816113e4565b82525050565b5f6020820190506114645f830184611442565b92915050565b5f819050919050565b61147c8161146a565b8114611486575f5ffd5b50565b5f8135905061149781611473565b92915050565b5f602082840312156114b2576114b161132d565b5b5f6114bf84828501611489565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114f1826114c8565b9050919050565b611501816114e7565b811461150b575f5ffd5b50565b5f8135905061151c816114f8565b92915050565b5f5f604083850312156115385761153761132d565b5b5f61154585828601611403565b92505060206115568582860161150e565b9150509250929050565b5f819050919050565b5f61158361157e611579846114c8565b611560565b6114c8565b9050919050565b5f61159482611569565b9050919050565b5f6115a58261158a565b9050919050565b6115b58161159b565b82525050565b5f6020820190506115ce5f8301846115ac565b92915050565b6115dd8161146a565b82525050565b5f6020820190506115f65f8301846115d4565b92915050565b611605816114e7565b82525050565b5f60208201905061161e5f8301846115fc565b92915050565b5f602082840312156116395761163861132d565b5b5f6116468482850161150e565b91505092915050565b5f6060820190506116625f8301866115d4565b61166f60208301856115d4565b61167c60408301846115d4565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116bb8261146a565b91506116c68361146a565b92508282039050818111156116de576116dd611684565b5b92915050565b5f6040820190506116f75f8301856115fc565b61170460208301846115d4565b9392505050565b611714816113b1565b811461171e575f5ffd5b50565b5f8151905061172f8161170b565b92915050565b5f6020828403121561174a5761174961132d565b5b5f61175784828501611721565b91505092915050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f6117ca602f83611760565b91506117d582611770565b604082019050919050565b5f6020820190508181035f8301526117f7816117be565b9050919050565b5f6060820190506118115f8301866115fc565b61181e60208301856115fc565b61182b60408301846115d4565b949350505050565b5f61183d8261146a565b91506118488361146a565b92508282019050808211156118605761185f611684565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6118c0602683611760565b91506118cb82611866565b604082019050919050565b5f6020820190508181035f8301526118ed816118b4565b9050919050565b5f6118fe8261146a565b91506119098361146a565b92508282026119178161146a565b9150828204841483151761192e5761192d611684565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61196c8261146a565b91506119778361146a565b92508261198757611986611935565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6119c6602083611760565b91506119d182611992565b602082019050919050565b5f6020820190508181035f8301526119f3816119ba565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f611a386017836119fa565b9150611a4382611a04565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f611a7082611a4e565b611a7a81856119fa565b9350611a8a818560208601611a58565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f611aca6011836119fa565b9150611ad582611a96565b601182019050919050565b5f611aea82611a2c565b9150611af68285611a66565b9150611b0182611abe565b9150611b0d8284611a66565b91508190509392505050565b5f601f19601f8301169050919050565b5f611b3382611a4e565b611b3d8185611760565b9350611b4d818560208601611a58565b611b5681611b19565b840191505092915050565b5f6020820190508181035f830152611b798184611b29565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611be58261146a565b91505f8203611bf757611bf6611684565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f611c36602083611760565b9150611c4182611c02565b602082019050919050565b5f6020820190508181035f830152611c6381611c2a565b905091905056fea26469706673582212200c01c0ed9c5d5c441e0f4e2458386c589e0778cd8bd32ca02a92b3907377895864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2031 CODESIZE SUB DUP1 PUSH2 0x2031 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x359 JUMP JUMPDEST PUSH2 0x4D PUSH2 0x42 PUSH2 0xD5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xDC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x9F PUSH0 PUSH0 SHL CALLER PUSH2 0x19D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xCF PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 ADDRESS PUSH2 0x19D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x384 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1AD DUP3 DUP3 PUSH2 0x1B1 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1C1 DUP3 DUP3 PUSH2 0x297 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x293 JUMPI PUSH1 0x1 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x238 PUSH2 0xD5 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x328 DUP3 PUSH2 0x2FF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x338 DUP2 PUSH2 0x31E JUMP JUMPDEST DUP2 EQ PUSH2 0x342 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x353 DUP2 PUSH2 0x32F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x36E JUMPI PUSH2 0x36D PUSH2 0x2FB JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x37B DUP5 DUP3 DUP6 ADD PUSH2 0x345 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1CA0 DUP1 PUSH2 0x391 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x305 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x261 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x6AE674E2 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E9 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0x68C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x797 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0xB2A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x3FB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x77B8DDE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x403 PUSH2 0xB93 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x48E JUMPI DUP1 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x9266535100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x538 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F3F6CD000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x5F1 DUP3 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x5FA DUP2 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xCBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x611 PUSH2 0xD99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH2 0xDA0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH32 0x83A8CDB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x720 CALLER DUP3 PUSH2 0xE7B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP3 PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x79F PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x7A8 PUSH0 PUSH2 0xF86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x8AB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x77B8DDE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x926 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x98E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x77B8DDE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x996 PUSH2 0xB93 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xA90 DUP3 PUSH2 0x39A JUMP JUMPDEST PUSH2 0xA99 DUP2 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0xAA3 DUP4 DUP4 PUSH2 0xDA0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0xF08 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB27 DUP2 PUSH2 0xF86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xC9F JUMPI PUSH0 DUP2 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xBEF SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 DUP3 PUSH1 0x64 PUSH1 0x5 DUP7 PUSH0 ADD SLOAD PUSH2 0xC0A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xC28 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC4E CALLER DUP3 PUSH2 0xE7B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP3 PUSH1 0x40 MLOAD PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xCB7 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCC9 DUP3 DUP3 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0xD95 JUMPI PUSH1 0x1 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD3A PUSH2 0xD99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDAA DUP3 DUP3 PUSH2 0x7FD JUMP JUMPDEST ISZERO PUSH2 0xE77 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE1C PUSH2 0xD99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED7 SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF00 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF10 PUSH2 0xD99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF2E PUSH2 0x7B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7B SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1051 DUP3 DUP3 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x10C7 JUMPI PUSH2 0x105E DUP2 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x106B DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x107C SWAP3 SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10F1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x10F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x110A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x1114 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112D JUMPI PUSH2 0x112C PUSH2 0x1B81 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x115F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x1BAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11F9 JUMPI PUSH2 0x11F8 PUSH2 0x1BAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1237 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12E0 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1283 JUMPI PUSH2 0x1282 PUSH2 0x1BAE JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x129A JUMPI PUSH2 0x1299 PUSH2 0x1BAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x12D9 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP1 POP PUSH2 0x1244 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x1323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131A SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x1331 JUMP JUMPDEST DUP2 EQ PUSH2 0x136F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1380 DUP2 PUSH2 0x135C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139B JUMPI PUSH2 0x139A PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13A8 DUP5 DUP3 DUP6 ADD PUSH2 0x1372 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C5 DUP2 PUSH2 0x13B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DE PUSH0 DUP4 ADD DUP5 PUSH2 0x13BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F6 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1411 DUP2 PUSH2 0x13ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142C JUMPI PUSH2 0x142B PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1439 DUP5 DUP3 DUP6 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x144B DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1464 PUSH0 DUP4 ADD DUP5 PUSH2 0x1442 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x146A JUMP JUMPDEST DUP2 EQ PUSH2 0x1486 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1497 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14BF DUP5 DUP3 DUP6 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14F1 DUP3 PUSH2 0x14C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1501 DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x150B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151C DUP2 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1545 DUP6 DUP3 DUP7 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1556 DUP6 DUP3 DUP7 ADD PUSH2 0x150E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1583 PUSH2 0x157E PUSH2 0x1579 DUP5 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x14C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1594 DUP3 PUSH2 0x1569 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A5 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x159B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CE PUSH0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DD DUP2 PUSH2 0x146A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x15D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1605 DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x161E PUSH0 DUP4 ADD DUP5 PUSH2 0x15FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1639 JUMPI PUSH2 0x1638 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1646 DUP5 DUP3 DUP6 ADD PUSH2 0x150E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1662 PUSH0 DUP4 ADD DUP7 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x166F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x167C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16BB DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH2 0x16C6 DUP4 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x1684 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16F7 PUSH0 DUP4 ADD DUP6 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x1704 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1714 DUP2 PUSH2 0x13B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x171E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x172F DUP2 PUSH2 0x170B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH2 0x1749 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1757 DUP5 DUP3 DUP6 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17CA PUSH1 0x2F DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D5 DUP3 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F7 DUP2 PUSH2 0x17BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1811 PUSH0 DUP4 ADD DUP7 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x181E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x182B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x183D DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH2 0x1848 DUP4 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x1684 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C0 PUSH1 0x26 DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP2 POP PUSH2 0x18CB DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18ED DUP2 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18FE DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH2 0x1909 DUP4 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1917 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x1684 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x196C DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH2 0x1977 DUP4 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x1935 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19C6 PUSH1 0x20 DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D1 DUP3 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F3 DUP2 PUSH2 0x19BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A38 PUSH1 0x17 DUP4 PUSH2 0x19FA JUMP JUMPDEST SWAP2 POP PUSH2 0x1A43 DUP3 PUSH2 0x1A04 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A70 DUP3 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1A7A DUP2 DUP6 PUSH2 0x19FA JUMP JUMPDEST SWAP4 POP PUSH2 0x1A8A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A58 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACA PUSH1 0x11 DUP4 PUSH2 0x19FA JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD5 DUP3 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEA DUP3 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF6 DUP3 DUP6 PUSH2 0x1A66 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B01 DUP3 PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 DUP5 PUSH2 0x1A66 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B33 DUP3 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1B3D DUP2 DUP6 PUSH2 0x1760 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x1B19 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B79 DUP2 DUP5 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BE5 DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C36 PUSH1 0x20 DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C41 DUP3 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C63 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC ADD 0xC0 0xED SWAP13 TSTORE TLOAD PREVRANDAO 0x1E 0xF 0x4E 0x24 PC CODESIZE PUSH13 0x589E0778CD8BD32CA02A92B390 PUSH20 0x77895864736F6C634300081C0033000000000000 ",
							"sourceMap": "324:3238:11:-:0;;;1070:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1136:12:11;1115:11;;:34;;;;;;;;;;;;;;;;;;1162:42;2198:4:0;1173:18:11;;1193:10;1162;;;:42;;:::i;:::-;1215:38;416:24;1247:4;1215:10;;;:38;;:::i;:::-;1070:191;324:3238;;655:96:4;708:7;734:10;727:17;;655:96;:::o;2426:187:2:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;6937:110:0:-;7015:25;7026:4;7032:7;7015:10;;;:25;;:::i;:::-;6937:110;;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;;;:22;;:::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;;;:12;;:::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;3021:145::-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:351::-;915:6;964:2;952:9;943:7;939:23;935:32;932:119;;;970:79;;:::i;:::-;932:119;1090:1;1115:64;1171:7;1162:6;1151:9;1147:22;1115:64;:::i;:::-;1105:74;;1061:128;845:351;;;;:::o;324:3238:11:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_27": {
									"entryPoint": 2145,
									"id": 27,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MINTER_ROLE_1883": {
									"entryPoint": 2659,
									"id": 1883,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_calculateAndClaimRewards_2114": {
									"entryPoint": 2963,
									"id": 2114,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkOwner_443": {
									"entryPoint": 3848,
									"id": 443,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_131": {
									"entryPoint": 4167,
									"id": 131,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkRole_92": {
									"entryPoint": 3243,
									"id": 92,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_grantRole_283": {
									"entryPoint": 3263,
									"id": 283,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mintRewards_2047": {
									"entryPoint": 3707,
									"id": 2047,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_591": {
									"entryPoint": 3481,
									"id": 591,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_revokeRole_314": {
									"entryPoint": 3488,
									"id": 314,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_500": {
									"entryPoint": 3974,
									"id": 500,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimRewards_2157": {
									"entryPoint": 1676,
									"id": 2157,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@deposit_2028": {
									"entryPoint": 2151,
									"id": 2028,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getRoleAdmin_146": {
									"entryPoint": 922,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_166": {
									"entryPoint": 1512,
									"id": 166,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_79": {
									"entryPoint": 2045,
									"id": 79,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@owner_429": {
									"entryPoint": 1968,
									"id": 429,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceOwnership_457": {
									"entryPoint": 1943,
									"id": 457,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_209": {
									"entryPoint": 1545,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_186": {
									"entryPoint": 2695,
									"id": 186,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakeXToken_1886": {
									"entryPoint": 1906,
									"id": 1886,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakers_1900": {
									"entryPoint": 2007,
									"id": 1900,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@supportsInterface_60": {
									"entryPoint": 801,
									"id": 60,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_861": {
									"entryPoint": 2858,
									"id": 861,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@toHexString_792": {
									"entryPoint": 4344,
									"id": 792,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@toHexString_812": {
									"entryPoint": 4299,
									"id": 812,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@totalStaked_1888": {
									"entryPoint": 1962,
									"id": 1888,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnership_480": {
									"entryPoint": 2728,
									"id": 480,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdraw_2226": {
									"entryPoint": 951,
									"id": 2226,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 5390,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 5921,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 5123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 4978,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 5257,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 5668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 5941,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 5143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 5410,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 4998,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 5277,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 5628,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 5186,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$579_to_t_address_fromStack": {
									"entryPoint": 5548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6758,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7210,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6324,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6586,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6700,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6846,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 6078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 5588,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 6880,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 5643,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 6142,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 5860,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 5067,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 5201,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$579__to_t_address__fromStack_reversed": {
									"entryPoint": 5563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7009,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7244,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6358,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6620,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 6112,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 5603,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 5711,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 6734,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 5984,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 6650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 6195,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 6498,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 6388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 5809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 5351,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 5041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 5092,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 4913,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 5320,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5226,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$579_to_t_address": {
									"entryPoint": 5531,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5514,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5481,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 6744,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"decrement_t_uint256": {
									"entryPoint": 7131,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 5472,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5764,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 6453,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7086,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7041,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4909,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 6937,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2": {
									"entryPoint": 7170,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 6246,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 6546,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874": {
									"entryPoint": 6660,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69": {
									"entryPoint": 6806,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b": {
									"entryPoint": 6000,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5368,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5899,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 5101,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 4956,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:17924:12",
										"nodeType": "YulBlock",
										"src": "0:17924:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "378:105:12",
													"nodeType": "YulBlock",
													"src": "378:105:12",
													"statements": [
														{
															"nativeSrc": "388:89:12",
															"nodeType": "YulAssignment",
															"src": "388:89:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:12",
																		"nodeType": "YulLiteral",
																		"src": "410:66:12",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:12"
																},
																"nativeSrc": "399:78:12",
																"nodeType": "YulFunctionCall",
																"src": "399:78:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:12",
														"nodeType": "YulTypedName",
														"src": "360:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:12",
														"nodeType": "YulTypedName",
														"src": "370:7:12",
														"type": ""
													}
												],
												"src": "334:149:12"
											},
											{
												"body": {
													"nativeSrc": "531:78:12",
													"nodeType": "YulBlock",
													"src": "531:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:12",
																"nodeType": "YulBlock",
																"src": "587:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:12",
																					"nodeType": "YulLiteral",
																					"src": "596:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:12",
																					"nodeType": "YulLiteral",
																					"src": "599:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:12"
																			},
																			"nativeSrc": "589:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:12"
																		},
																		"nativeSrc": "589:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:12"
																				},
																				"nativeSrc": "561:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:12"
																		},
																		"nativeSrc": "551:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:12"
																},
																"nativeSrc": "544:42:12",
																"nodeType": "YulFunctionCall",
																"src": "544:42:12"
															},
															"nativeSrc": "541:62:12",
															"nodeType": "YulIf",
															"src": "541:62:12"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:12",
														"nodeType": "YulTypedName",
														"src": "524:5:12",
														"type": ""
													}
												],
												"src": "489:120:12"
											},
											{
												"body": {
													"nativeSrc": "666:86:12",
													"nodeType": "YulBlock",
													"src": "666:86:12",
													"statements": [
														{
															"nativeSrc": "676:29:12",
															"nodeType": "YulAssignment",
															"src": "676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:12"
																},
																"nativeSrc": "685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:12"
																},
																"nativeSrc": "714:32:12",
																"nodeType": "YulFunctionCall",
																"src": "714:32:12"
															},
															"nativeSrc": "714:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:12"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:12",
														"nodeType": "YulTypedName",
														"src": "644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:12",
														"nodeType": "YulTypedName",
														"src": "652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:12",
														"nodeType": "YulTypedName",
														"src": "660:5:12",
														"type": ""
													}
												],
												"src": "615:137:12"
											},
											{
												"body": {
													"nativeSrc": "823:262:12",
													"nodeType": "YulBlock",
													"src": "823:262:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:12",
																"nodeType": "YulBlock",
																"src": "869:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:12"
																			},
																			"nativeSrc": "871:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:12"
																		},
																		"nativeSrc": "871:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:12"
																		},
																		"nativeSrc": "840:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:12",
																		"nodeType": "YulLiteral",
																		"src": "865:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:12"
																},
																"nativeSrc": "836:32:12",
																"nodeType": "YulFunctionCall",
																"src": "836:32:12"
															},
															"nativeSrc": "833:119:12",
															"nodeType": "YulIf",
															"src": "833:119:12"
														},
														{
															"nativeSrc": "962:116:12",
															"nodeType": "YulBlock",
															"src": "962:116:12",
															"statements": [
																{
																	"nativeSrc": "977:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:12",
																		"nodeType": "YulLiteral",
																		"src": "991:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:12",
																			"nodeType": "YulTypedName",
																			"src": "981:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:12",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:12"
																				},
																				"nativeSrc": "1036:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:12"
																		},
																		"nativeSrc": "1016:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:12",
														"nodeType": "YulTypedName",
														"src": "793:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:12",
														"nodeType": "YulTypedName",
														"src": "804:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:12",
														"nodeType": "YulTypedName",
														"src": "816:6:12",
														"type": ""
													}
												],
												"src": "758:327:12"
											},
											{
												"body": {
													"nativeSrc": "1133:48:12",
													"nodeType": "YulBlock",
													"src": "1133:48:12",
													"statements": [
														{
															"nativeSrc": "1143:32:12",
															"nodeType": "YulAssignment",
															"src": "1143:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:12"
																		},
																		"nativeSrc": "1161:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:12"
																},
																"nativeSrc": "1154:21:12",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:12",
														"nodeType": "YulTypedName",
														"src": "1115:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:12",
														"nodeType": "YulTypedName",
														"src": "1125:7:12",
														"type": ""
													}
												],
												"src": "1091:90:12"
											},
											{
												"body": {
													"nativeSrc": "1246:50:12",
													"nodeType": "YulBlock",
													"src": "1246:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:12"
																		},
																		"nativeSrc": "1268:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:12"
																},
																"nativeSrc": "1256:34:12",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:12"
															},
															"nativeSrc": "1256:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:12",
														"nodeType": "YulTypedName",
														"src": "1234:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:12",
														"nodeType": "YulTypedName",
														"src": "1241:3:12",
														"type": ""
													}
												],
												"src": "1187:109:12"
											},
											{
												"body": {
													"nativeSrc": "1394:118:12",
													"nodeType": "YulBlock",
													"src": "1394:118:12",
													"statements": [
														{
															"nativeSrc": "1404:26:12",
															"nodeType": "YulAssignment",
															"src": "1404:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:12"
																},
																"nativeSrc": "1412:18:12",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:12",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:12"
																		},
																		"nativeSrc": "1487:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:12"
																},
																"nativeSrc": "1440:65:12",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:12"
															},
															"nativeSrc": "1440:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:12",
														"nodeType": "YulTypedName",
														"src": "1366:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:12",
														"nodeType": "YulTypedName",
														"src": "1378:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:12",
														"nodeType": "YulTypedName",
														"src": "1389:4:12",
														"type": ""
													}
												],
												"src": "1302:210:12"
											},
											{
												"body": {
													"nativeSrc": "1563:32:12",
													"nodeType": "YulBlock",
													"src": "1563:32:12",
													"statements": [
														{
															"nativeSrc": "1573:16:12",
															"nodeType": "YulAssignment",
															"src": "1573:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "1584:5:12",
																"nodeType": "YulIdentifier",
																"src": "1584:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1573:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1573:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "1518:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1545:5:12",
														"nodeType": "YulTypedName",
														"src": "1545:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1555:7:12",
														"nodeType": "YulTypedName",
														"src": "1555:7:12",
														"type": ""
													}
												],
												"src": "1518:77:12"
											},
											{
												"body": {
													"nativeSrc": "1644:79:12",
													"nodeType": "YulBlock",
													"src": "1644:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1701:16:12",
																"nodeType": "YulBlock",
																"src": "1701:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1710:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1710:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1713:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1713:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1703:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1703:6:12"
																			},
																			"nativeSrc": "1703:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1703:12:12"
																		},
																		"nativeSrc": "1703:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1703:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1667:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1667:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1692:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1692:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "1674:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "1674:17:12"
																				},
																				"nativeSrc": "1674:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1674:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1664:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1664:2:12"
																		},
																		"nativeSrc": "1664:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1664:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1657:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1657:6:12"
																},
																"nativeSrc": "1657:43:12",
																"nodeType": "YulFunctionCall",
																"src": "1657:43:12"
															},
															"nativeSrc": "1654:63:12",
															"nodeType": "YulIf",
															"src": "1654:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "1601:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1637:5:12",
														"nodeType": "YulTypedName",
														"src": "1637:5:12",
														"type": ""
													}
												],
												"src": "1601:122:12"
											},
											{
												"body": {
													"nativeSrc": "1781:87:12",
													"nodeType": "YulBlock",
													"src": "1781:87:12",
													"statements": [
														{
															"nativeSrc": "1791:29:12",
															"nodeType": "YulAssignment",
															"src": "1791:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1813:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1813:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1800:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "1800:12:12"
																},
																"nativeSrc": "1800:20:12",
																"nodeType": "YulFunctionCall",
																"src": "1800:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1791:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1791:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1856:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1856:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "1829:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "1829:26:12"
																},
																"nativeSrc": "1829:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1829:33:12"
															},
															"nativeSrc": "1829:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "1829:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "1729:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1759:6:12",
														"nodeType": "YulTypedName",
														"src": "1759:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1767:3:12",
														"nodeType": "YulTypedName",
														"src": "1767:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1775:5:12",
														"nodeType": "YulTypedName",
														"src": "1775:5:12",
														"type": ""
													}
												],
												"src": "1729:139:12"
											},
											{
												"body": {
													"nativeSrc": "1940:263:12",
													"nodeType": "YulBlock",
													"src": "1940:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1986:83:12",
																"nodeType": "YulBlock",
																"src": "1986:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1988:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1988:77:12"
																			},
																			"nativeSrc": "1988:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1988:79:12"
																		},
																		"nativeSrc": "1988:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1988:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1961:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1961:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1970:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1970:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1957:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1957:3:12"
																		},
																		"nativeSrc": "1957:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1957:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1982:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1982:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1953:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1953:3:12"
																},
																"nativeSrc": "1953:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1953:32:12"
															},
															"nativeSrc": "1950:119:12",
															"nodeType": "YulIf",
															"src": "1950:119:12"
														},
														{
															"nativeSrc": "2079:117:12",
															"nodeType": "YulBlock",
															"src": "2079:117:12",
															"statements": [
																{
																	"nativeSrc": "2094:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2094:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2108:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2108:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2098:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2098:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2123:63:12",
																	"nodeType": "YulAssignment",
																	"src": "2123:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2158:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "2158:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2169:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "2169:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2154:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2154:3:12"
																				},
																				"nativeSrc": "2154:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2154:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2178:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2178:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "2133:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "2133:20:12"
																		},
																		"nativeSrc": "2133:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2133:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2123:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "2123:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1874:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1910:9:12",
														"nodeType": "YulTypedName",
														"src": "1910:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1921:7:12",
														"nodeType": "YulTypedName",
														"src": "1921:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1933:6:12",
														"nodeType": "YulTypedName",
														"src": "1933:6:12",
														"type": ""
													}
												],
												"src": "1874:329:12"
											},
											{
												"body": {
													"nativeSrc": "2274:53:12",
													"nodeType": "YulBlock",
													"src": "2274:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2291:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2291:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2314:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2314:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "2296:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2296:17:12"
																		},
																		"nativeSrc": "2296:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2296:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2284:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2284:6:12"
																},
																"nativeSrc": "2284:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2284:37:12"
															},
															"nativeSrc": "2284:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2284:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "2209:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2262:5:12",
														"nodeType": "YulTypedName",
														"src": "2262:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2269:3:12",
														"nodeType": "YulTypedName",
														"src": "2269:3:12",
														"type": ""
													}
												],
												"src": "2209:118:12"
											},
											{
												"body": {
													"nativeSrc": "2431:124:12",
													"nodeType": "YulBlock",
													"src": "2431:124:12",
													"statements": [
														{
															"nativeSrc": "2441:26:12",
															"nodeType": "YulAssignment",
															"src": "2441:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2453:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2453:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2464:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2449:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2449:3:12"
																},
																"nativeSrc": "2449:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2449:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2441:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2441:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2521:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2521:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2534:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2534:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2545:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2545:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2530:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2530:3:12"
																		},
																		"nativeSrc": "2530:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2530:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "2477:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2477:43:12"
																},
																"nativeSrc": "2477:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2477:71:12"
															},
															"nativeSrc": "2477:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2477:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2333:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2403:9:12",
														"nodeType": "YulTypedName",
														"src": "2403:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2415:6:12",
														"nodeType": "YulTypedName",
														"src": "2415:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2426:4:12",
														"nodeType": "YulTypedName",
														"src": "2426:4:12",
														"type": ""
													}
												],
												"src": "2333:222:12"
											},
											{
												"body": {
													"nativeSrc": "2606:32:12",
													"nodeType": "YulBlock",
													"src": "2606:32:12",
													"statements": [
														{
															"nativeSrc": "2616:16:12",
															"nodeType": "YulAssignment",
															"src": "2616:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2627:5:12",
																"nodeType": "YulIdentifier",
																"src": "2627:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2616:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2616:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2561:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2588:5:12",
														"nodeType": "YulTypedName",
														"src": "2588:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2598:7:12",
														"nodeType": "YulTypedName",
														"src": "2598:7:12",
														"type": ""
													}
												],
												"src": "2561:77:12"
											},
											{
												"body": {
													"nativeSrc": "2687:79:12",
													"nodeType": "YulBlock",
													"src": "2687:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2744:16:12",
																"nodeType": "YulBlock",
																"src": "2744:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2753:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2753:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2756:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2756:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2746:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2746:6:12"
																			},
																			"nativeSrc": "2746:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2746:12:12"
																		},
																		"nativeSrc": "2746:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2746:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2710:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2710:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2735:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2735:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2717:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "2717:17:12"
																				},
																				"nativeSrc": "2717:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2717:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2707:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2707:2:12"
																		},
																		"nativeSrc": "2707:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2707:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2700:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2700:6:12"
																},
																"nativeSrc": "2700:43:12",
																"nodeType": "YulFunctionCall",
																"src": "2700:43:12"
															},
															"nativeSrc": "2697:63:12",
															"nodeType": "YulIf",
															"src": "2697:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2644:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2680:5:12",
														"nodeType": "YulTypedName",
														"src": "2680:5:12",
														"type": ""
													}
												],
												"src": "2644:122:12"
											},
											{
												"body": {
													"nativeSrc": "2824:87:12",
													"nodeType": "YulBlock",
													"src": "2824:87:12",
													"statements": [
														{
															"nativeSrc": "2834:29:12",
															"nodeType": "YulAssignment",
															"src": "2834:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2856:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2856:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2843:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "2843:12:12"
																},
																"nativeSrc": "2843:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2843:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2834:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2834:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2899:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2899:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2872:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "2872:26:12"
																},
																"nativeSrc": "2872:33:12",
																"nodeType": "YulFunctionCall",
																"src": "2872:33:12"
															},
															"nativeSrc": "2872:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "2872:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2772:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2802:6:12",
														"nodeType": "YulTypedName",
														"src": "2802:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2810:3:12",
														"nodeType": "YulTypedName",
														"src": "2810:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2818:5:12",
														"nodeType": "YulTypedName",
														"src": "2818:5:12",
														"type": ""
													}
												],
												"src": "2772:139:12"
											},
											{
												"body": {
													"nativeSrc": "2983:263:12",
													"nodeType": "YulBlock",
													"src": "2983:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3029:83:12",
																"nodeType": "YulBlock",
																"src": "3029:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3031:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3031:77:12"
																			},
																			"nativeSrc": "3031:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3031:79:12"
																		},
																		"nativeSrc": "3031:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3031:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3004:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3004:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3013:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3013:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3000:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3000:3:12"
																		},
																		"nativeSrc": "3000:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3000:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3025:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3025:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2996:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2996:3:12"
																},
																"nativeSrc": "2996:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2996:32:12"
															},
															"nativeSrc": "2993:119:12",
															"nodeType": "YulIf",
															"src": "2993:119:12"
														},
														{
															"nativeSrc": "3122:117:12",
															"nodeType": "YulBlock",
															"src": "3122:117:12",
															"statements": [
																{
																	"nativeSrc": "3137:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3137:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3151:1:12",
																		"nodeType": "YulLiteral",
																		"src": "3151:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3141:6:12",
																			"nodeType": "YulTypedName",
																			"src": "3141:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3166:63:12",
																	"nodeType": "YulAssignment",
																	"src": "3166:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3201:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3201:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3212:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3212:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3197:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3197:3:12"
																				},
																				"nativeSrc": "3197:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3197:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3221:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3221:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "3176:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "3176:20:12"
																		},
																		"nativeSrc": "3176:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3176:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3166:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3166:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "2917:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2953:9:12",
														"nodeType": "YulTypedName",
														"src": "2953:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2964:7:12",
														"nodeType": "YulTypedName",
														"src": "2964:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2976:6:12",
														"nodeType": "YulTypedName",
														"src": "2976:6:12",
														"type": ""
													}
												],
												"src": "2917:329:12"
											},
											{
												"body": {
													"nativeSrc": "3297:81:12",
													"nodeType": "YulBlock",
													"src": "3297:81:12",
													"statements": [
														{
															"nativeSrc": "3307:65:12",
															"nodeType": "YulAssignment",
															"src": "3307:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3322:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3322:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3329:42:12",
																		"nodeType": "YulLiteral",
																		"src": "3329:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3318:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3318:3:12"
																},
																"nativeSrc": "3318:54:12",
																"nodeType": "YulFunctionCall",
																"src": "3318:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3307:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3307:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "3252:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3279:5:12",
														"nodeType": "YulTypedName",
														"src": "3279:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3289:7:12",
														"nodeType": "YulTypedName",
														"src": "3289:7:12",
														"type": ""
													}
												],
												"src": "3252:126:12"
											},
											{
												"body": {
													"nativeSrc": "3429:51:12",
													"nodeType": "YulBlock",
													"src": "3429:51:12",
													"statements": [
														{
															"nativeSrc": "3439:35:12",
															"nodeType": "YulAssignment",
															"src": "3439:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3468:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3468:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "3450:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "3450:17:12"
																},
																"nativeSrc": "3450:24:12",
																"nodeType": "YulFunctionCall",
																"src": "3450:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3439:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "3439:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "3384:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3411:5:12",
														"nodeType": "YulTypedName",
														"src": "3411:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3421:7:12",
														"nodeType": "YulTypedName",
														"src": "3421:7:12",
														"type": ""
													}
												],
												"src": "3384:96:12"
											},
											{
												"body": {
													"nativeSrc": "3529:79:12",
													"nodeType": "YulBlock",
													"src": "3529:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3586:16:12",
																"nodeType": "YulBlock",
																"src": "3586:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3595:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3595:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3598:1:12",
																					"nodeType": "YulLiteral",
																					"src": "3598:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3588:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "3588:6:12"
																			},
																			"nativeSrc": "3588:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3588:12:12"
																		},
																		"nativeSrc": "3588:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3588:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3552:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "3552:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3577:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3577:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "3559:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "3559:17:12"
																				},
																				"nativeSrc": "3559:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3559:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3549:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "3549:2:12"
																		},
																		"nativeSrc": "3549:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3549:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3542:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "3542:6:12"
																},
																"nativeSrc": "3542:43:12",
																"nodeType": "YulFunctionCall",
																"src": "3542:43:12"
															},
															"nativeSrc": "3539:63:12",
															"nodeType": "YulIf",
															"src": "3539:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "3486:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3522:5:12",
														"nodeType": "YulTypedName",
														"src": "3522:5:12",
														"type": ""
													}
												],
												"src": "3486:122:12"
											},
											{
												"body": {
													"nativeSrc": "3666:87:12",
													"nodeType": "YulBlock",
													"src": "3666:87:12",
													"statements": [
														{
															"nativeSrc": "3676:29:12",
															"nodeType": "YulAssignment",
															"src": "3676:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3698:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "3698:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3685:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "3685:12:12"
																},
																"nativeSrc": "3685:20:12",
																"nodeType": "YulFunctionCall",
																"src": "3685:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "3676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3741:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "3741:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "3714:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "3714:26:12"
																},
																"nativeSrc": "3714:33:12",
																"nodeType": "YulFunctionCall",
																"src": "3714:33:12"
															},
															"nativeSrc": "3714:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "3714:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "3614:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3644:6:12",
														"nodeType": "YulTypedName",
														"src": "3644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3652:3:12",
														"nodeType": "YulTypedName",
														"src": "3652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3660:5:12",
														"nodeType": "YulTypedName",
														"src": "3660:5:12",
														"type": ""
													}
												],
												"src": "3614:139:12"
											},
											{
												"body": {
													"nativeSrc": "3842:391:12",
													"nodeType": "YulBlock",
													"src": "3842:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "3888:83:12",
																"nodeType": "YulBlock",
																"src": "3888:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3890:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "3890:77:12"
																			},
																			"nativeSrc": "3890:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "3890:79:12"
																		},
																		"nativeSrc": "3890:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "3890:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3863:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3863:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3872:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "3872:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3859:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "3859:3:12"
																		},
																		"nativeSrc": "3859:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3859:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3884:2:12",
																		"nodeType": "YulLiteral",
																		"src": "3884:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3855:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "3855:3:12"
																},
																"nativeSrc": "3855:32:12",
																"nodeType": "YulFunctionCall",
																"src": "3855:32:12"
															},
															"nativeSrc": "3852:119:12",
															"nodeType": "YulIf",
															"src": "3852:119:12"
														},
														{
															"nativeSrc": "3981:117:12",
															"nodeType": "YulBlock",
															"src": "3981:117:12",
															"statements": [
																{
																	"nativeSrc": "3996:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3996:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4010:1:12",
																		"nodeType": "YulLiteral",
																		"src": "4010:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4000:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4000:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4025:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4025:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4060:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4060:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4071:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4071:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4056:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4056:3:12"
																				},
																				"nativeSrc": "4056:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4056:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4080:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4080:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "4035:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4035:20:12"
																		},
																		"nativeSrc": "4035:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4035:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4025:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4025:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4108:118:12",
															"nodeType": "YulBlock",
															"src": "4108:118:12",
															"statements": [
																{
																	"nativeSrc": "4123:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4123:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4137:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4137:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4127:6:12",
																			"nodeType": "YulTypedName",
																			"src": "4127:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4153:63:12",
																	"nodeType": "YulAssignment",
																	"src": "4153:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4188:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "4188:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4199:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "4199:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4184:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4184:3:12"
																				},
																				"nativeSrc": "4184:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4184:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4208:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "4208:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4163:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "4163:20:12"
																		},
																		"nativeSrc": "4163:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4163:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4153:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "4153:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "3759:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3804:9:12",
														"nodeType": "YulTypedName",
														"src": "3804:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3815:7:12",
														"nodeType": "YulTypedName",
														"src": "3815:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3827:6:12",
														"nodeType": "YulTypedName",
														"src": "3827:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3835:6:12",
														"nodeType": "YulTypedName",
														"src": "3835:6:12",
														"type": ""
													}
												],
												"src": "3759:474:12"
											},
											{
												"body": {
													"nativeSrc": "4271:28:12",
													"nodeType": "YulBlock",
													"src": "4271:28:12",
													"statements": [
														{
															"nativeSrc": "4281:12:12",
															"nodeType": "YulAssignment",
															"src": "4281:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "4288:5:12",
																"nodeType": "YulIdentifier",
																"src": "4288:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4281:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4281:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4239:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4257:5:12",
														"nodeType": "YulTypedName",
														"src": "4257:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4267:3:12",
														"nodeType": "YulTypedName",
														"src": "4267:3:12",
														"type": ""
													}
												],
												"src": "4239:60:12"
											},
											{
												"body": {
													"nativeSrc": "4365:82:12",
													"nodeType": "YulBlock",
													"src": "4365:82:12",
													"statements": [
														{
															"nativeSrc": "4375:66:12",
															"nodeType": "YulAssignment",
															"src": "4375:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4433:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "4415:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "4415:17:12"
																				},
																				"nativeSrc": "4415:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4415:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "4406:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "4406:8:12"
																		},
																		"nativeSrc": "4406:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4406:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "4388:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "4388:17:12"
																},
																"nativeSrc": "4388:53:12",
																"nodeType": "YulFunctionCall",
																"src": "4388:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4375:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4375:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4305:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4345:5:12",
														"nodeType": "YulTypedName",
														"src": "4345:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4355:9:12",
														"nodeType": "YulTypedName",
														"src": "4355:9:12",
														"type": ""
													}
												],
												"src": "4305:142:12"
											},
											{
												"body": {
													"nativeSrc": "4513:66:12",
													"nodeType": "YulBlock",
													"src": "4513:66:12",
													"statements": [
														{
															"nativeSrc": "4523:50:12",
															"nodeType": "YulAssignment",
															"src": "4523:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4567:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4567:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "4536:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "4536:30:12"
																},
																"nativeSrc": "4536:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4536:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4523:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4523:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "4453:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4493:5:12",
														"nodeType": "YulTypedName",
														"src": "4493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4503:9:12",
														"nodeType": "YulTypedName",
														"src": "4503:9:12",
														"type": ""
													}
												],
												"src": "4453:126:12"
											},
											{
												"body": {
													"nativeSrc": "4659:66:12",
													"nodeType": "YulBlock",
													"src": "4659:66:12",
													"statements": [
														{
															"nativeSrc": "4669:50:12",
															"nodeType": "YulAssignment",
															"src": "4669:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4713:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4713:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "4682:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "4682:30:12"
																},
																"nativeSrc": "4682:37:12",
																"nodeType": "YulFunctionCall",
																"src": "4682:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "4669:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "4669:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$579_to_t_address",
												"nativeSrc": "4585:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4639:5:12",
														"nodeType": "YulTypedName",
														"src": "4639:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "4649:9:12",
														"nodeType": "YulTypedName",
														"src": "4649:9:12",
														"type": ""
													}
												],
												"src": "4585:140:12"
											},
											{
												"body": {
													"nativeSrc": "4810:80:12",
													"nodeType": "YulBlock",
													"src": "4810:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4827:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4827:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4877:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4877:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$579_to_t_address",
																			"nativeSrc": "4832:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "4832:44:12"
																		},
																		"nativeSrc": "4832:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4832:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4820:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4820:6:12"
																},
																"nativeSrc": "4820:64:12",
																"nodeType": "YulFunctionCall",
																"src": "4820:64:12"
															},
															"nativeSrc": "4820:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "4820:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$579_to_t_address_fromStack",
												"nativeSrc": "4731:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4798:5:12",
														"nodeType": "YulTypedName",
														"src": "4798:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4805:3:12",
														"nodeType": "YulTypedName",
														"src": "4805:3:12",
														"type": ""
													}
												],
												"src": "4731:159:12"
											},
											{
												"body": {
													"nativeSrc": "5008:138:12",
													"nodeType": "YulBlock",
													"src": "5008:138:12",
													"statements": [
														{
															"nativeSrc": "5018:26:12",
															"nodeType": "YulAssignment",
															"src": "5018:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5030:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5030:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5041:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5041:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5026:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5026:3:12"
																},
																"nativeSrc": "5026:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5026:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5018:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5018:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5112:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5112:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5125:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5125:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5136:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5136:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5121:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5121:3:12"
																		},
																		"nativeSrc": "5121:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5121:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$579_to_t_address_fromStack",
																	"nativeSrc": "5054:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "5054:57:12"
																},
																"nativeSrc": "5054:85:12",
																"nodeType": "YulFunctionCall",
																"src": "5054:85:12"
															},
															"nativeSrc": "5054:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "5054:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$579__to_t_address__fromStack_reversed",
												"nativeSrc": "4896:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4980:9:12",
														"nodeType": "YulTypedName",
														"src": "4980:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4992:6:12",
														"nodeType": "YulTypedName",
														"src": "4992:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5003:4:12",
														"nodeType": "YulTypedName",
														"src": "5003:4:12",
														"type": ""
													}
												],
												"src": "4896:250:12"
											},
											{
												"body": {
													"nativeSrc": "5217:53:12",
													"nodeType": "YulBlock",
													"src": "5217:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5234:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5234:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5257:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5257:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "5239:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5239:17:12"
																		},
																		"nativeSrc": "5239:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5239:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5227:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5227:6:12"
																},
																"nativeSrc": "5227:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5227:37:12"
															},
															"nativeSrc": "5227:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5227:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "5152:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5205:5:12",
														"nodeType": "YulTypedName",
														"src": "5205:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5212:3:12",
														"nodeType": "YulTypedName",
														"src": "5212:3:12",
														"type": ""
													}
												],
												"src": "5152:118:12"
											},
											{
												"body": {
													"nativeSrc": "5374:124:12",
													"nodeType": "YulBlock",
													"src": "5374:124:12",
													"statements": [
														{
															"nativeSrc": "5384:26:12",
															"nodeType": "YulAssignment",
															"src": "5384:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5396:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5396:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5407:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5407:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5392:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5392:3:12"
																},
																"nativeSrc": "5392:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5392:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5384:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5384:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5464:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5464:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5477:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5477:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5488:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5488:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5473:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5473:3:12"
																		},
																		"nativeSrc": "5473:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5473:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "5420:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5420:43:12"
																},
																"nativeSrc": "5420:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5420:71:12"
															},
															"nativeSrc": "5420:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5420:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "5276:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5346:9:12",
														"nodeType": "YulTypedName",
														"src": "5346:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5358:6:12",
														"nodeType": "YulTypedName",
														"src": "5358:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5369:4:12",
														"nodeType": "YulTypedName",
														"src": "5369:4:12",
														"type": ""
													}
												],
												"src": "5276:222:12"
											},
											{
												"body": {
													"nativeSrc": "5569:53:12",
													"nodeType": "YulBlock",
													"src": "5569:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5586:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5586:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5609:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5609:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5591:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5591:17:12"
																		},
																		"nativeSrc": "5591:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5591:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5579:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5579:6:12"
																},
																"nativeSrc": "5579:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5579:37:12"
															},
															"nativeSrc": "5579:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5579:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5504:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5557:5:12",
														"nodeType": "YulTypedName",
														"src": "5557:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5564:3:12",
														"nodeType": "YulTypedName",
														"src": "5564:3:12",
														"type": ""
													}
												],
												"src": "5504:118:12"
											},
											{
												"body": {
													"nativeSrc": "5726:124:12",
													"nodeType": "YulBlock",
													"src": "5726:124:12",
													"statements": [
														{
															"nativeSrc": "5736:26:12",
															"nodeType": "YulAssignment",
															"src": "5736:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5748:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5748:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5759:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5759:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5744:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5744:3:12"
																},
																"nativeSrc": "5744:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5744:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5736:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5736:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5816:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5816:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5829:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5829:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5840:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5840:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5825:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5825:3:12"
																		},
																		"nativeSrc": "5825:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5825:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5772:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "5772:43:12"
																},
																"nativeSrc": "5772:71:12",
																"nodeType": "YulFunctionCall",
																"src": "5772:71:12"
															},
															"nativeSrc": "5772:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "5772:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5628:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5698:9:12",
														"nodeType": "YulTypedName",
														"src": "5698:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5710:6:12",
														"nodeType": "YulTypedName",
														"src": "5710:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5721:4:12",
														"nodeType": "YulTypedName",
														"src": "5721:4:12",
														"type": ""
													}
												],
												"src": "5628:222:12"
											},
											{
												"body": {
													"nativeSrc": "5922:263:12",
													"nodeType": "YulBlock",
													"src": "5922:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "5968:83:12",
																"nodeType": "YulBlock",
																"src": "5968:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5970:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "5970:77:12"
																			},
																			"nativeSrc": "5970:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "5970:79:12"
																		},
																		"nativeSrc": "5970:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "5970:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5943:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "5943:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5952:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5952:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5939:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5939:3:12"
																		},
																		"nativeSrc": "5939:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5939:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5964:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5964:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5935:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5935:3:12"
																},
																"nativeSrc": "5935:32:12",
																"nodeType": "YulFunctionCall",
																"src": "5935:32:12"
															},
															"nativeSrc": "5932:119:12",
															"nodeType": "YulIf",
															"src": "5932:119:12"
														},
														{
															"nativeSrc": "6061:117:12",
															"nodeType": "YulBlock",
															"src": "6061:117:12",
															"statements": [
																{
																	"nativeSrc": "6076:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6076:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6090:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6090:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6080:6:12",
																			"nodeType": "YulTypedName",
																			"src": "6080:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6105:63:12",
																	"nodeType": "YulAssignment",
																	"src": "6105:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6140:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "6140:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6151:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "6151:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6136:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "6136:3:12"
																				},
																				"nativeSrc": "6136:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "6136:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6160:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "6160:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6115:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "6115:20:12"
																		},
																		"nativeSrc": "6115:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6115:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6105:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6105:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5856:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5892:9:12",
														"nodeType": "YulTypedName",
														"src": "5892:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5903:7:12",
														"nodeType": "YulTypedName",
														"src": "5903:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5915:6:12",
														"nodeType": "YulTypedName",
														"src": "5915:6:12",
														"type": ""
													}
												],
												"src": "5856:329:12"
											},
											{
												"body": {
													"nativeSrc": "6345:288:12",
													"nodeType": "YulBlock",
													"src": "6345:288:12",
													"statements": [
														{
															"nativeSrc": "6355:26:12",
															"nodeType": "YulAssignment",
															"src": "6355:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6367:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6367:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6378:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6378:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6363:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6363:3:12"
																},
																"nativeSrc": "6363:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6363:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6355:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6355:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6435:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6435:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6448:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6448:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6459:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6459:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6444:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6444:3:12"
																		},
																		"nativeSrc": "6444:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6444:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6391:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6391:43:12"
																},
																"nativeSrc": "6391:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6391:71:12"
															},
															"nativeSrc": "6391:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6391:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "6516:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6516:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6529:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6529:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6540:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6540:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6525:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6525:3:12"
																		},
																		"nativeSrc": "6525:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6525:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6472:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6472:43:12"
																},
																"nativeSrc": "6472:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6472:72:12"
															},
															"nativeSrc": "6472:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6472:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "6598:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6598:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6611:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6611:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6622:2:12",
																				"nodeType": "YulLiteral",
																				"src": "6622:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6607:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6607:3:12"
																		},
																		"nativeSrc": "6607:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6607:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "6554:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6554:43:12"
																},
																"nativeSrc": "6554:72:12",
																"nodeType": "YulFunctionCall",
																"src": "6554:72:12"
															},
															"nativeSrc": "6554:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "6554:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "6191:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6301:9:12",
														"nodeType": "YulTypedName",
														"src": "6301:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "6313:6:12",
														"nodeType": "YulTypedName",
														"src": "6313:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6321:6:12",
														"nodeType": "YulTypedName",
														"src": "6321:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6329:6:12",
														"nodeType": "YulTypedName",
														"src": "6329:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6340:4:12",
														"nodeType": "YulTypedName",
														"src": "6340:4:12",
														"type": ""
													}
												],
												"src": "6191:442:12"
											},
											{
												"body": {
													"nativeSrc": "6667:152:12",
													"nodeType": "YulBlock",
													"src": "6667:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6684:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6684:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6687:77:12",
																		"nodeType": "YulLiteral",
																		"src": "6687:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6677:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6677:6:12"
																},
																"nativeSrc": "6677:88:12",
																"nodeType": "YulFunctionCall",
																"src": "6677:88:12"
															},
															"nativeSrc": "6677:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "6677:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6781:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6781:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6784:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6784:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6774:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6774:6:12"
																},
																"nativeSrc": "6774:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6774:15:12"
															},
															"nativeSrc": "6774:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6774:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6805:1:12",
																		"nodeType": "YulLiteral",
																		"src": "6805:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6808:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6808:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6798:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6798:6:12"
																},
																"nativeSrc": "6798:15:12",
																"nodeType": "YulFunctionCall",
																"src": "6798:15:12"
															},
															"nativeSrc": "6798:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "6798:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6639:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "6639:180:12"
											},
											{
												"body": {
													"nativeSrc": "6870:149:12",
													"nodeType": "YulBlock",
													"src": "6870:149:12",
													"statements": [
														{
															"nativeSrc": "6880:25:12",
															"nodeType": "YulAssignment",
															"src": "6880:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6903:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6903:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6885:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6885:17:12"
																},
																"nativeSrc": "6885:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6885:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6880:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6880:1:12"
																}
															]
														},
														{
															"nativeSrc": "6914:25:12",
															"nodeType": "YulAssignment",
															"src": "6914:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6937:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6937:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6919:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "6919:17:12"
																},
																"nativeSrc": "6919:20:12",
																"nodeType": "YulFunctionCall",
																"src": "6919:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6914:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "6914:1:12"
																}
															]
														},
														{
															"nativeSrc": "6948:17:12",
															"nodeType": "YulAssignment",
															"src": "6948:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6960:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6960:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6963:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6963:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6956:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6956:3:12"
																},
																"nativeSrc": "6956:9:12",
																"nodeType": "YulFunctionCall",
																"src": "6956:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6948:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6948:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6990:22:12",
																"nodeType": "YulBlock",
																"src": "6990:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6992:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "6992:16:12"
																			},
																			"nativeSrc": "6992:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "6992:18:12"
																		},
																		"nativeSrc": "6992:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "6992:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6981:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "6981:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6987:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "6987:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6978:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "6978:2:12"
																},
																"nativeSrc": "6978:11:12",
																"nodeType": "YulFunctionCall",
																"src": "6978:11:12"
															},
															"nativeSrc": "6975:37:12",
															"nodeType": "YulIf",
															"src": "6975:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6825:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6856:1:12",
														"nodeType": "YulTypedName",
														"src": "6856:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6859:1:12",
														"nodeType": "YulTypedName",
														"src": "6859:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6865:4:12",
														"nodeType": "YulTypedName",
														"src": "6865:4:12",
														"type": ""
													}
												],
												"src": "6825:194:12"
											},
											{
												"body": {
													"nativeSrc": "7151:206:12",
													"nodeType": "YulBlock",
													"src": "7151:206:12",
													"statements": [
														{
															"nativeSrc": "7161:26:12",
															"nodeType": "YulAssignment",
															"src": "7161:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7173:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "7173:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7184:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7184:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7169:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7169:3:12"
																},
																"nativeSrc": "7169:18:12",
																"nodeType": "YulFunctionCall",
																"src": "7169:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7161:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "7161:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7241:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7241:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7254:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7254:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7265:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7265:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7250:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7250:3:12"
																		},
																		"nativeSrc": "7250:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7250:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7197:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7197:43:12"
																},
																"nativeSrc": "7197:71:12",
																"nodeType": "YulFunctionCall",
																"src": "7197:71:12"
															},
															"nativeSrc": "7197:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "7197:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7322:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7322:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7335:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7335:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7346:2:12",
																				"nodeType": "YulLiteral",
																				"src": "7346:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7331:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7331:3:12"
																		},
																		"nativeSrc": "7331:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7331:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7278:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "7278:43:12"
																},
																"nativeSrc": "7278:72:12",
																"nodeType": "YulFunctionCall",
																"src": "7278:72:12"
															},
															"nativeSrc": "7278:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "7278:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7025:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7115:9:12",
														"nodeType": "YulTypedName",
														"src": "7115:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7127:6:12",
														"nodeType": "YulTypedName",
														"src": "7127:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7135:6:12",
														"nodeType": "YulTypedName",
														"src": "7135:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7146:4:12",
														"nodeType": "YulTypedName",
														"src": "7146:4:12",
														"type": ""
													}
												],
												"src": "7025:332:12"
											},
											{
												"body": {
													"nativeSrc": "7403:76:12",
													"nodeType": "YulBlock",
													"src": "7403:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7457:16:12",
																"nodeType": "YulBlock",
																"src": "7457:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7466:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7466:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7469:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7469:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7459:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7459:6:12"
																			},
																			"nativeSrc": "7459:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7459:12:12"
																		},
																		"nativeSrc": "7459:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7459:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7426:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7426:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7448:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7448:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "7433:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "7433:14:12"
																				},
																				"nativeSrc": "7433:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7433:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7423:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7423:2:12"
																		},
																		"nativeSrc": "7423:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7423:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7416:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7416:6:12"
																},
																"nativeSrc": "7416:40:12",
																"nodeType": "YulFunctionCall",
																"src": "7416:40:12"
															},
															"nativeSrc": "7413:60:12",
															"nodeType": "YulIf",
															"src": "7413:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "7363:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7396:5:12",
														"nodeType": "YulTypedName",
														"src": "7396:5:12",
														"type": ""
													}
												],
												"src": "7363:116:12"
											},
											{
												"body": {
													"nativeSrc": "7545:77:12",
													"nodeType": "YulBlock",
													"src": "7545:77:12",
													"statements": [
														{
															"nativeSrc": "7555:22:12",
															"nodeType": "YulAssignment",
															"src": "7555:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7570:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7570:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7564:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7564:5:12"
																},
																"nativeSrc": "7564:13:12",
																"nodeType": "YulFunctionCall",
																"src": "7564:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7555:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7555:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7610:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7610:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "7586:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "7586:23:12"
																},
																"nativeSrc": "7586:30:12",
																"nodeType": "YulFunctionCall",
																"src": "7586:30:12"
															},
															"nativeSrc": "7586:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "7586:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "7485:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7523:6:12",
														"nodeType": "YulTypedName",
														"src": "7523:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7531:3:12",
														"nodeType": "YulTypedName",
														"src": "7531:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7539:5:12",
														"nodeType": "YulTypedName",
														"src": "7539:5:12",
														"type": ""
													}
												],
												"src": "7485:137:12"
											},
											{
												"body": {
													"nativeSrc": "7702:271:12",
													"nodeType": "YulBlock",
													"src": "7702:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7748:83:12",
																"nodeType": "YulBlock",
																"src": "7748:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "7750:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "7750:77:12"
																			},
																			"nativeSrc": "7750:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7750:79:12"
																		},
																		"nativeSrc": "7750:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7750:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7723:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7723:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7732:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "7732:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7719:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "7719:3:12"
																		},
																		"nativeSrc": "7719:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7719:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7744:2:12",
																		"nodeType": "YulLiteral",
																		"src": "7744:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7715:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "7715:3:12"
																},
																"nativeSrc": "7715:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7715:32:12"
															},
															"nativeSrc": "7712:119:12",
															"nodeType": "YulIf",
															"src": "7712:119:12"
														},
														{
															"nativeSrc": "7841:125:12",
															"nodeType": "YulBlock",
															"src": "7841:125:12",
															"statements": [
																{
																	"nativeSrc": "7856:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "7856:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "7870:1:12",
																		"nodeType": "YulLiteral",
																		"src": "7870:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "7860:6:12",
																			"nodeType": "YulTypedName",
																			"src": "7860:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7885:71:12",
																	"nodeType": "YulAssignment",
																	"src": "7885:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7928:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "7928:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7939:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "7939:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7924:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "7924:3:12"
																				},
																				"nativeSrc": "7924:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7924:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7948:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "7948:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "7895:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "7895:28:12"
																		},
																		"nativeSrc": "7895:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7895:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "7885:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "7885:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7628:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7672:9:12",
														"nodeType": "YulTypedName",
														"src": "7672:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7683:7:12",
														"nodeType": "YulTypedName",
														"src": "7683:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7695:6:12",
														"nodeType": "YulTypedName",
														"src": "7695:6:12",
														"type": ""
													}
												],
												"src": "7628:345:12"
											},
											{
												"body": {
													"nativeSrc": "8075:73:12",
													"nodeType": "YulBlock",
													"src": "8075:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8092:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8092:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "8097:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "8097:6:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8085:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8085:6:12"
																},
																"nativeSrc": "8085:19:12",
																"nodeType": "YulFunctionCall",
																"src": "8085:19:12"
															},
															"nativeSrc": "8085:19:12",
															"nodeType": "YulExpressionStatement",
															"src": "8085:19:12"
														},
														{
															"nativeSrc": "8113:29:12",
															"nodeType": "YulAssignment",
															"src": "8113:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8132:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8132:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8137:4:12",
																		"nodeType": "YulLiteral",
																		"src": "8137:4:12",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8128:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8128:3:12"
																},
																"nativeSrc": "8128:14:12",
																"nodeType": "YulFunctionCall",
																"src": "8128:14:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "8113:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "8113:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7979:169:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8047:3:12",
														"nodeType": "YulTypedName",
														"src": "8047:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "8052:6:12",
														"nodeType": "YulTypedName",
														"src": "8052:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "8063:11:12",
														"nodeType": "YulTypedName",
														"src": "8063:11:12",
														"type": ""
													}
												],
												"src": "7979:169:12"
											},
											{
												"body": {
													"nativeSrc": "8260:128:12",
													"nodeType": "YulBlock",
													"src": "8260:128:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8282:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8282:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8290:1:12",
																				"nodeType": "YulLiteral",
																				"src": "8290:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8278:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8278:3:12"
																		},
																		"nativeSrc": "8278:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8278:14:12"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365",
																		"kind": "string",
																		"nativeSrc": "8294:34:12",
																		"nodeType": "YulLiteral",
																		"src": "8294:34:12",
																		"type": "",
																		"value": "AccessControl: can only renounce"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8271:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8271:6:12"
																},
																"nativeSrc": "8271:58:12",
																"nodeType": "YulFunctionCall",
																"src": "8271:58:12"
															},
															"nativeSrc": "8271:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "8271:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "8350:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "8350:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8358:2:12",
																				"nodeType": "YulLiteral",
																				"src": "8358:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8346:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8346:3:12"
																		},
																		"nativeSrc": "8346:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8346:15:12"
																	},
																	{
																		"hexValue": "20726f6c657320666f722073656c66",
																		"kind": "string",
																		"nativeSrc": "8363:17:12",
																		"nodeType": "YulLiteral",
																		"src": "8363:17:12",
																		"type": "",
																		"value": " roles for self"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8339:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8339:6:12"
																},
																"nativeSrc": "8339:42:12",
																"nodeType": "YulFunctionCall",
																"src": "8339:42:12"
															},
															"nativeSrc": "8339:42:12",
															"nodeType": "YulExpressionStatement",
															"src": "8339:42:12"
														}
													]
												},
												"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
												"nativeSrc": "8154:234:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "8252:6:12",
														"nodeType": "YulTypedName",
														"src": "8252:6:12",
														"type": ""
													}
												],
												"src": "8154:234:12"
											},
											{
												"body": {
													"nativeSrc": "8540:220:12",
													"nodeType": "YulBlock",
													"src": "8540:220:12",
													"statements": [
														{
															"nativeSrc": "8550:74:12",
															"nodeType": "YulAssignment",
															"src": "8550:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8616:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8616:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8621:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8621:2:12",
																		"type": "",
																		"value": "47"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8557:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "8557:58:12"
																},
																"nativeSrc": "8557:67:12",
																"nodeType": "YulFunctionCall",
																"src": "8557:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "8550:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8550:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8722:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8722:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																	"nativeSrc": "8633:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "8633:88:12"
																},
																"nativeSrc": "8633:93:12",
																"nodeType": "YulFunctionCall",
																"src": "8633:93:12"
															},
															"nativeSrc": "8633:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "8633:93:12"
														},
														{
															"nativeSrc": "8735:19:12",
															"nodeType": "YulAssignment",
															"src": "8735:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8746:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8746:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8751:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8751:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8742:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8742:3:12"
																},
																"nativeSrc": "8742:12:12",
																"nodeType": "YulFunctionCall",
																"src": "8742:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8735:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8735:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "8394:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "8528:3:12",
														"nodeType": "YulTypedName",
														"src": "8528:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "8536:3:12",
														"nodeType": "YulTypedName",
														"src": "8536:3:12",
														"type": ""
													}
												],
												"src": "8394:366:12"
											},
											{
												"body": {
													"nativeSrc": "8937:248:12",
													"nodeType": "YulBlock",
													"src": "8937:248:12",
													"statements": [
														{
															"nativeSrc": "8947:26:12",
															"nodeType": "YulAssignment",
															"src": "8947:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8959:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "8959:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8970:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8970:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8955:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8955:3:12"
																},
																"nativeSrc": "8955:18:12",
																"nodeType": "YulFunctionCall",
																"src": "8955:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8947:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "8947:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8994:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8994:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9005:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9005:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8990:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8990:3:12"
																		},
																		"nativeSrc": "8990:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8990:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "9013:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "9013:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9019:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9019:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9009:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9009:3:12"
																		},
																		"nativeSrc": "9009:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9009:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8983:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8983:6:12"
																},
																"nativeSrc": "8983:47:12",
																"nodeType": "YulFunctionCall",
																"src": "8983:47:12"
															},
															"nativeSrc": "8983:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "8983:47:12"
														},
														{
															"nativeSrc": "9039:139:12",
															"nodeType": "YulAssignment",
															"src": "9039:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "9173:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "9173:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "9047:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "9047:124:12"
																},
																"nativeSrc": "9047:131:12",
																"nodeType": "YulFunctionCall",
																"src": "9047:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9039:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9039:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8766:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8917:9:12",
														"nodeType": "YulTypedName",
														"src": "8917:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8932:4:12",
														"nodeType": "YulTypedName",
														"src": "8932:4:12",
														"type": ""
													}
												],
												"src": "8766:419:12"
											},
											{
												"body": {
													"nativeSrc": "9345:288:12",
													"nodeType": "YulBlock",
													"src": "9345:288:12",
													"statements": [
														{
															"nativeSrc": "9355:26:12",
															"nodeType": "YulAssignment",
															"src": "9355:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9367:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9367:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9378:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9378:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9363:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9363:3:12"
																},
																"nativeSrc": "9363:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9363:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9355:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9355:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9435:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9435:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9448:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9448:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9459:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9459:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9444:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9444:3:12"
																		},
																		"nativeSrc": "9444:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9444:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9391:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9391:43:12"
																},
																"nativeSrc": "9391:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9391:71:12"
															},
															"nativeSrc": "9391:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9391:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9516:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9516:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9529:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9529:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9540:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9540:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9525:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9525:3:12"
																		},
																		"nativeSrc": "9525:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9525:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9472:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9472:43:12"
																},
																"nativeSrc": "9472:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9472:72:12"
															},
															"nativeSrc": "9472:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9472:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "9598:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9598:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9611:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9611:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9622:2:12",
																				"nodeType": "YulLiteral",
																				"src": "9622:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9607:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9607:3:12"
																		},
																		"nativeSrc": "9607:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9607:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9554:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9554:43:12"
																},
																"nativeSrc": "9554:72:12",
																"nodeType": "YulFunctionCall",
																"src": "9554:72:12"
															},
															"nativeSrc": "9554:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "9554:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9191:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9301:9:12",
														"nodeType": "YulTypedName",
														"src": "9301:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9313:6:12",
														"nodeType": "YulTypedName",
														"src": "9313:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9321:6:12",
														"nodeType": "YulTypedName",
														"src": "9321:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9329:6:12",
														"nodeType": "YulTypedName",
														"src": "9329:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9340:4:12",
														"nodeType": "YulTypedName",
														"src": "9340:4:12",
														"type": ""
													}
												],
												"src": "9191:442:12"
											},
											{
												"body": {
													"nativeSrc": "9683:147:12",
													"nodeType": "YulBlock",
													"src": "9683:147:12",
													"statements": [
														{
															"nativeSrc": "9693:25:12",
															"nodeType": "YulAssignment",
															"src": "9693:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9716:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9716:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9698:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9698:17:12"
																},
																"nativeSrc": "9698:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9698:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "9693:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9693:1:12"
																}
															]
														},
														{
															"nativeSrc": "9727:25:12",
															"nodeType": "YulAssignment",
															"src": "9727:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9750:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9750:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "9732:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "9732:17:12"
																},
																"nativeSrc": "9732:20:12",
																"nodeType": "YulFunctionCall",
																"src": "9732:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "9727:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "9727:1:12"
																}
															]
														},
														{
															"nativeSrc": "9761:16:12",
															"nodeType": "YulAssignment",
															"src": "9761:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9772:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9772:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9775:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9775:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9768:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9768:3:12"
																},
																"nativeSrc": "9768:9:12",
																"nodeType": "YulFunctionCall",
																"src": "9768:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9761:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9761:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9801:22:12",
																"nodeType": "YulBlock",
																"src": "9801:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9803:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "9803:16:12"
																			},
																			"nativeSrc": "9803:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9803:18:12"
																		},
																		"nativeSrc": "9803:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9803:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9793:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "9793:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9796:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "9796:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9790:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "9790:2:12"
																},
																"nativeSrc": "9790:10:12",
																"nodeType": "YulFunctionCall",
																"src": "9790:10:12"
															},
															"nativeSrc": "9787:36:12",
															"nodeType": "YulIf",
															"src": "9787:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9639:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9670:1:12",
														"nodeType": "YulTypedName",
														"src": "9670:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9673:1:12",
														"nodeType": "YulTypedName",
														"src": "9673:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9679:3:12",
														"nodeType": "YulTypedName",
														"src": "9679:3:12",
														"type": ""
													}
												],
												"src": "9639:191:12"
											},
											{
												"body": {
													"nativeSrc": "9942:119:12",
													"nodeType": "YulBlock",
													"src": "9942:119:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9964:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "9964:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9972:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9972:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9960:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9960:3:12"
																		},
																		"nativeSrc": "9960:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9960:14:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nativeSrc": "9976:34:12",
																		"nodeType": "YulLiteral",
																		"src": "9976:34:12",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9953:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "9953:6:12"
																},
																"nativeSrc": "9953:58:12",
																"nodeType": "YulFunctionCall",
																"src": "9953:58:12"
															},
															"nativeSrc": "9953:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "9953:58:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10032:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10032:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10040:2:12",
																				"nodeType": "YulLiteral",
																				"src": "10040:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10028:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10028:3:12"
																		},
																		"nativeSrc": "10028:15:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10028:15:12"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nativeSrc": "10045:8:12",
																		"nodeType": "YulLiteral",
																		"src": "10045:8:12",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10021:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10021:6:12"
																},
																"nativeSrc": "10021:33:12",
																"nodeType": "YulFunctionCall",
																"src": "10021:33:12"
															},
															"nativeSrc": "10021:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "10021:33:12"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nativeSrc": "9836:225:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9934:6:12",
														"nodeType": "YulTypedName",
														"src": "9934:6:12",
														"type": ""
													}
												],
												"src": "9836:225:12"
											},
											{
												"body": {
													"nativeSrc": "10213:220:12",
													"nodeType": "YulBlock",
													"src": "10213:220:12",
													"statements": [
														{
															"nativeSrc": "10223:74:12",
															"nodeType": "YulAssignment",
															"src": "10223:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10289:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10289:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10294:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10294:2:12",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10230:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "10230:58:12"
																},
																"nativeSrc": "10230:67:12",
																"nodeType": "YulFunctionCall",
																"src": "10230:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10223:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10223:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10395:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10395:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nativeSrc": "10306:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "10306:88:12"
																},
																"nativeSrc": "10306:93:12",
																"nodeType": "YulFunctionCall",
																"src": "10306:93:12"
															},
															"nativeSrc": "10306:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "10306:93:12"
														},
														{
															"nativeSrc": "10408:19:12",
															"nodeType": "YulAssignment",
															"src": "10408:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10419:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "10419:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10424:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10424:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10415:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10415:3:12"
																},
																"nativeSrc": "10415:12:12",
																"nodeType": "YulFunctionCall",
																"src": "10415:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10408:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10408:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10067:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10201:3:12",
														"nodeType": "YulTypedName",
														"src": "10201:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10209:3:12",
														"nodeType": "YulTypedName",
														"src": "10209:3:12",
														"type": ""
													}
												],
												"src": "10067:366:12"
											},
											{
												"body": {
													"nativeSrc": "10610:248:12",
													"nodeType": "YulBlock",
													"src": "10610:248:12",
													"statements": [
														{
															"nativeSrc": "10620:26:12",
															"nodeType": "YulAssignment",
															"src": "10620:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10632:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "10632:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10643:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10643:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10628:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10628:3:12"
																},
																"nativeSrc": "10628:18:12",
																"nodeType": "YulFunctionCall",
																"src": "10628:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10620:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10620:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10667:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10667:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10678:1:12",
																				"nodeType": "YulLiteral",
																				"src": "10678:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10663:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10663:3:12"
																		},
																		"nativeSrc": "10663:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10663:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10686:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "10686:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10692:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10692:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10682:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10682:3:12"
																		},
																		"nativeSrc": "10682:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10682:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10656:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10656:6:12"
																},
																"nativeSrc": "10656:47:12",
																"nodeType": "YulFunctionCall",
																"src": "10656:47:12"
															},
															"nativeSrc": "10656:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "10656:47:12"
														},
														{
															"nativeSrc": "10712:139:12",
															"nodeType": "YulAssignment",
															"src": "10712:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10846:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "10846:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10720:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "10720:124:12"
																},
																"nativeSrc": "10720:131:12",
																"nodeType": "YulFunctionCall",
																"src": "10720:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10712:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "10712:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10439:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10590:9:12",
														"nodeType": "YulTypedName",
														"src": "10590:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10605:4:12",
														"nodeType": "YulTypedName",
														"src": "10605:4:12",
														"type": ""
													}
												],
												"src": "10439:419:12"
											},
											{
												"body": {
													"nativeSrc": "10912:362:12",
													"nodeType": "YulBlock",
													"src": "10912:362:12",
													"statements": [
														{
															"nativeSrc": "10922:25:12",
															"nodeType": "YulAssignment",
															"src": "10922:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10945:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10945:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10927:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10927:17:12"
																},
																"nativeSrc": "10927:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10927:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "10922:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10922:1:12"
																}
															]
														},
														{
															"nativeSrc": "10956:25:12",
															"nodeType": "YulAssignment",
															"src": "10956:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10979:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "10979:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "10961:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "10961:17:12"
																},
																"nativeSrc": "10961:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10961:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "10956:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "10956:1:12"
																}
															]
														},
														{
															"nativeSrc": "10990:28:12",
															"nodeType": "YulVariableDeclaration",
															"src": "10990:28:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11013:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11013:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11016:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11016:1:12"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "11009:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11009:3:12"
																},
																"nativeSrc": "11009:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11009:9:12"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "10994:11:12",
																	"nodeType": "YulTypedName",
																	"src": "10994:11:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11027:41:12",
															"nodeType": "YulAssignment",
															"src": "11027:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "11056:11:12",
																		"nodeType": "YulIdentifier",
																		"src": "11056:11:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11038:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11038:17:12"
																},
																"nativeSrc": "11038:30:12",
																"nodeType": "YulFunctionCall",
																"src": "11038:30:12"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "11027:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "11027:7:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11245:22:12",
																"nodeType": "YulBlock",
																"src": "11245:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11247:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11247:16:12"
																			},
																			"nativeSrc": "11247:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11247:18:12"
																		},
																		"nativeSrc": "11247:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11247:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "11178:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "11178:1:12"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "11171:6:12",
																					"nodeType": "YulIdentifier",
																					"src": "11171:6:12"
																				},
																				"nativeSrc": "11171:9:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11171:9:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "11201:1:12",
																						"nodeType": "YulIdentifier",
																						"src": "11201:1:12"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "11208:7:12",
																								"nodeType": "YulIdentifier",
																								"src": "11208:7:12"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "11217:1:12",
																								"nodeType": "YulIdentifier",
																								"src": "11217:1:12"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "11204:3:12",
																							"nodeType": "YulIdentifier",
																							"src": "11204:3:12"
																						},
																						"nativeSrc": "11204:15:12",
																						"nodeType": "YulFunctionCall",
																						"src": "11204:15:12"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "11198:2:12",
																					"nodeType": "YulIdentifier",
																					"src": "11198:2:12"
																				},
																				"nativeSrc": "11198:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11198:22:12"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "11151:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "11151:2:12"
																		},
																		"nativeSrc": "11151:83:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11151:83:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11131:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11131:6:12"
																},
																"nativeSrc": "11131:113:12",
																"nodeType": "YulFunctionCall",
																"src": "11131:113:12"
															},
															"nativeSrc": "11128:139:12",
															"nodeType": "YulIf",
															"src": "11128:139:12"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10864:410:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10895:1:12",
														"nodeType": "YulTypedName",
														"src": "10895:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10898:1:12",
														"nodeType": "YulTypedName",
														"src": "10898:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10904:7:12",
														"nodeType": "YulTypedName",
														"src": "10904:7:12",
														"type": ""
													}
												],
												"src": "10864:410:12"
											},
											{
												"body": {
													"nativeSrc": "11308:152:12",
													"nodeType": "YulBlock",
													"src": "11308:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11325:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11325:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11328:77:12",
																		"nodeType": "YulLiteral",
																		"src": "11328:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11318:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11318:6:12"
																},
																"nativeSrc": "11318:88:12",
																"nodeType": "YulFunctionCall",
																"src": "11318:88:12"
															},
															"nativeSrc": "11318:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "11318:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11422:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11422:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11425:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11425:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11415:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11415:6:12"
																},
																"nativeSrc": "11415:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11415:15:12"
															},
															"nativeSrc": "11415:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11415:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11446:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11446:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11449:4:12",
																		"nodeType": "YulLiteral",
																		"src": "11449:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11439:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11439:6:12"
																},
																"nativeSrc": "11439:15:12",
																"nodeType": "YulFunctionCall",
																"src": "11439:15:12"
															},
															"nativeSrc": "11439:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "11439:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "11280:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "11280:180:12"
											},
											{
												"body": {
													"nativeSrc": "11508:143:12",
													"nodeType": "YulBlock",
													"src": "11508:143:12",
													"statements": [
														{
															"nativeSrc": "11518:25:12",
															"nodeType": "YulAssignment",
															"src": "11518:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11541:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11541:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11523:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11523:17:12"
																},
																"nativeSrc": "11523:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11523:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "11518:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11518:1:12"
																}
															]
														},
														{
															"nativeSrc": "11552:25:12",
															"nodeType": "YulAssignment",
															"src": "11552:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11575:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11575:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "11557:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "11557:17:12"
																},
																"nativeSrc": "11557:20:12",
																"nodeType": "YulFunctionCall",
																"src": "11557:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "11552:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11552:1:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11599:22:12",
																"nodeType": "YulBlock",
																"src": "11599:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "11601:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "11601:16:12"
																			},
																			"nativeSrc": "11601:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11601:18:12"
																		},
																		"nativeSrc": "11601:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11601:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "11596:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11596:1:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "11589:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11589:6:12"
																},
																"nativeSrc": "11589:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11589:9:12"
															},
															"nativeSrc": "11586:35:12",
															"nodeType": "YulIf",
															"src": "11586:35:12"
														},
														{
															"nativeSrc": "11631:14:12",
															"nodeType": "YulAssignment",
															"src": "11631:14:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11640:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11640:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11643:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "11643:1:12"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11636:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11636:3:12"
																},
																"nativeSrc": "11636:9:12",
																"nodeType": "YulFunctionCall",
																"src": "11636:9:12"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11631:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "11631:1:12"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "11466:185:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11497:1:12",
														"nodeType": "YulTypedName",
														"src": "11497:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11500:1:12",
														"nodeType": "YulTypedName",
														"src": "11500:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "11506:1:12",
														"nodeType": "YulTypedName",
														"src": "11506:1:12",
														"type": ""
													}
												],
												"src": "11466:185:12"
											},
											{
												"body": {
													"nativeSrc": "11763:76:12",
													"nodeType": "YulBlock",
													"src": "11763:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11785:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "11785:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11793:1:12",
																				"nodeType": "YulLiteral",
																				"src": "11793:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11781:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11781:3:12"
																		},
																		"nativeSrc": "11781:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11781:14:12"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nativeSrc": "11797:34:12",
																		"nodeType": "YulLiteral",
																		"src": "11797:34:12",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11774:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11774:6:12"
																},
																"nativeSrc": "11774:58:12",
																"nodeType": "YulFunctionCall",
																"src": "11774:58:12"
															},
															"nativeSrc": "11774:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "11774:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nativeSrc": "11657:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11755:6:12",
														"nodeType": "YulTypedName",
														"src": "11755:6:12",
														"type": ""
													}
												],
												"src": "11657:182:12"
											},
											{
												"body": {
													"nativeSrc": "11991:220:12",
													"nodeType": "YulBlock",
													"src": "11991:220:12",
													"statements": [
														{
															"nativeSrc": "12001:74:12",
															"nodeType": "YulAssignment",
															"src": "12001:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12067:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12067:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12072:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12072:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12008:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "12008:58:12"
																},
																"nativeSrc": "12008:67:12",
																"nodeType": "YulFunctionCall",
																"src": "12008:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12001:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12001:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12173:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12173:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nativeSrc": "12084:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "12084:88:12"
																},
																"nativeSrc": "12084:93:12",
																"nodeType": "YulFunctionCall",
																"src": "12084:93:12"
															},
															"nativeSrc": "12084:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "12084:93:12"
														},
														{
															"nativeSrc": "12186:19:12",
															"nodeType": "YulAssignment",
															"src": "12186:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12197:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12197:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12202:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12202:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12193:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12193:3:12"
																},
																"nativeSrc": "12193:12:12",
																"nodeType": "YulFunctionCall",
																"src": "12193:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12186:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12186:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11845:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11979:3:12",
														"nodeType": "YulTypedName",
														"src": "11979:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11987:3:12",
														"nodeType": "YulTypedName",
														"src": "11987:3:12",
														"type": ""
													}
												],
												"src": "11845:366:12"
											},
											{
												"body": {
													"nativeSrc": "12388:248:12",
													"nodeType": "YulBlock",
													"src": "12388:248:12",
													"statements": [
														{
															"nativeSrc": "12398:26:12",
															"nodeType": "YulAssignment",
															"src": "12398:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12410:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12410:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12421:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12421:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12406:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12406:3:12"
																},
																"nativeSrc": "12406:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12406:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12398:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12398:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12445:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12445:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12456:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12456:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12441:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12441:3:12"
																		},
																		"nativeSrc": "12441:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12441:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12464:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "12464:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12470:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12470:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12460:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12460:3:12"
																		},
																		"nativeSrc": "12460:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12460:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12434:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12434:6:12"
																},
																"nativeSrc": "12434:47:12",
																"nodeType": "YulFunctionCall",
																"src": "12434:47:12"
															},
															"nativeSrc": "12434:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "12434:47:12"
														},
														{
															"nativeSrc": "12490:139:12",
															"nodeType": "YulAssignment",
															"src": "12490:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12624:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "12624:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12498:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "12498:124:12"
																},
																"nativeSrc": "12498:131:12",
																"nodeType": "YulFunctionCall",
																"src": "12498:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12490:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12490:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12217:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12368:9:12",
														"nodeType": "YulTypedName",
														"src": "12368:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12383:4:12",
														"nodeType": "YulTypedName",
														"src": "12383:4:12",
														"type": ""
													}
												],
												"src": "12217:419:12"
											},
											{
												"body": {
													"nativeSrc": "12756:34:12",
													"nodeType": "YulBlock",
													"src": "12756:34:12",
													"statements": [
														{
															"nativeSrc": "12766:18:12",
															"nodeType": "YulAssignment",
															"src": "12766:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "12781:3:12",
																"nodeType": "YulIdentifier",
																"src": "12781:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "12766:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "12766:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12642:148:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12728:3:12",
														"nodeType": "YulTypedName",
														"src": "12728:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "12733:6:12",
														"nodeType": "YulTypedName",
														"src": "12733:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "12744:11:12",
														"nodeType": "YulTypedName",
														"src": "12744:11:12",
														"type": ""
													}
												],
												"src": "12642:148:12"
											},
											{
												"body": {
													"nativeSrc": "12902:67:12",
													"nodeType": "YulBlock",
													"src": "12902:67:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12924:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "12924:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12932:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12932:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12920:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12920:3:12"
																		},
																		"nativeSrc": "12920:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12920:14:12"
																	},
																	{
																		"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																		"kind": "string",
																		"nativeSrc": "12936:25:12",
																		"nodeType": "YulLiteral",
																		"src": "12936:25:12",
																		"type": "",
																		"value": "AccessControl: account "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12913:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12913:6:12"
																},
																"nativeSrc": "12913:49:12",
																"nodeType": "YulFunctionCall",
																"src": "12913:49:12"
															},
															"nativeSrc": "12913:49:12",
															"nodeType": "YulExpressionStatement",
															"src": "12913:49:12"
														}
													]
												},
												"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
												"nativeSrc": "12796:173:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12894:6:12",
														"nodeType": "YulTypedName",
														"src": "12894:6:12",
														"type": ""
													}
												],
												"src": "12796:173:12"
											},
											{
												"body": {
													"nativeSrc": "13139:238:12",
													"nodeType": "YulBlock",
													"src": "13139:238:12",
													"statements": [
														{
															"nativeSrc": "13149:92:12",
															"nodeType": "YulAssignment",
															"src": "13149:92:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13233:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13233:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13238:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13238:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13156:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "13156:76:12"
																},
																"nativeSrc": "13156:85:12",
																"nodeType": "YulFunctionCall",
																"src": "13156:85:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13149:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13149:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13339:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13339:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																	"nativeSrc": "13250:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "13250:88:12"
																},
																"nativeSrc": "13250:93:12",
																"nodeType": "YulFunctionCall",
																"src": "13250:93:12"
															},
															"nativeSrc": "13250:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "13250:93:12"
														},
														{
															"nativeSrc": "13352:19:12",
															"nodeType": "YulAssignment",
															"src": "13352:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13363:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13363:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13368:2:12",
																		"nodeType": "YulLiteral",
																		"src": "13368:2:12",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13359:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13359:3:12"
																},
																"nativeSrc": "13359:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13359:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13352:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13352:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "12975:402:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13127:3:12",
														"nodeType": "YulTypedName",
														"src": "13127:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13135:3:12",
														"nodeType": "YulTypedName",
														"src": "13135:3:12",
														"type": ""
													}
												],
												"src": "12975:402:12"
											},
											{
												"body": {
													"nativeSrc": "13442:40:12",
													"nodeType": "YulBlock",
													"src": "13442:40:12",
													"statements": [
														{
															"nativeSrc": "13453:22:12",
															"nodeType": "YulAssignment",
															"src": "13453:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13469:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13469:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13463:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13463:5:12"
																},
																"nativeSrc": "13463:12:12",
																"nodeType": "YulFunctionCall",
																"src": "13463:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "13453:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13453:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "13383:99:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13425:5:12",
														"nodeType": "YulTypedName",
														"src": "13425:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "13435:6:12",
														"nodeType": "YulTypedName",
														"src": "13435:6:12",
														"type": ""
													}
												],
												"src": "13383:99:12"
											},
											{
												"body": {
													"nativeSrc": "13550:77:12",
													"nodeType": "YulBlock",
													"src": "13550:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "13567:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13567:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "13572:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13572:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13577:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13577:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "13561:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "13561:5:12"
																},
																"nativeSrc": "13561:23:12",
																"nodeType": "YulFunctionCall",
																"src": "13561:23:12"
															},
															"nativeSrc": "13561:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "13561:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "13604:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "13604:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "13609:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "13609:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13600:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13600:3:12"
																		},
																		"nativeSrc": "13600:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13600:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13618:1:12",
																		"nodeType": "YulLiteral",
																		"src": "13618:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13593:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13593:6:12"
																},
																"nativeSrc": "13593:27:12",
																"nodeType": "YulFunctionCall",
																"src": "13593:27:12"
															},
															"nativeSrc": "13593:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "13593:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "13488:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "13532:3:12",
														"nodeType": "YulTypedName",
														"src": "13532:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "13537:3:12",
														"nodeType": "YulTypedName",
														"src": "13537:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "13542:6:12",
														"nodeType": "YulTypedName",
														"src": "13542:6:12",
														"type": ""
													}
												],
												"src": "13488:139:12"
											},
											{
												"body": {
													"nativeSrc": "13743:280:12",
													"nodeType": "YulBlock",
													"src": "13743:280:12",
													"statements": [
														{
															"nativeSrc": "13753:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "13753:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13800:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13800:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "13767:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "13767:32:12"
																},
																"nativeSrc": "13767:39:12",
																"nodeType": "YulFunctionCall",
																"src": "13767:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13757:6:12",
																	"nodeType": "YulTypedName",
																	"src": "13757:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13815:96:12",
															"nodeType": "YulAssignment",
															"src": "13815:96:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13899:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13899:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13904:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13904:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "13822:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "13822:76:12"
																},
																"nativeSrc": "13822:89:12",
																"nodeType": "YulFunctionCall",
																"src": "13822:89:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13815:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13815:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "13959:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "13959:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13966:4:12",
																				"nodeType": "YulLiteral",
																				"src": "13966:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13955:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "13955:3:12"
																		},
																		"nativeSrc": "13955:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13955:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "13973:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13973:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13978:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "13978:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "13920:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "13920:34:12"
																},
																"nativeSrc": "13920:65:12",
																"nodeType": "YulFunctionCall",
																"src": "13920:65:12"
															},
															"nativeSrc": "13920:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "13920:65:12"
														},
														{
															"nativeSrc": "13994:23:12",
															"nodeType": "YulAssignment",
															"src": "13994:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14005:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14005:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "14010:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14010:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14001:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14001:3:12"
																},
																"nativeSrc": "14001:16:12",
																"nodeType": "YulFunctionCall",
																"src": "14001:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13994:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13994:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "13633:390:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13724:5:12",
														"nodeType": "YulTypedName",
														"src": "13724:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13731:3:12",
														"nodeType": "YulTypedName",
														"src": "13731:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13739:3:12",
														"nodeType": "YulTypedName",
														"src": "13739:3:12",
														"type": ""
													}
												],
												"src": "13633:390:12"
											},
											{
												"body": {
													"nativeSrc": "14135:61:12",
													"nodeType": "YulBlock",
													"src": "14135:61:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "14157:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "14157:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14165:1:12",
																				"nodeType": "YulLiteral",
																				"src": "14165:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14153:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "14153:3:12"
																		},
																		"nativeSrc": "14153:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "14153:14:12"
																	},
																	{
																		"hexValue": "206973206d697373696e6720726f6c6520",
																		"kind": "string",
																		"nativeSrc": "14169:19:12",
																		"nodeType": "YulLiteral",
																		"src": "14169:19:12",
																		"type": "",
																		"value": " is missing role "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14146:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14146:6:12"
																},
																"nativeSrc": "14146:43:12",
																"nodeType": "YulFunctionCall",
																"src": "14146:43:12"
															},
															"nativeSrc": "14146:43:12",
															"nodeType": "YulExpressionStatement",
															"src": "14146:43:12"
														}
													]
												},
												"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
												"nativeSrc": "14029:167:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "14127:6:12",
														"nodeType": "YulTypedName",
														"src": "14127:6:12",
														"type": ""
													}
												],
												"src": "14029:167:12"
											},
											{
												"body": {
													"nativeSrc": "14366:238:12",
													"nodeType": "YulBlock",
													"src": "14366:238:12",
													"statements": [
														{
															"nativeSrc": "14376:92:12",
															"nodeType": "YulAssignment",
															"src": "14376:92:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14460:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14460:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14465:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14465:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "14383:76:12",
																	"nodeType": "YulIdentifier",
																	"src": "14383:76:12"
																},
																"nativeSrc": "14383:85:12",
																"nodeType": "YulFunctionCall",
																"src": "14383:85:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14376:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14376:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14566:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14566:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																	"nativeSrc": "14477:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "14477:88:12"
																},
																"nativeSrc": "14477:93:12",
																"nodeType": "YulFunctionCall",
																"src": "14477:93:12"
															},
															"nativeSrc": "14477:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "14477:93:12"
														},
														{
															"nativeSrc": "14579:19:12",
															"nodeType": "YulAssignment",
															"src": "14579:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14590:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14590:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14595:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14595:2:12",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14586:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14586:3:12"
																},
																"nativeSrc": "14586:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14586:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14579:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14579:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "14202:402:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14354:3:12",
														"nodeType": "YulTypedName",
														"src": "14354:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14362:3:12",
														"nodeType": "YulTypedName",
														"src": "14362:3:12",
														"type": ""
													}
												],
												"src": "14202:402:12"
											},
											{
												"body": {
													"nativeSrc": "14996:581:12",
													"nodeType": "YulBlock",
													"src": "14996:581:12",
													"statements": [
														{
															"nativeSrc": "15007:155:12",
															"nodeType": "YulAssignment",
															"src": "15007:155:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15158:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15158:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15014:142:12",
																	"nodeType": "YulIdentifier",
																	"src": "15014:142:12"
																},
																"nativeSrc": "15014:148:12",
																"nodeType": "YulFunctionCall",
																"src": "15014:148:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15007:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15007:3:12"
																}
															]
														},
														{
															"nativeSrc": "15172:102:12",
															"nodeType": "YulAssignment",
															"src": "15172:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15261:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15261:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15270:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15270:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15179:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "15179:81:12"
																},
																"nativeSrc": "15179:95:12",
																"nodeType": "YulFunctionCall",
																"src": "15179:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15172:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15172:3:12"
																}
															]
														},
														{
															"nativeSrc": "15284:155:12",
															"nodeType": "YulAssignment",
															"src": "15284:155:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15435:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15435:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15291:142:12",
																	"nodeType": "YulIdentifier",
																	"src": "15291:142:12"
																},
																"nativeSrc": "15291:148:12",
																"nodeType": "YulFunctionCall",
																"src": "15291:148:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15284:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15284:3:12"
																}
															]
														},
														{
															"nativeSrc": "15449:102:12",
															"nodeType": "YulAssignment",
															"src": "15449:102:12",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15538:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15538:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15547:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15547:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "15456:81:12",
																	"nodeType": "YulIdentifier",
																	"src": "15456:81:12"
																},
																"nativeSrc": "15456:95:12",
																"nodeType": "YulFunctionCall",
																"src": "15456:95:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15449:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15449:3:12"
																}
															]
														},
														{
															"nativeSrc": "15561:10:12",
															"nodeType": "YulAssignment",
															"src": "15561:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "15568:3:12",
																"nodeType": "YulIdentifier",
																"src": "15568:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15561:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15561:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "14610:967:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14967:3:12",
														"nodeType": "YulTypedName",
														"src": "14967:3:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14973:6:12",
														"nodeType": "YulTypedName",
														"src": "14973:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14981:6:12",
														"nodeType": "YulTypedName",
														"src": "14981:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14992:3:12",
														"nodeType": "YulTypedName",
														"src": "14992:3:12",
														"type": ""
													}
												],
												"src": "14610:967:12"
											},
											{
												"body": {
													"nativeSrc": "15631:54:12",
													"nodeType": "YulBlock",
													"src": "15631:54:12",
													"statements": [
														{
															"nativeSrc": "15641:38:12",
															"nodeType": "YulAssignment",
															"src": "15641:38:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15659:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "15659:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15666:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15666:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15655:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15655:3:12"
																		},
																		"nativeSrc": "15655:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15655:14:12"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "15675:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15675:2:12",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "15671:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15671:3:12"
																		},
																		"nativeSrc": "15671:7:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15671:7:12"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "15651:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15651:3:12"
																},
																"nativeSrc": "15651:28:12",
																"nodeType": "YulFunctionCall",
																"src": "15651:28:12"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "15641:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "15641:6:12"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "15583:102:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15614:5:12",
														"nodeType": "YulTypedName",
														"src": "15614:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "15624:6:12",
														"nodeType": "YulTypedName",
														"src": "15624:6:12",
														"type": ""
													}
												],
												"src": "15583:102:12"
											},
											{
												"body": {
													"nativeSrc": "15783:285:12",
													"nodeType": "YulBlock",
													"src": "15783:285:12",
													"statements": [
														{
															"nativeSrc": "15793:53:12",
															"nodeType": "YulVariableDeclaration",
															"src": "15793:53:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "15840:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "15840:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "15807:32:12",
																	"nodeType": "YulIdentifier",
																	"src": "15807:32:12"
																},
																"nativeSrc": "15807:39:12",
																"nodeType": "YulFunctionCall",
																"src": "15807:39:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15797:6:12",
																	"nodeType": "YulTypedName",
																	"src": "15797:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "15855:78:12",
															"nodeType": "YulAssignment",
															"src": "15855:78:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15921:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15921:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15926:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15926:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "15862:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "15862:58:12"
																},
																"nativeSrc": "15862:71:12",
																"nodeType": "YulFunctionCall",
																"src": "15862:71:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "15855:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15855:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "15981:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "15981:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15988:4:12",
																				"nodeType": "YulLiteral",
																				"src": "15988:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15977:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15977:3:12"
																		},
																		"nativeSrc": "15977:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15977:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "15995:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15995:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "16000:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16000:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "15942:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "15942:34:12"
																},
																"nativeSrc": "15942:65:12",
																"nodeType": "YulFunctionCall",
																"src": "15942:65:12"
															},
															"nativeSrc": "15942:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "15942:65:12"
														},
														{
															"nativeSrc": "16016:46:12",
															"nodeType": "YulAssignment",
															"src": "16016:46:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16027:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16027:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "16054:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "16054:6:12"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "16032:21:12",
																			"nodeType": "YulIdentifier",
																			"src": "16032:21:12"
																		},
																		"nativeSrc": "16032:29:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16032:29:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16023:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16023:3:12"
																},
																"nativeSrc": "16023:39:12",
																"nodeType": "YulFunctionCall",
																"src": "16023:39:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16016:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16016:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15691:377:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15764:5:12",
														"nodeType": "YulTypedName",
														"src": "15764:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "15771:3:12",
														"nodeType": "YulTypedName",
														"src": "15771:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15779:3:12",
														"nodeType": "YulTypedName",
														"src": "15779:3:12",
														"type": ""
													}
												],
												"src": "15691:377:12"
											},
											{
												"body": {
													"nativeSrc": "16192:195:12",
													"nodeType": "YulBlock",
													"src": "16192:195:12",
													"statements": [
														{
															"nativeSrc": "16202:26:12",
															"nodeType": "YulAssignment",
															"src": "16202:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16214:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16214:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16225:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16225:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16210:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16210:3:12"
																},
																"nativeSrc": "16210:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16210:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16202:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16202:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16249:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16249:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16260:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16260:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16245:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16245:3:12"
																		},
																		"nativeSrc": "16245:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16245:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16268:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "16268:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16274:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16274:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16264:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16264:3:12"
																		},
																		"nativeSrc": "16264:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16264:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16238:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16238:6:12"
																},
																"nativeSrc": "16238:47:12",
																"nodeType": "YulFunctionCall",
																"src": "16238:47:12"
															},
															"nativeSrc": "16238:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "16238:47:12"
														},
														{
															"nativeSrc": "16294:86:12",
															"nodeType": "YulAssignment",
															"src": "16294:86:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16366:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16366:6:12"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "16375:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "16375:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16302:63:12",
																	"nodeType": "YulIdentifier",
																	"src": "16302:63:12"
																},
																"nativeSrc": "16302:78:12",
																"nodeType": "YulFunctionCall",
																"src": "16302:78:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16294:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16294:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16074:313:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16164:9:12",
														"nodeType": "YulTypedName",
														"src": "16164:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16176:6:12",
														"nodeType": "YulTypedName",
														"src": "16176:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16187:4:12",
														"nodeType": "YulTypedName",
														"src": "16187:4:12",
														"type": ""
													}
												],
												"src": "16074:313:12"
											},
											{
												"body": {
													"nativeSrc": "16421:152:12",
													"nodeType": "YulBlock",
													"src": "16421:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16438:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16438:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16441:77:12",
																		"nodeType": "YulLiteral",
																		"src": "16441:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16431:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16431:6:12"
																},
																"nativeSrc": "16431:88:12",
																"nodeType": "YulFunctionCall",
																"src": "16431:88:12"
															},
															"nativeSrc": "16431:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "16431:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16535:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16535:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16538:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16538:4:12",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16528:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16528:6:12"
																},
																"nativeSrc": "16528:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16528:15:12"
															},
															"nativeSrc": "16528:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16528:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16559:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16559:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16562:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16562:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16552:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16552:6:12"
																},
																"nativeSrc": "16552:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16552:15:12"
															},
															"nativeSrc": "16552:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16552:15:12"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "16393:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "16393:180:12"
											},
											{
												"body": {
													"nativeSrc": "16607:152:12",
													"nodeType": "YulBlock",
													"src": "16607:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16624:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16624:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16627:77:12",
																		"nodeType": "YulLiteral",
																		"src": "16627:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16617:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16617:6:12"
																},
																"nativeSrc": "16617:88:12",
																"nodeType": "YulFunctionCall",
																"src": "16617:88:12"
															},
															"nativeSrc": "16617:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "16617:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16721:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16721:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16724:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16724:4:12",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16714:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16714:6:12"
																},
																"nativeSrc": "16714:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16714:15:12"
															},
															"nativeSrc": "16714:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16714:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16745:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16745:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16748:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16748:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16738:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16738:6:12"
																},
																"nativeSrc": "16738:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16738:15:12"
															},
															"nativeSrc": "16738:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "16738:15:12"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "16579:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "16579:180:12"
											},
											{
												"body": {
													"nativeSrc": "16808:128:12",
													"nodeType": "YulBlock",
													"src": "16808:128:12",
													"statements": [
														{
															"nativeSrc": "16818:33:12",
															"nodeType": "YulAssignment",
															"src": "16818:33:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16845:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16845:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "16827:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "16827:17:12"
																},
																"nativeSrc": "16827:24:12",
																"nodeType": "YulFunctionCall",
																"src": "16827:24:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "16818:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "16818:5:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "16879:22:12",
																"nodeType": "YulBlock",
																"src": "16879:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "16881:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "16881:16:12"
																			},
																			"nativeSrc": "16881:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "16881:18:12"
																		},
																		"nativeSrc": "16881:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "16881:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16866:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16866:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16873:4:12",
																		"nodeType": "YulLiteral",
																		"src": "16873:4:12",
																		"type": "",
																		"value": "0x00"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "16863:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "16863:2:12"
																},
																"nativeSrc": "16863:15:12",
																"nodeType": "YulFunctionCall",
																"src": "16863:15:12"
															},
															"nativeSrc": "16860:41:12",
															"nodeType": "YulIf",
															"src": "16860:41:12"
														},
														{
															"nativeSrc": "16910:20:12",
															"nodeType": "YulAssignment",
															"src": "16910:20:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "16921:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "16921:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16928:1:12",
																		"nodeType": "YulLiteral",
																		"src": "16928:1:12",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "16917:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16917:3:12"
																},
																"nativeSrc": "16917:13:12",
																"nodeType": "YulFunctionCall",
																"src": "16917:13:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "16910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16910:3:12"
																}
															]
														}
													]
												},
												"name": "decrement_t_uint256",
												"nativeSrc": "16765:171:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16794:5:12",
														"nodeType": "YulTypedName",
														"src": "16794:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "16804:3:12",
														"nodeType": "YulTypedName",
														"src": "16804:3:12",
														"type": ""
													}
												],
												"src": "16765:171:12"
											},
											{
												"body": {
													"nativeSrc": "17048:76:12",
													"nodeType": "YulBlock",
													"src": "17048:76:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17070:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17070:6:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17078:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17078:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17066:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17066:3:12"
																		},
																		"nativeSrc": "17066:14:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17066:14:12"
																	},
																	{
																		"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
																		"kind": "string",
																		"nativeSrc": "17082:34:12",
																		"nodeType": "YulLiteral",
																		"src": "17082:34:12",
																		"type": "",
																		"value": "Strings: hex length insufficient"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17059:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17059:6:12"
																},
																"nativeSrc": "17059:58:12",
																"nodeType": "YulFunctionCall",
																"src": "17059:58:12"
															},
															"nativeSrc": "17059:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "17059:58:12"
														}
													]
												},
												"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
												"nativeSrc": "16942:182:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17040:6:12",
														"nodeType": "YulTypedName",
														"src": "17040:6:12",
														"type": ""
													}
												],
												"src": "16942:182:12"
											},
											{
												"body": {
													"nativeSrc": "17276:220:12",
													"nodeType": "YulBlock",
													"src": "17276:220:12",
													"statements": [
														{
															"nativeSrc": "17286:74:12",
															"nodeType": "YulAssignment",
															"src": "17286:74:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17352:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17352:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17357:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17357:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17293:58:12",
																	"nodeType": "YulIdentifier",
																	"src": "17293:58:12"
																},
																"nativeSrc": "17293:67:12",
																"nodeType": "YulFunctionCall",
																"src": "17293:67:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17286:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17286:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17458:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17458:3:12"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																	"nativeSrc": "17369:88:12",
																	"nodeType": "YulIdentifier",
																	"src": "17369:88:12"
																},
																"nativeSrc": "17369:93:12",
																"nodeType": "YulFunctionCall",
																"src": "17369:93:12"
															},
															"nativeSrc": "17369:93:12",
															"nodeType": "YulExpressionStatement",
															"src": "17369:93:12"
														},
														{
															"nativeSrc": "17471:19:12",
															"nodeType": "YulAssignment",
															"src": "17471:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17482:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "17482:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17487:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17487:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17478:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17478:3:12"
																},
																"nativeSrc": "17478:12:12",
																"nodeType": "YulFunctionCall",
																"src": "17478:12:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17471:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17471:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17130:366:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17264:3:12",
														"nodeType": "YulTypedName",
														"src": "17264:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17272:3:12",
														"nodeType": "YulTypedName",
														"src": "17272:3:12",
														"type": ""
													}
												],
												"src": "17130:366:12"
											},
											{
												"body": {
													"nativeSrc": "17673:248:12",
													"nodeType": "YulBlock",
													"src": "17673:248:12",
													"statements": [
														{
															"nativeSrc": "17683:26:12",
															"nodeType": "YulAssignment",
															"src": "17683:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17695:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17695:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17706:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17706:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17691:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17691:3:12"
																},
																"nativeSrc": "17691:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17691:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17683:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17683:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17730:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17730:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17741:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17741:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17726:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17726:3:12"
																		},
																		"nativeSrc": "17726:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17726:17:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17749:4:12",
																				"nodeType": "YulIdentifier",
																				"src": "17749:4:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17755:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17755:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17745:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17745:3:12"
																		},
																		"nativeSrc": "17745:20:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17745:20:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17719:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17719:6:12"
																},
																"nativeSrc": "17719:47:12",
																"nodeType": "YulFunctionCall",
																"src": "17719:47:12"
															},
															"nativeSrc": "17719:47:12",
															"nodeType": "YulExpressionStatement",
															"src": "17719:47:12"
														},
														{
															"nativeSrc": "17775:139:12",
															"nodeType": "YulAssignment",
															"src": "17775:139:12",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17909:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "17909:4:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17783:124:12",
																	"nodeType": "YulIdentifier",
																	"src": "17783:124:12"
																},
																"nativeSrc": "17783:131:12",
																"nodeType": "YulFunctionCall",
																"src": "17783:131:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17775:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17775:4:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17502:419:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17653:9:12",
														"nodeType": "YulTypedName",
														"src": "17653:9:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17668:4:12",
														"nodeType": "YulTypedName",
														"src": "17668:4:12",
														"type": ""
													}
												],
												"src": "17502:419:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$579_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$579_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$579_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$579__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$579_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b5060043610610109575f3560e01c8063817b1cd2116100a0578063a217fddf1161006f578063a217fddf14610291578063b6b55f25146102af578063d5391393146102cb578063d547741f146102e9578063f2fde38b1461030557610109565b8063817b1cd2146101f35780638da5cb5b146102115780639168ae721461022f57806391d148541461026157610109565b806336568abe116100dc57806336568abe146101a5578063372500ab146101c15780636ae674e2146101cb578063715018a6146101e957610109565b806301ffc9a71461010d578063248a9ca31461013d5780632e1a7d4d1461016d5780632f2ff15d14610189575b5f5ffd5b61012760048036038101906101229190611386565b610321565b60405161013491906113cb565b60405180910390f35b61015760048036038101906101529190611417565b61039a565b6040516101649190611451565b60405180910390f35b6101876004803603810190610182919061149d565b6103b7565b005b6101a3600480360381019061019e9190611522565b6105e8565b005b6101bf60048036038101906101ba9190611522565b610609565b005b6101c961068c565b005b6101d3610772565b6040516101e091906115bb565b60405180910390f35b6101f1610797565b005b6101fb6107aa565b60405161020891906115e3565b60405180910390f35b6102196107b0565b604051610226919061160b565b60405180910390f35b61024960048036038101906102449190611624565b6107d7565b6040516102589392919061164f565b60405180910390f35b61027b60048036038101906102769190611522565b6107fd565b60405161028891906113cb565b60405180910390f35b610299610861565b6040516102a69190611451565b60405180910390f35b6102c960048036038101906102c4919061149d565b610867565b005b6102d3610a63565b6040516102e09190611451565b60405180910390f35b61030360048036038101906102fe9190611522565b610a87565b005b61031f600480360381019061031a9190611624565b610aa8565b005b5f7f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19161480610393575061039282610b2a565b5b9050919050565b5f60015f8381526020019081526020015f20600101549050919050565b5f81036103fb57806040517f77b8dde30000000000000000000000000000000000000000000000000000000081526004016103f291906115e3565b60405180910390fd5b610403610b93565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905081815f0154101561048e57805f01546040517f9266535100000000000000000000000000000000000000000000000000000000815260040161048591906115e3565b60405180910390fd5b81815f015f8282546104a091906116b1565b925050819055508160035f8282546104b891906116b1565b925050819055505f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33856040518363ffffffff1660e01b815260040161051c9291906116e4565b6020604051808303815f875af1158015610538573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061055c9190611735565b905080610595576040517f6f3f6cd000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff167f7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5846040516105db91906115e3565b60405180910390a2505050565b6105f18261039a565b6105fa81610cab565b6106048383610cbf565b505050565b610611610d99565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161461067e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610675906117e0565b60405180910390fd5b6106888282610da0565b5050565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f816001015490505f810361070d576040517f83a8cdb600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82600101819055506107203382610e7b565b3373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe8260405161076691906115e3565b60405180910390a25050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b61079f610f08565b6107a85f610f86565b565b60035481565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6004602052805f5260405f205f91509050805f0154908060010154908060020154905083565b5f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff16905092915050565b5f5f1b81565b5f81036108ab57806040517f77b8dde30000000000000000000000000000000000000000000000000000000081526004016108a291906115e3565b60405180910390fd5b5f60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161090a939291906117fe565b6020604051808303815f875af1158015610926573d5f5f3e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061094a9190611735565b90508061098e57816040517f77b8dde300000000000000000000000000000000000000000000000000000000815260040161098591906115e3565b60405180910390fd5b610996610b93565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20905082815f015f8282546109e89190611833565b925050819055504281600201819055508260035f828254610a099190611833565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167f2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c484604051610a5691906115e3565b60405180910390a2505050565b7f9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a681565b610a908261039a565b610a9981610cab565b610aa38383610da0565b505050565b610ab0610f08565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610b1e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b15906118d6565b60405180910390fd5b610b2781610f86565b50565b5f7f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b5f60045f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2090505f815f01541115610c9f575f816002015442610bef91906116b1565b90505f6301e133808260646005865f0154610c0a91906118f4565b610c149190611962565b610c1e91906118f4565b610c289190611962565b905080836001015f828254610c3d9190611833565b92505081905550610c4e3382610e7b565b3373ffffffffffffffffffffffffffffffffffffffff167ffc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe82604051610c9491906115e3565b60405180910390a250505b42816002018190555050565b610cbc81610cb7610d99565b611047565b50565b610cc982826107fd565b610d95576001805f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610d3a610d99565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b5f33905090565b610daa82826107fd565b15610e77575f60015f8481526020019081526020015f205f015f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff021916908315150217905550610e1c610d99565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b60025f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836040518363ffffffff1660e01b8152600401610ed79291906116e4565b5f604051808303815f87803b158015610eee575f5ffd5b505af1158015610f00573d5f5f3e3d5ffd5b505050505050565b610f10610d99565b73ffffffffffffffffffffffffffffffffffffffff16610f2e6107b0565b73ffffffffffffffffffffffffffffffffffffffff1614610f84576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610f7b906119dc565b60405180910390fd5b565b5f5f5f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050815f5f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61105182826107fd565b6110c75761105e816110cb565b61106b835f1c60206110f8565b60405160200161107c929190611ae0565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110be9190611b61565b60405180910390fd5b5050565b60606110f18273ffffffffffffffffffffffffffffffffffffffff16601460ff166110f8565b9050919050565b60605f600283600261110a91906118f4565b6111149190611833565b67ffffffffffffffff81111561112d5761112c611b81565b5b6040519080825280601f01601f19166020018201604052801561115f5781602001600182028036833780820191505090505b5090507f3000000000000000000000000000000000000000000000000000000000000000815f8151811061119657611195611bae565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106111f9576111f8611bae565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a9053505f600184600261123791906118f4565b6112419190611833565b90505b60018111156112e0577f3031323334353637383961626364656600000000000000000000000000000000600f86166010811061128357611282611bae565b5b1a60f81b82828151811061129a57611299611bae565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191690815f1a905350600485901c9450806112d990611bdb565b9050611244565b505f8414611323576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161131a90611c4c565b60405180910390fd5b8091505092915050565b5f5ffd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61136581611331565b811461136f575f5ffd5b50565b5f813590506113808161135c565b92915050565b5f6020828403121561139b5761139a61132d565b5b5f6113a884828501611372565b91505092915050565b5f8115159050919050565b6113c5816113b1565b82525050565b5f6020820190506113de5f8301846113bc565b92915050565b5f819050919050565b6113f6816113e4565b8114611400575f5ffd5b50565b5f81359050611411816113ed565b92915050565b5f6020828403121561142c5761142b61132d565b5b5f61143984828501611403565b91505092915050565b61144b816113e4565b82525050565b5f6020820190506114645f830184611442565b92915050565b5f819050919050565b61147c8161146a565b8114611486575f5ffd5b50565b5f8135905061149781611473565b92915050565b5f602082840312156114b2576114b161132d565b5b5f6114bf84828501611489565b91505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6114f1826114c8565b9050919050565b611501816114e7565b811461150b575f5ffd5b50565b5f8135905061151c816114f8565b92915050565b5f5f604083850312156115385761153761132d565b5b5f61154585828601611403565b92505060206115568582860161150e565b9150509250929050565b5f819050919050565b5f61158361157e611579846114c8565b611560565b6114c8565b9050919050565b5f61159482611569565b9050919050565b5f6115a58261158a565b9050919050565b6115b58161159b565b82525050565b5f6020820190506115ce5f8301846115ac565b92915050565b6115dd8161146a565b82525050565b5f6020820190506115f65f8301846115d4565b92915050565b611605816114e7565b82525050565b5f60208201905061161e5f8301846115fc565b92915050565b5f602082840312156116395761163861132d565b5b5f6116468482850161150e565b91505092915050565b5f6060820190506116625f8301866115d4565b61166f60208301856115d4565b61167c60408301846115d4565b949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6116bb8261146a565b91506116c68361146a565b92508282039050818111156116de576116dd611684565b5b92915050565b5f6040820190506116f75f8301856115fc565b61170460208301846115d4565b9392505050565b611714816113b1565b811461171e575f5ffd5b50565b5f8151905061172f8161170b565b92915050565b5f6020828403121561174a5761174961132d565b5b5f61175784828501611721565b91505092915050565b5f82825260208201905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e63655f8201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b5f6117ca602f83611760565b91506117d582611770565b604082019050919050565b5f6020820190508181035f8301526117f7816117be565b9050919050565b5f6060820190506118115f8301866115fc565b61181e60208301856115fc565b61182b60408301846115d4565b949350505050565b5f61183d8261146a565b91506118488361146a565b92508282019050808211156118605761185f611684565b5b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f20615f8201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b5f6118c0602683611760565b91506118cb82611866565b604082019050919050565b5f6020820190508181035f8301526118ed816118b4565b9050919050565b5f6118fe8261146a565b91506119098361146a565b92508282026119178161146a565b9150828204841483151761192e5761192d611684565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61196c8261146a565b91506119778361146a565b92508261198757611986611935565b5b828204905092915050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65725f82015250565b5f6119c6602083611760565b91506119d182611992565b602082019050919050565b5f6020820190508181035f8301526119f3816119ba565b9050919050565b5f81905092915050565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000005f82015250565b5f611a386017836119fa565b9150611a4382611a04565b601782019050919050565b5f81519050919050565b8281835e5f83830152505050565b5f611a7082611a4e565b611a7a81856119fa565b9350611a8a818560208601611a58565b80840191505092915050565b7f206973206d697373696e6720726f6c65200000000000000000000000000000005f82015250565b5f611aca6011836119fa565b9150611ad582611a96565b601182019050919050565b5f611aea82611a2c565b9150611af68285611a66565b9150611b0182611abe565b9150611b0d8284611a66565b91508190509392505050565b5f601f19601f8301169050919050565b5f611b3382611a4e565b611b3d8185611760565b9350611b4d818560208601611a58565b611b5681611b19565b840191505092915050565b5f6020820190508181035f830152611b798184611b29565b905092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52603260045260245ffd5b5f611be58261146a565b91505f8203611bf757611bf6611684565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e745f82015250565b5f611c36602083611760565b9150611c4182611c02565b602082019050919050565b5f6020820190508181035f830152611c6381611c2a565b905091905056fea26469706673582212200c01c0ed9c5d5c441e0f4e2458386c589e0778cd8bd32ca02a92b3907377895864736f6c634300081c0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x109 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x817B1CD2 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA217FDDF GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x291 JUMPI DUP1 PUSH4 0xB6B55F25 EQ PUSH2 0x2AF JUMPI DUP1 PUSH4 0xD5391393 EQ PUSH2 0x2CB JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x2E9 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x305 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x817B1CD2 EQ PUSH2 0x1F3 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0x9168AE72 EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x261 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x36568ABE GT PUSH2 0xDC JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x1A5 JUMPI DUP1 PUSH4 0x372500AB EQ PUSH2 0x1C1 JUMPI DUP1 PUSH4 0x6AE674E2 EQ PUSH2 0x1CB JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1E9 JUMPI PUSH2 0x109 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x10D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x13D JUMPI DUP1 PUSH4 0x2E1A7D4D EQ PUSH2 0x16D JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x189 JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x127 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x1386 JUMP JUMPDEST PUSH2 0x321 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x134 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x157 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x1417 JUMP JUMPDEST PUSH2 0x39A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x187 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x182 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x3B7 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x19E SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x5E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1BF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BA SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x609 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1C9 PUSH2 0x68C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D3 PUSH2 0x772 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E0 SWAP2 SWAP1 PUSH2 0x15BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F1 PUSH2 0x797 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1FB PUSH2 0x7AA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x219 PUSH2 0x7B0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x226 SWAP2 SWAP1 PUSH2 0x160B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x249 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x244 SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH2 0x7D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x258 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x164F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x27B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x276 SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0x7FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x288 SWAP2 SWAP1 PUSH2 0x13CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x299 PUSH2 0x861 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A6 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C9 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C4 SWAP2 SWAP1 PUSH2 0x149D JUMP JUMPDEST PUSH2 0x867 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2D3 PUSH2 0xA63 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E0 SWAP2 SWAP1 PUSH2 0x1451 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x303 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2FE SWAP2 SWAP1 PUSH2 0x1522 JUMP JUMPDEST PUSH2 0xA87 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x31F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31A SWAP2 SWAP1 PUSH2 0x1624 JUMP JUMPDEST PUSH2 0xAA8 JUMP JUMPDEST STOP JUMPDEST PUSH0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x393 JUMPI POP PUSH2 0x392 DUP3 PUSH2 0xB2A JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x3FB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x77B8DDE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F2 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x403 PUSH2 0xB93 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP2 DUP2 PUSH0 ADD SLOAD LT ISZERO PUSH2 0x48E JUMPI DUP1 PUSH0 ADD SLOAD PUSH1 0x40 MLOAD PUSH32 0x9266535100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x485 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4A0 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4B8 SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP6 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x51C SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x538 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x55C SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x595 JUMPI PUSH1 0x40 MLOAD PUSH32 0x6F3F6CD000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5 DUP5 PUSH1 0x40 MLOAD PUSH2 0x5DB SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x5F1 DUP3 PUSH2 0x39A JUMP JUMPDEST PUSH2 0x5FA DUP2 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0x604 DUP4 DUP4 PUSH2 0xCBF JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x611 PUSH2 0xD99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x67E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x675 SWAP1 PUSH2 0x17E0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x688 DUP3 DUP3 PUSH2 0xDA0 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH1 0x1 ADD SLOAD SWAP1 POP PUSH0 DUP2 SUB PUSH2 0x70D JUMPI PUSH1 0x40 MLOAD PUSH32 0x83A8CDB600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH2 0x720 CALLER DUP3 PUSH2 0xE7B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP3 PUSH1 0x40 MLOAD PUSH2 0x766 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH2 0x79F PUSH2 0xF08 JUMP JUMPDEST PUSH2 0x7A8 PUSH0 PUSH2 0xF86 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 POP DUP4 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 SHL DUP2 JUMP JUMPDEST PUSH0 DUP2 SUB PUSH2 0x8AB JUMPI DUP1 PUSH1 0x40 MLOAD PUSH32 0x77B8DDE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8A2 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP6 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x90A SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x17FE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x926 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x94A SWAP2 SWAP1 PUSH2 0x1735 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x98E JUMPI DUP2 PUSH1 0x40 MLOAD PUSH32 0x77B8DDE300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x985 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x996 PUSH2 0xB93 JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x9E8 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA09 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4 DUP5 PUSH1 0x40 MLOAD PUSH2 0xA56 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH32 0x9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6 DUP2 JUMP JUMPDEST PUSH2 0xA90 DUP3 PUSH2 0x39A JUMP JUMPDEST PUSH2 0xA99 DUP2 PUSH2 0xCAB JUMP JUMPDEST PUSH2 0xAA3 DUP4 DUP4 PUSH2 0xDA0 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xAB0 PUSH2 0xF08 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB1E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB15 SWAP1 PUSH2 0x18D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xB27 DUP2 PUSH2 0xF86 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x4 PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH0 DUP2 PUSH0 ADD SLOAD GT ISZERO PUSH2 0xC9F JUMPI PUSH0 DUP2 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xBEF SWAP2 SWAP1 PUSH2 0x16B1 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 DUP3 PUSH1 0x64 PUSH1 0x5 DUP7 PUSH0 ADD SLOAD PUSH2 0xC0A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xC14 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST PUSH2 0xC1E SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0xC28 SWAP2 SWAP1 PUSH2 0x1962 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xC3D SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xC4E CALLER DUP3 PUSH2 0xE7B JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE DUP3 PUSH1 0x40 MLOAD PUSH2 0xC94 SWAP2 SWAP1 PUSH2 0x15E3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMPDEST TIMESTAMP DUP2 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0xCBC DUP2 PUSH2 0xCB7 PUSH2 0xD99 JUMP JUMPDEST PUSH2 0x1047 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xCC9 DUP3 DUP3 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0xD95 JUMPI PUSH1 0x1 DUP1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xD3A PUSH2 0xD99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0xDAA DUP3 DUP3 PUSH2 0x7FD JUMP JUMPDEST ISZERO PUSH2 0xE77 JUMPI PUSH0 PUSH1 0x1 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 ADD PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0xE1C PUSH2 0xD99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x40C10F19 DUP4 DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xED7 SWAP3 SWAP2 SWAP1 PUSH2 0x16E4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xEEE JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xF00 JUMPI RETURNDATASIZE PUSH0 PUSH0 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF10 PUSH2 0xD99 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xF2E PUSH2 0x7B0 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xF84 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xF7B SWAP1 PUSH2 0x19DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH0 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH0 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1051 DUP3 DUP3 PUSH2 0x7FD JUMP JUMPDEST PUSH2 0x10C7 JUMPI PUSH2 0x105E DUP2 PUSH2 0x10CB JUMP JUMPDEST PUSH2 0x106B DUP4 PUSH0 SHR PUSH1 0x20 PUSH2 0x10F8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x107C SWAP3 SWAP2 SWAP1 PUSH2 0x1AE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10BE SWAP2 SWAP1 PUSH2 0x1B61 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x10F1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x10F8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x110A SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x1114 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x112D JUMPI PUSH2 0x112C PUSH2 0x1B81 JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x115F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH0 DUP2 MLOAD DUP2 LT PUSH2 0x1196 JUMPI PUSH2 0x1195 PUSH2 0x1BAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x11F9 JUMPI PUSH2 0x11F8 PUSH2 0x1BAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x1237 SWAP2 SWAP1 PUSH2 0x18F4 JUMP JUMPDEST PUSH2 0x1241 SWAP2 SWAP1 PUSH2 0x1833 JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x12E0 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x1283 JUMPI PUSH2 0x1282 PUSH2 0x1BAE JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x129A JUMPI PUSH2 0x1299 PUSH2 0x1BAE JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x12D9 SWAP1 PUSH2 0x1BDB JUMP JUMPDEST SWAP1 POP PUSH2 0x1244 JUMP JUMPDEST POP PUSH0 DUP5 EQ PUSH2 0x1323 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x131A SWAP1 PUSH2 0x1C4C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1365 DUP2 PUSH2 0x1331 JUMP JUMPDEST DUP2 EQ PUSH2 0x136F JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1380 DUP2 PUSH2 0x135C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x139B JUMPI PUSH2 0x139A PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x13A8 DUP5 DUP3 DUP6 ADD PUSH2 0x1372 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13C5 DUP2 PUSH2 0x13B1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x13DE PUSH0 DUP4 ADD DUP5 PUSH2 0x13BC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x13F6 DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1400 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1411 DUP2 PUSH2 0x13ED JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x142C JUMPI PUSH2 0x142B PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1439 DUP5 DUP3 DUP6 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x144B DUP2 PUSH2 0x13E4 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1464 PUSH0 DUP4 ADD DUP5 PUSH2 0x1442 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x147C DUP2 PUSH2 0x146A JUMP JUMPDEST DUP2 EQ PUSH2 0x1486 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1497 DUP2 PUSH2 0x1473 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14B2 JUMPI PUSH2 0x14B1 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x14BF DUP5 DUP3 DUP6 ADD PUSH2 0x1489 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x14F1 DUP3 PUSH2 0x14C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1501 DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP2 EQ PUSH2 0x150B JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x151C DUP2 PUSH2 0x14F8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1538 JUMPI PUSH2 0x1537 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1545 DUP6 DUP3 DUP7 ADD PUSH2 0x1403 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1556 DUP6 DUP3 DUP7 ADD PUSH2 0x150E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1583 PUSH2 0x157E PUSH2 0x1579 DUP5 PUSH2 0x14C8 JUMP JUMPDEST PUSH2 0x1560 JUMP JUMPDEST PUSH2 0x14C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1594 DUP3 PUSH2 0x1569 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x15A5 DUP3 PUSH2 0x158A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x15B5 DUP2 PUSH2 0x159B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15CE PUSH0 DUP4 ADD DUP5 PUSH2 0x15AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x15DD DUP2 PUSH2 0x146A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F6 PUSH0 DUP4 ADD DUP5 PUSH2 0x15D4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1605 DUP2 PUSH2 0x14E7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x161E PUSH0 DUP4 ADD DUP5 PUSH2 0x15FC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1639 JUMPI PUSH2 0x1638 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1646 DUP5 DUP3 DUP6 ADD PUSH2 0x150E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1662 PUSH0 DUP4 ADD DUP7 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x166F PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15D4 JUMP JUMPDEST PUSH2 0x167C PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x16BB DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH2 0x16C6 DUP4 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x16DE JUMPI PUSH2 0x16DD PUSH2 0x1684 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x16F7 PUSH0 DUP4 ADD DUP6 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x1704 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x15D4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x1714 DUP2 PUSH2 0x13B1 JUMP JUMPDEST DUP2 EQ PUSH2 0x171E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x172F DUP2 PUSH2 0x170B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x174A JUMPI PUSH2 0x1749 PUSH2 0x132D JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1757 DUP5 DUP3 DUP6 ADD PUSH2 0x1721 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x17CA PUSH1 0x2F DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP2 POP PUSH2 0x17D5 DUP3 PUSH2 0x1770 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x17F7 DUP2 PUSH2 0x17BE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1811 PUSH0 DUP4 ADD DUP7 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x181E PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x15FC JUMP JUMPDEST PUSH2 0x182B PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x15D4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x183D DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH2 0x1848 DUP4 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1860 JUMPI PUSH2 0x185F PUSH2 0x1684 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x18C0 PUSH1 0x26 DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP2 POP PUSH2 0x18CB DUP3 PUSH2 0x1866 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x18ED DUP2 PUSH2 0x18B4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x18FE DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH2 0x1909 DUP4 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x1917 DUP2 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x192E JUMPI PUSH2 0x192D PUSH2 0x1684 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x196C DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH2 0x1977 DUP4 PUSH2 0x146A JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1987 JUMPI PUSH2 0x1986 PUSH2 0x1935 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x19C6 PUSH1 0x20 DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP2 POP PUSH2 0x19D1 DUP3 PUSH2 0x1992 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x19F3 DUP2 PUSH2 0x19BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1A38 PUSH1 0x17 DUP4 PUSH2 0x19FA JUMP JUMPDEST SWAP2 POP PUSH2 0x1A43 DUP3 PUSH2 0x1A04 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1A70 DUP3 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1A7A DUP2 DUP6 PUSH2 0x19FA JUMP JUMPDEST SWAP4 POP PUSH2 0x1A8A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A58 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1ACA PUSH1 0x11 DUP4 PUSH2 0x19FA JUMP JUMPDEST SWAP2 POP PUSH2 0x1AD5 DUP3 PUSH2 0x1A96 JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1AEA DUP3 PUSH2 0x1A2C JUMP JUMPDEST SWAP2 POP PUSH2 0x1AF6 DUP3 DUP6 PUSH2 0x1A66 JUMP JUMPDEST SWAP2 POP PUSH2 0x1B01 DUP3 PUSH2 0x1ABE JUMP JUMPDEST SWAP2 POP PUSH2 0x1B0D DUP3 DUP5 PUSH2 0x1A66 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1B33 DUP3 PUSH2 0x1A4E JUMP JUMPDEST PUSH2 0x1B3D DUP2 DUP6 PUSH2 0x1760 JUMP JUMPDEST SWAP4 POP PUSH2 0x1B4D DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1A58 JUMP JUMPDEST PUSH2 0x1B56 DUP2 PUSH2 0x1B19 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1B79 DUP2 DUP5 PUSH2 0x1B29 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x1BE5 DUP3 PUSH2 0x146A JUMP JUMPDEST SWAP2 POP PUSH0 DUP3 SUB PUSH2 0x1BF7 JUMPI PUSH2 0x1BF6 PUSH2 0x1684 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x1C36 PUSH1 0x20 DUP4 PUSH2 0x1760 JUMP JUMPDEST SWAP2 POP PUSH2 0x1C41 DUP3 PUSH2 0x1C02 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1C63 DUP2 PUSH2 0x1C2A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC ADD 0xC0 0xED SWAP13 TSTORE TLOAD PREVRANDAO 0x1E 0xF 0x4E 0x24 PC CODESIZE PUSH13 0x589E0778CD8BD32CA02A92B390 PUSH20 0x77895864736F6C634300081C0033000000000000 ",
							"sourceMap": "324:3238:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2732:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4504:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2958:601:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4929:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6038:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2592:358:11;;;:::i;:::-;;449:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:2;;;:::i;:::-;;481:26:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1201:85:2;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;636:41:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;3021:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2153:49;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1269:624:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;378:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5354:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2074:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2732:202:0;2817:4;2855:32;2840:47;;;:11;:47;;;;:87;;;;2891:36;2915:11;2891:23;:36::i;:::-;2840:87;2833:94;;2732:202;;;:::o;4504:129::-;4578:7;4604:6;:12;4611:4;4604:12;;;;;;;;;;;:22;;;4597:29;;4504:129;;;:::o;2958:601:11:-;3026:1;3016:6;:11;3012:77;;3070:6;3051:26;;;;;;;;;;;:::i;:::-;;;;;;;;3012:77;3101:27;:25;:27::i;:::-;3139:21;3163:7;:19;3171:10;3163:19;;;;;;;;;;;;;;;3139:43;;3216:6;3199;:14;;;:23;3195:98;;;3266:6;:14;;;3246:35;;;;;;;;;;;:::i;:::-;;;;;;;;3195:98;3323:6;3305;:14;;;:24;;;;;;;:::i;:::-;;;;;;;;3355:6;3340:11;;:21;;;;;;;:::i;:::-;;;;;;;;3374:12;3389:11;;;;;;;;;;;:20;;;3410:10;3422:6;3389:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3374:55;;3445:7;3440:65;;3476:17;;;;;;;;;;;;;;3440:65;3532:10;3522:29;;;3544:6;3522:29;;;;;;:::i;:::-;;;;;;;;3001:558;;2958:601;:::o;4929:145:0:-;5012:18;5025:4;5012:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5042:25:::1;5053:4;5059:7;5042:10;:25::i;:::-;4929:145:::0;;;:::o;6038:214::-;6144:12;:10;:12::i;:::-;6133:23;;:7;:23;;;6125:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6219:26;6231:4;6237:7;6219:11;:26::i;:::-;6038:214;;:::o;2592:358:11:-;2636:21;2660:7;:19;2668:10;2660:19;;;;;;;;;;;;;;;2636:43;;2690:15;2708:6;:17;;;2690:35;;2753:1;2742:7;:12;2738:72;;2778:20;;;;;;;;;;;;;;2738:72;2842:1;2822:6;:17;;:21;;;;2856:33;2869:10;2881:7;2856:12;:33::i;:::-;2922:10;2907:35;;;2934:7;2907:35;;;;;;:::i;:::-;;;;;;;;2625:325;;2592:358::o;449:25::-;;;;;;;;;;;;;:::o;1824:101:2:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;481:26:11:-;;;;:::o;1201:85:2:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;636:41:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;3021:145:0:-;3107:4;3130:6;:12;3137:4;3130:12;;;;;;;;;;;:20;;:29;3151:7;3130:29;;;;;;;;;;;;;;;;;;;;;;;;;3123:36;;3021:145;;;;:::o;2153:49::-;2198:4;2153:49;;;:::o;1269:624:11:-;1336:1;1326:6;:11;1322:77;;1380:6;1361:26;;;;;;;;;;;:::i;:::-;;;;;;;;1322:77;1411:12;1426:11;;;;;;;;;;;:24;;;1465:10;1498:4;1518:6;1426:109;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1411:124;;1553:7;1548:74;;1603:6;1584:26;;;;;;;;;;;:::i;:::-;;;;;;;;1548:74;1634:27;:25;:27::i;:::-;1674:21;1698:7;:19;1706:10;1698:19;;;;;;;;;;;;;;;1674:43;;1746:6;1728;:14;;;:24;;;;;;;:::i;:::-;;;;;;;;1789:15;1763:6;:23;;:41;;;;1832:6;1817:11;;:21;;;;;;;:::i;:::-;;;;;;;;1866:10;1856:29;;;1878:6;1856:29;;;;;;:::i;:::-;;;;;;;;1311:582;;1269:624;:::o;378:62::-;416:24;378:62;:::o;5354:147:0:-;5438:18;5451:4;5438:12;:18::i;:::-;2631:16;2642:4;2631:10;:16::i;:::-;5468:26:::1;5480:4;5486:7;5468:11;:26::i;:::-;5354:147:::0;;;:::o;2074:198:2:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;829:155:6:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;2045:539:11:-;2102:21;2126:7;:19;2134:10;2126:19;;;;;;;;;;;;;;;2102:43;;2179:1;2162:6;:14;;;:18;2158:365;;;2197:19;2237:6;:23;;;2219:15;:41;;;;:::i;:::-;2197:63;;2275:14;2356:8;2324:11;2317:3;2312:1;2295:6;:14;;;:18;;;;:::i;:::-;2294:26;;;;:::i;:::-;2293:42;;;;:::i;:::-;2292:72;;;;:::i;:::-;2275:89;;2400:6;2379;:17;;;:27;;;;;;;:::i;:::-;;;;;;;;2423:32;2436:10;2448:6;2423:12;:32::i;:::-;2492:10;2477:34;;;2504:6;2477:34;;;;;;:::i;:::-;;;;;;;;2182:341;;2158:365;2561:15;2535:6;:23;;:41;;;;2091:493;2045:539::o;3460:103:0:-;3526:30;3537:4;3543:12;:10;:12::i;:::-;3526:10;:30::i;:::-;3460:103;:::o;7587:233::-;7670:22;7678:4;7684:7;7670;:22::i;:::-;7665:149;;7740:4;7708:6;:12;7715:4;7708:12;;;;;;;;;;;:20;;:29;7729:7;7708:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7790:12;:10;:12::i;:::-;7763:40;;7781:7;7763:40;;7775:4;7763:40;;;;;;;;;;7665:149;7587:233;;:::o;655:96:4:-;708:7;734:10;727:17;;655:96;:::o;7991:234:0:-;8074:22;8082:4;8088:7;8074;:22::i;:::-;8070:149;;;8144:5;8112:6;:12;8119:4;8112:12;;;;;;;;;;;:20;;:29;8133:7;8112:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8195:12;:10;:12::i;:::-;8168:40;;8186:7;8168:40;;8180:4;8168:40;;;;;;;;;;8070:149;7991:234;;:::o;1901:136:11:-;1993:11;;;;;;;;;;;1977:34;;;2012:2;2016:12;1977:52;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1901:136;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;3844:479:0:-;3932:22;3940:4;3946:7;3932;:22::i;:::-;3927:390;;4115:28;4135:7;4115:19;:28::i;:::-;4214:38;4242:4;4234:13;;4249:2;4214:19;:38::i;:::-;4022:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3970:336;;;;;;;;;;;:::i;:::-;;;;;;;;3927:390;3844:479;;:::o;2407:149:5:-;2465:13;2497:52;2525:4;2509:22;;343:2;2497:52;;:11;:52::i;:::-;2490:59;;2407:149;;;:::o;1818:437::-;1893:13;1918:19;1963:1;1954:6;1950:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1940:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1918:47;;1975:15;:6;1982:1;1975:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2000;:6;2007:1;2000:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;2030:9;2055:1;2046:6;2042:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;2030:26;;2025:128;2062:1;2058;:5;2025:128;;;2096:8;2113:3;2105:5;:11;2096:21;;;;;;;:::i;:::-;;;;;2084:6;2091:1;2084:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;2141:1;2131:11;;;;;2065:3;;;;:::i;:::-;;;2025:128;;;;2179:1;2170:5;:10;2162:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;2241:6;2227:21;;;1818:437;;;;:::o;88:117:12:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:122::-;2717:24;2735:5;2717:24;:::i;:::-;2710:5;2707:35;2697:63;;2756:1;2753;2746:12;2697:63;2644:122;:::o;2772:139::-;2818:5;2856:6;2843:20;2834:29;;2872:33;2899:5;2872:33;:::i;:::-;2772:139;;;;:::o;2917:329::-;2976:6;3025:2;3013:9;3004:7;3000:23;2996:32;2993:119;;;3031:79;;:::i;:::-;2993:119;3151:1;3176:53;3221:7;3212:6;3201:9;3197:22;3176:53;:::i;:::-;3166:63;;3122:117;2917:329;;;;:::o;3252:126::-;3289:7;3329:42;3322:5;3318:54;3307:65;;3252:126;;;:::o;3384:96::-;3421:7;3450:24;3468:5;3450:24;:::i;:::-;3439:35;;3384:96;;;:::o;3486:122::-;3559:24;3577:5;3559:24;:::i;:::-;3552:5;3549:35;3539:63;;3598:1;3595;3588:12;3539:63;3486:122;:::o;3614:139::-;3660:5;3698:6;3685:20;3676:29;;3714:33;3741:5;3714:33;:::i;:::-;3614:139;;;;:::o;3759:474::-;3827:6;3835;3884:2;3872:9;3863:7;3859:23;3855:32;3852:119;;;3890:79;;:::i;:::-;3852:119;4010:1;4035:53;4080:7;4071:6;4060:9;4056:22;4035:53;:::i;:::-;4025:63;;3981:117;4137:2;4163:53;4208:7;4199:6;4188:9;4184:22;4163:53;:::i;:::-;4153:63;;4108:118;3759:474;;;;;:::o;4239:60::-;4267:3;4288:5;4281:12;;4239:60;;;:::o;4305:142::-;4355:9;4388:53;4406:34;4415:24;4433:5;4415:24;:::i;:::-;4406:34;:::i;:::-;4388:53;:::i;:::-;4375:66;;4305:142;;;:::o;4453:126::-;4503:9;4536:37;4567:5;4536:37;:::i;:::-;4523:50;;4453:126;;;:::o;4585:140::-;4649:9;4682:37;4713:5;4682:37;:::i;:::-;4669:50;;4585:140;;;:::o;4731:159::-;4832:51;4877:5;4832:51;:::i;:::-;4827:3;4820:64;4731:159;;:::o;4896:250::-;5003:4;5041:2;5030:9;5026:18;5018:26;;5054:85;5136:1;5125:9;5121:17;5112:6;5054:85;:::i;:::-;4896:250;;;;:::o;5152:118::-;5239:24;5257:5;5239:24;:::i;:::-;5234:3;5227:37;5152:118;;:::o;5276:222::-;5369:4;5407:2;5396:9;5392:18;5384:26;;5420:71;5488:1;5477:9;5473:17;5464:6;5420:71;:::i;:::-;5276:222;;;;:::o;5504:118::-;5591:24;5609:5;5591:24;:::i;:::-;5586:3;5579:37;5504:118;;:::o;5628:222::-;5721:4;5759:2;5748:9;5744:18;5736:26;;5772:71;5840:1;5829:9;5825:17;5816:6;5772:71;:::i;:::-;5628:222;;;;:::o;5856:329::-;5915:6;5964:2;5952:9;5943:7;5939:23;5935:32;5932:119;;;5970:79;;:::i;:::-;5932:119;6090:1;6115:53;6160:7;6151:6;6140:9;6136:22;6115:53;:::i;:::-;6105:63;;6061:117;5856:329;;;;:::o;6191:442::-;6340:4;6378:2;6367:9;6363:18;6355:26;;6391:71;6459:1;6448:9;6444:17;6435:6;6391:71;:::i;:::-;6472:72;6540:2;6529:9;6525:18;6516:6;6472:72;:::i;:::-;6554;6622:2;6611:9;6607:18;6598:6;6554:72;:::i;:::-;6191:442;;;;;;:::o;6639:180::-;6687:77;6684:1;6677:88;6784:4;6781:1;6774:15;6808:4;6805:1;6798:15;6825:194;6865:4;6885:20;6903:1;6885:20;:::i;:::-;6880:25;;6919:20;6937:1;6919:20;:::i;:::-;6914:25;;6963:1;6960;6956:9;6948:17;;6987:1;6981:4;6978:11;6975:37;;;6992:18;;:::i;:::-;6975:37;6825:194;;;;:::o;7025:332::-;7146:4;7184:2;7173:9;7169:18;7161:26;;7197:71;7265:1;7254:9;7250:17;7241:6;7197:71;:::i;:::-;7278:72;7346:2;7335:9;7331:18;7322:6;7278:72;:::i;:::-;7025:332;;;;;:::o;7363:116::-;7433:21;7448:5;7433:21;:::i;:::-;7426:5;7423:32;7413:60;;7469:1;7466;7459:12;7413:60;7363:116;:::o;7485:137::-;7539:5;7570:6;7564:13;7555:22;;7586:30;7610:5;7586:30;:::i;:::-;7485:137;;;;:::o;7628:345::-;7695:6;7744:2;7732:9;7723:7;7719:23;7715:32;7712:119;;;7750:79;;:::i;:::-;7712:119;7870:1;7895:61;7948:7;7939:6;7928:9;7924:22;7895:61;:::i;:::-;7885:71;;7841:125;7628:345;;;;:::o;7979:169::-;8063:11;8097:6;8092:3;8085:19;8137:4;8132:3;8128:14;8113:29;;7979:169;;;;:::o;8154:234::-;8294:34;8290:1;8282:6;8278:14;8271:58;8363:17;8358:2;8350:6;8346:15;8339:42;8154:234;:::o;8394:366::-;8536:3;8557:67;8621:2;8616:3;8557:67;:::i;:::-;8550:74;;8633:93;8722:3;8633:93;:::i;:::-;8751:2;8746:3;8742:12;8735:19;;8394:366;;;:::o;8766:419::-;8932:4;8970:2;8959:9;8955:18;8947:26;;9019:9;9013:4;9009:20;9005:1;8994:9;8990:17;8983:47;9047:131;9173:4;9047:131;:::i;:::-;9039:139;;8766:419;;;:::o;9191:442::-;9340:4;9378:2;9367:9;9363:18;9355:26;;9391:71;9459:1;9448:9;9444:17;9435:6;9391:71;:::i;:::-;9472:72;9540:2;9529:9;9525:18;9516:6;9472:72;:::i;:::-;9554;9622:2;9611:9;9607:18;9598:6;9554:72;:::i;:::-;9191:442;;;;;;:::o;9639:191::-;9679:3;9698:20;9716:1;9698:20;:::i;:::-;9693:25;;9732:20;9750:1;9732:20;:::i;:::-;9727:25;;9775:1;9772;9768:9;9761:16;;9796:3;9793:1;9790:10;9787:36;;;9803:18;;:::i;:::-;9787:36;9639:191;;;;:::o;9836:225::-;9976:34;9972:1;9964:6;9960:14;9953:58;10045:8;10040:2;10032:6;10028:15;10021:33;9836:225;:::o;10067:366::-;10209:3;10230:67;10294:2;10289:3;10230:67;:::i;:::-;10223:74;;10306:93;10395:3;10306:93;:::i;:::-;10424:2;10419:3;10415:12;10408:19;;10067:366;;;:::o;10439:419::-;10605:4;10643:2;10632:9;10628:18;10620:26;;10692:9;10686:4;10682:20;10678:1;10667:9;10663:17;10656:47;10720:131;10846:4;10720:131;:::i;:::-;10712:139;;10439:419;;;:::o;10864:410::-;10904:7;10927:20;10945:1;10927:20;:::i;:::-;10922:25;;10961:20;10979:1;10961:20;:::i;:::-;10956:25;;11016:1;11013;11009:9;11038:30;11056:11;11038:30;:::i;:::-;11027:41;;11217:1;11208:7;11204:15;11201:1;11198:22;11178:1;11171:9;11151:83;11128:139;;11247:18;;:::i;:::-;11128:139;10912:362;10864:410;;;;:::o;11280:180::-;11328:77;11325:1;11318:88;11425:4;11422:1;11415:15;11449:4;11446:1;11439:15;11466:185;11506:1;11523:20;11541:1;11523:20;:::i;:::-;11518:25;;11557:20;11575:1;11557:20;:::i;:::-;11552:25;;11596:1;11586:35;;11601:18;;:::i;:::-;11586:35;11643:1;11640;11636:9;11631:14;;11466:185;;;;:::o;11657:182::-;11797:34;11793:1;11785:6;11781:14;11774:58;11657:182;:::o;11845:366::-;11987:3;12008:67;12072:2;12067:3;12008:67;:::i;:::-;12001:74;;12084:93;12173:3;12084:93;:::i;:::-;12202:2;12197:3;12193:12;12186:19;;11845:366;;;:::o;12217:419::-;12383:4;12421:2;12410:9;12406:18;12398:26;;12470:9;12464:4;12460:20;12456:1;12445:9;12441:17;12434:47;12498:131;12624:4;12498:131;:::i;:::-;12490:139;;12217:419;;;:::o;12642:148::-;12744:11;12781:3;12766:18;;12642:148;;;;:::o;12796:173::-;12936:25;12932:1;12924:6;12920:14;12913:49;12796:173;:::o;12975:402::-;13135:3;13156:85;13238:2;13233:3;13156:85;:::i;:::-;13149:92;;13250:93;13339:3;13250:93;:::i;:::-;13368:2;13363:3;13359:12;13352:19;;12975:402;;;:::o;13383:99::-;13435:6;13469:5;13463:12;13453:22;;13383:99;;;:::o;13488:139::-;13577:6;13572:3;13567;13561:23;13618:1;13609:6;13604:3;13600:16;13593:27;13488:139;;;:::o;13633:390::-;13739:3;13767:39;13800:5;13767:39;:::i;:::-;13822:89;13904:6;13899:3;13822:89;:::i;:::-;13815:96;;13920:65;13978:6;13973:3;13966:4;13959:5;13955:16;13920:65;:::i;:::-;14010:6;14005:3;14001:16;13994:23;;13743:280;13633:390;;;;:::o;14029:167::-;14169:19;14165:1;14157:6;14153:14;14146:43;14029:167;:::o;14202:402::-;14362:3;14383:85;14465:2;14460:3;14383:85;:::i;:::-;14376:92;;14477:93;14566:3;14477:93;:::i;:::-;14595:2;14590:3;14586:12;14579:19;;14202:402;;;:::o;14610:967::-;14992:3;15014:148;15158:3;15014:148;:::i;:::-;15007:155;;15179:95;15270:3;15261:6;15179:95;:::i;:::-;15172:102;;15291:148;15435:3;15291:148;:::i;:::-;15284:155;;15456:95;15547:3;15538:6;15456:95;:::i;:::-;15449:102;;15568:3;15561:10;;14610:967;;;;;:::o;15583:102::-;15624:6;15675:2;15671:7;15666:2;15659:5;15655:14;15651:28;15641:38;;15583:102;;;:::o;15691:377::-;15779:3;15807:39;15840:5;15807:39;:::i;:::-;15862:71;15926:6;15921:3;15862:71;:::i;:::-;15855:78;;15942:65;16000:6;15995:3;15988:4;15981:5;15977:16;15942:65;:::i;:::-;16032:29;16054:6;16032:29;:::i;:::-;16027:3;16023:39;16016:46;;15783:285;15691:377;;;;:::o;16074:313::-;16187:4;16225:2;16214:9;16210:18;16202:26;;16274:9;16268:4;16264:20;16260:1;16249:9;16245:17;16238:47;16302:78;16375:4;16366:6;16302:78;:::i;:::-;16294:86;;16074:313;;;;:::o;16393:180::-;16441:77;16438:1;16431:88;16538:4;16535:1;16528:15;16562:4;16559:1;16552:15;16579:180;16627:77;16624:1;16617:88;16724:4;16721:1;16714:15;16748:4;16745:1;16738:15;16765:171;16804:3;16827:24;16845:5;16827:24;:::i;:::-;16818:33;;16873:4;16866:5;16863:15;16860:41;;16881:18;;:::i;:::-;16860:41;16928:1;16921:5;16917:13;16910:20;;16765:171;;;:::o;16942:182::-;17082:34;17078:1;17070:6;17066:14;17059:58;16942:182;:::o;17130:366::-;17272:3;17293:67;17357:2;17352:3;17293:67;:::i;:::-;17286:74;;17369:93;17458:3;17369:93;:::i;:::-;17487:2;17482:3;17478:12;17471:19;;17130:366;;;:::o;17502:419::-;17668:4;17706:2;17695:9;17691:18;17683:26;;17755:9;17749:4;17745:20;17741:1;17730:9;17726:17;17719:47;17783:131;17909:4;17783:131;:::i;:::-;17775:139;;17502:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1465600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "351",
								"MINTER_ROLE()": "391",
								"claimRewards()": "infinite",
								"deposit(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "3210",
								"owner()": "2559",
								"renounceOwnership()": "30476",
								"renounceRole(bytes32,address)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"stakeXToken()": "infinite",
								"stakers(address)": "infinite",
								"supportsInterface(bytes4)": "741",
								"totalStaked()": "2448",
								"transferOwnership(address)": "30838",
								"withdraw(uint256)": "infinite"
							},
							"internal": {
								"_calculateAndClaimRewards()": "infinite",
								"_mintRewards(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 324,
									"end": 3562,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 1070,
									"end": 1261,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "9"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 2,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1136,
									"end": 1148,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1126,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 1115,
									"end": 1126,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 1115,
									"end": 1149,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1204,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 2198,
									"end": 2202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 1191,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1173,
									"end": 1191,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1193,
									"end": 1203,
									"name": "CALLER",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1172,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1162,
									"end": 1172,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1162,
									"end": 1172,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1204,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1162,
									"end": 1204,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1204,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1162,
									"end": 1204,
									"name": "tag",
									"source": 11,
									"value": "12"
								},
								{
									"begin": 1162,
									"end": 1204,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1215,
									"end": 1253,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 416,
									"end": 440,
									"name": "PUSH",
									"source": 11,
									"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
								},
								{
									"begin": 1247,
									"end": 1251,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1215,
									"end": 1225,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "13"
								},
								{
									"begin": 1215,
									"end": 1225,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1215,
									"end": 1225,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 1215,
									"end": 1253,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 1215,
									"end": 1253,
									"name": "SHR",
									"source": 11
								},
								{
									"begin": 1215,
									"end": 1253,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 1215,
									"end": 1253,
									"name": "tag",
									"source": 11,
									"value": "14"
								},
								{
									"begin": 1215,
									"end": 1253,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1070,
									"end": 1261,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 655,
									"end": 751,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 655,
									"end": 751,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 708,
									"end": 715,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 734,
									"end": 744,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 727,
									"end": 744,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 727,
									"end": 744,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 655,
									"end": 751,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 655,
									"end": 751,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "tag",
									"source": 2,
									"value": "10"
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 2499,
									"end": 2515,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "DIV",
									"source": 2
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2518,
									"end": 2524,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2499,
									"end": 2524,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2543,
									"end": 2551,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2540,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 2,
									"value": "100"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "EXP",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SLOAD",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "NOT",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "MUL",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "OR",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "SSTORE",
									"source": 2
								},
								{
									"begin": 2534,
									"end": 2551,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2597,
									"end": 2605,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2587,
									"end": 2595,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "AND",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 2566,
									"end": 2606,
									"name": "LOG3",
									"source": 2
								},
								{
									"begin": 2489,
									"end": 2613,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2613,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 2426,
									"end": 2613,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "tag",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 7026,
									"end": 7030,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7032,
									"end": 7039,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7015,
									"end": 7025,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7040,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "tag",
									"source": 0,
									"value": "19"
								},
								{
									"begin": 7015,
									"end": 7040,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6937,
									"end": 7047,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 6937,
									"end": 7047,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "tag",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 7678,
									"end": 7682,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7684,
									"end": 7691,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7670,
									"end": 7677,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "tag",
									"source": 0,
									"value": "22"
								},
								{
									"begin": 7670,
									"end": 7692,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 7740,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 7708,
									"end": 7714,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7715,
									"end": 7719,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7720,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7728,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7729,
									"end": 7736,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7737,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 7708,
									"end": 7744,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7790,
									"end": 7800,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "tag",
									"source": 0,
									"value": "25"
								},
								{
									"begin": 7790,
									"end": 7802,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7781,
									"end": 7788,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 7775,
									"end": 7779,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 7763,
									"end": 7803,
									"name": "LOG4",
									"source": 0
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "tag",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 7665,
									"end": 7814,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 7587,
									"end": 7820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "tag",
									"source": 0,
									"value": "23"
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 3107,
									"end": 3111,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3136,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3137,
									"end": 3141,
									"name": "DUP5",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3142,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3150,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3150,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3151,
									"end": 3158,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 3130,
									"end": 3159,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3123,
									"end": 3159,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3123,
									"end": 3159,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP3",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3021,
									"end": 3166,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "30"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "31"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "45"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 915,
									"end": 921,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 966,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 952,
									"end": 961,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 943,
									"end": 950,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 939,
									"end": 962,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 935,
									"end": 967,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "28"
								},
								{
									"begin": 970,
									"end": 1049,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "tag",
									"source": 12,
									"value": "48"
								},
								{
									"begin": 970,
									"end": 1049,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "tag",
									"source": 12,
									"value": "47"
								},
								{
									"begin": 932,
									"end": 1051,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1090,
									"end": 1091,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1171,
									"end": 1178,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 1162,
									"end": 1168,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1151,
									"end": 1160,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1169,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "33"
								},
								{
									"begin": 1115,
									"end": 1179,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "tag",
									"source": 12,
									"value": "49"
								},
								{
									"begin": 1115,
									"end": 1179,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1105,
									"end": 1179,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1061,
									"end": 1189,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 1196,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "tag",
									"source": 11,
									"value": "15"
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 324,
									"end": 3562,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200c01c0ed9c5d5c441e0f4e2458386c589e0778cd8bd32ca02a92b3907377895864736f6c634300081c0033",
									".code": [
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "817B1CD2"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "A217FDDF"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "B6B55F25"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "D5391393"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "D547741F"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "tag",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "817B1CD2"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "9168AE72"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "91D14854"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "36568ABE"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "372500AB"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "6AE674E2"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "1FFC9A7"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "248A9CA3"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "2E1A7D4D"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "2F2FF15D"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 324,
											"end": 3562,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "25"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "23"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "31"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "30"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "29"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 2958,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2958,
											"end": 3559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "tag",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2592,
											"end": 2950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "tag",
											"source": 11,
											"value": "46"
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "tag",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 449,
											"end": 474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "tag",
											"source": 11,
											"value": "48"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 449,
											"end": 474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "tag",
											"source": 11,
											"value": "50"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 481,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 481,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 481,
											"end": 507,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 636,
											"end": 677,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 636,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 636,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "tag",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 636,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "28"
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 1269,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1269,
											"end": 1893,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 378,
											"end": 440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 378,
											"end": 440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "81"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "64"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "85"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2817,
											"end": 2821,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2855,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "7965DB0B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2851,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2887,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2915,
											"end": 2926,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2914,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 2891,
											"end": 2927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 2891,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "tag",
											"source": 0,
											"value": "88"
										},
										{
											"begin": 2840,
											"end": 2927,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2833,
											"end": 2927,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2732,
											"end": 2934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4578,
											"end": 4585,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4610,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4611,
											"end": 4615,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4604,
											"end": 4616,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4604,
											"end": 4626,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4597,
											"end": 4626,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4504,
											"end": 4633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "tag",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3026,
											"end": 3027,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3016,
											"end": 3022,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3016,
											"end": 3027,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3012,
											"end": 3089,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3012,
											"end": 3089,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3070,
											"end": 3076,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "PUSH",
											"source": 11,
											"value": "77B8DDE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3051,
											"end": 3077,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "tag",
											"source": 11,
											"value": "94"
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3051,
											"end": 3077,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3012,
											"end": 3089,
											"name": "tag",
											"source": 11,
											"value": "93"
										},
										{
											"begin": 3012,
											"end": 3089,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3128,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3101,
											"end": 3126,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 3101,
											"end": 3128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3101,
											"end": 3128,
											"name": "tag",
											"source": 11,
											"value": "95"
										},
										{
											"begin": 3101,
											"end": 3128,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3139,
											"end": 3160,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3170,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3171,
											"end": 3181,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3163,
											"end": 3182,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 3139,
											"end": 3182,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3139,
											"end": 3182,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3216,
											"end": 3222,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3205,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3213,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3199,
											"end": 3213,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3213,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3199,
											"end": 3222,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 3195,
											"end": 3293,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3195,
											"end": 3293,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3195,
											"end": 3293,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3272,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3280,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3266,
											"end": 3280,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3266,
											"end": 3280,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "9266535100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3246,
											"end": 3281,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "tag",
											"source": 11,
											"value": "98"
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3246,
											"end": 3281,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3195,
											"end": 3293,
											"name": "tag",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 3195,
											"end": 3293,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3323,
											"end": 3329,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3311,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3319,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3319,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3319,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3305,
											"end": 3329,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3305,
											"end": 3329,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3355,
											"end": 3361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3351,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 3340,
											"end": 3351,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3340,
											"end": 3361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "tag",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 3340,
											"end": 3361,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3386,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3389,
											"end": 3400,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3409,
											"name": "PUSH",
											"source": 11,
											"value": "A9059CBB"
										},
										{
											"begin": 3410,
											"end": 3420,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3422,
											"end": 3428,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 3389,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "tag",
											"source": 11,
											"value": "105"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 3389,
											"end": 3429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "tag",
											"source": 11,
											"value": "106"
										},
										{
											"begin": 3389,
											"end": 3429,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3429,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3374,
											"end": 3429,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3445,
											"end": 3452,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3440,
											"end": 3505,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3440,
											"end": 3505,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "6F3F6CD000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3476,
											"end": 3493,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 3440,
											"end": 3505,
											"name": "tag",
											"source": 11,
											"value": "108"
										},
										{
											"begin": 3440,
											"end": 3505,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3532,
											"end": 3542,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "PUSH",
											"source": 11,
											"value": "7084F5476618D8E60B11EF0D7D3F06914655ADB8793E28FF7F018D4C76D505D5"
										},
										{
											"begin": 3544,
											"end": 3550,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 3522,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 3522,
											"end": 3551,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 3001,
											"end": 3559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 3001,
											"end": 3559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2958,
											"end": 3559,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5025,
											"end": 5029,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5024,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5012,
											"end": 5030,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "tag",
											"source": 0,
											"value": "110"
										},
										{
											"begin": 5012,
											"end": 5030,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "112"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5053,
											"end": 5057,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5059,
											"end": 5066,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5052,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 5042,
											"end": 5067,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 5042,
											"end": 5067,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 4929,
											"end": 5074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6144,
											"end": 6154,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 6144,
											"end": 6156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 6144,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6140,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 6133,
											"end": 6156,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "122"
										},
										{
											"begin": 6125,
											"end": 6208,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "121"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 6125,
											"end": 6208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6231,
											"end": 6235,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6237,
											"end": 6244,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6230,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 6219,
											"end": 6245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 6219,
											"end": 6245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6038,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "tag",
											"source": 11,
											"value": "47"
										},
										{
											"begin": 2592,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2636,
											"end": 2657,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2667,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2668,
											"end": 2678,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2660,
											"end": 2679,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2636,
											"end": 2679,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2636,
											"end": 2679,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2705,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2725,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2708,
											"end": 2725,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2708,
											"end": 2725,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2725,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2690,
											"end": 2725,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2742,
											"end": 2749,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2742,
											"end": 2754,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "83A8CDB600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2778,
											"end": 2798,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "tag",
											"source": 11,
											"value": "126"
										},
										{
											"begin": 2738,
											"end": 2810,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2842,
											"end": 2843,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2822,
											"end": 2828,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2839,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2822,
											"end": 2839,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2822,
											"end": 2843,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2869,
											"end": 2879,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2856,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2856,
											"end": 2889,
											"name": "tag",
											"source": 11,
											"value": "127"
										},
										{
											"begin": 2856,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2932,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "PUSH",
											"source": 11,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 2934,
											"end": 2941,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2907,
											"end": 2942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "tag",
											"source": 11,
											"value": "129"
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2907,
											"end": 2942,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2625,
											"end": 2950,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2592,
											"end": 2950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "tag",
											"source": 11,
											"value": "49"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 449,
											"end": 474,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 449,
											"end": 474,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1824,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "131"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1915,
											"end": 1916,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1888,
											"end": 1906,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1888,
											"end": 1918,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "134"
										},
										{
											"begin": 1888,
											"end": 1918,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1824,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 481,
											"end": 507,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 481,
											"end": 507,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 481,
											"end": 507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1201,
											"end": 1286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 636,
											"end": 677,
											"name": "tag",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 636,
											"end": 677,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 636,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3107,
											"end": 3111,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3136,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3137,
											"end": 3141,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3142,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3150,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3151,
											"end": 3158,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3130,
											"end": 3159,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3123,
											"end": 3159,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3021,
											"end": 3166,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2198,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2153,
											"end": 2202,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1336,
											"end": 1337,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1326,
											"end": 1332,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1326,
											"end": 1337,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1380,
											"end": 1386,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "PUSH",
											"source": 11,
											"value": "77B8DDE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1361,
											"end": 1387,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1361,
											"end": 1387,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 1322,
											"end": 1399,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1411,
											"end": 1423,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1437,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1450,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1450,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1450,
											"name": "PUSH",
											"source": 11,
											"value": "23B872DD"
										},
										{
											"begin": 1465,
											"end": 1475,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1498,
											"end": 1502,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1518,
											"end": 1524,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 1426,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "1F"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "107"
										},
										{
											"begin": 1426,
											"end": 1535,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 1426,
											"end": 1535,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1411,
											"end": 1535,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1411,
											"end": 1535,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1553,
											"end": 1560,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1548,
											"end": 1622,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1548,
											"end": 1622,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH",
											"source": 11,
											"value": "77B8DDE300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1584,
											"end": 1610,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "tag",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1584,
											"end": 1610,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1548,
											"end": 1622,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 1548,
											"end": 1622,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1634,
											"end": 1659,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 1634,
											"end": 1661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 1634,
											"end": 1661,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1695,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1705,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1706,
											"end": 1716,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1698,
											"end": 1717,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1717,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1674,
											"end": 1717,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1746,
											"end": 1752,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1734,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1742,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1742,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1742,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1728,
											"end": 1752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "tag",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1728,
											"end": 1752,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1789,
											"end": 1804,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1769,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1786,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1763,
											"end": 1786,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1804,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1804,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1804,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1763,
											"end": 1804,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1832,
											"end": 1838,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1817,
											"end": 1828,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 1817,
											"end": 1838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "tag",
											"source": 11,
											"value": "151"
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 1817,
											"end": 1838,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "2DA466A7B24304F47E87FA2E1E5A81B9831CE54FEC19055CE277CA2F39BA42C4"
										},
										{
											"begin": 1878,
											"end": 1884,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 1856,
											"end": 1885,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "tag",
											"source": 11,
											"value": "152"
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1856,
											"end": 1885,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 1311,
											"end": 1893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1311,
											"end": 1893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1269,
											"end": 1893,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"name": "tag",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 11,
											"value": "9F2DF0FED2C77648DE5860A4CC508CD0818C85B8B8A1AB4CEEEF8D981C8956A6"
										},
										{
											"begin": 378,
											"end": 440,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 378,
											"end": 440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5451,
											"end": 5455,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5450,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 5438,
											"end": 5456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5438,
											"end": 5456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2642,
											"end": 2646,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 2631,
											"end": 2647,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 2631,
											"end": 2647,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5480,
											"end": 5484,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5486,
											"end": 5493,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 5468,
											"end": 5494,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "157"
										},
										{
											"begin": 5468,
											"end": 5494,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5354,
											"end": 5501,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1094,
											"end": 1107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 2,
											"value": "159"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2182,
											"end": 2183,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2170,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2162,
											"end": 2184,
											"modifierDepth": 1,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2162,
											"end": 2184,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "163"
										},
										{
											"begin": 2154,
											"end": 2227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "162"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "161"
										},
										{
											"begin": 2154,
											"end": 2227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2256,
											"end": 2264,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2255,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2237,
											"end": 2265,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "164"
										},
										{
											"begin": 2237,
											"end": 2265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2074,
											"end": 2272,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 829,
											"end": 984,
											"name": "tag",
											"source": 6,
											"value": "90"
										},
										{
											"begin": 829,
											"end": 984,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 914,
											"end": 918,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 952,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "1FFC9A700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 948,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 937,
											"end": 977,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 937,
											"end": 977,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 930,
											"end": 977,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 829,
											"end": 984,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2045,
											"end": 2584,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 2045,
											"end": 2584,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2102,
											"end": 2123,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2133,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2134,
											"end": 2144,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2126,
											"end": 2145,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 2102,
											"end": 2145,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2102,
											"end": 2145,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2168,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2176,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2180,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2523,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2158,
											"end": 2523,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2216,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2237,
											"end": 2243,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2237,
											"end": 2260,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2234,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2219,
											"end": 2260,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2260,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2260,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 2219,
											"end": 2260,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2219,
											"end": 2260,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 2219,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2260,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2197,
											"end": 2260,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2289,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2364,
											"name": "PUSH",
											"source": 11,
											"value": "1E13380"
										},
										{
											"begin": 2324,
											"end": 2335,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2317,
											"end": 2320,
											"name": "PUSH",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 2312,
											"end": 2313,
											"name": "PUSH",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 2295,
											"end": 2301,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2309,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2295,
											"end": 2313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "tag",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 2295,
											"end": 2313,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 2294,
											"end": 2320,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2320,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2294,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2294,
											"end": 2320,
											"name": "tag",
											"source": 11,
											"value": "171"
										},
										{
											"begin": 2294,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "170"
										},
										{
											"begin": 2293,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "tag",
											"source": 11,
											"value": "173"
										},
										{
											"begin": 2293,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2292,
											"end": 2364,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2364,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "172"
										},
										{
											"begin": 2292,
											"end": 2364,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2292,
											"end": 2364,
											"name": "tag",
											"source": 11,
											"value": "174"
										},
										{
											"begin": 2292,
											"end": 2364,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2364,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2275,
											"end": 2364,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2400,
											"end": 2406,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2385,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2396,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "150"
										},
										{
											"begin": 2379,
											"end": 2406,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "tag",
											"source": 11,
											"value": "175"
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2379,
											"end": 2406,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2423,
											"end": 2455,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2436,
											"end": 2446,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2448,
											"end": 2454,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2423,
											"end": 2435,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 2423,
											"end": 2455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2423,
											"end": 2455,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 2423,
											"end": 2455,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2492,
											"end": 2502,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "PUSH",
											"source": 11,
											"value": "FC30CDDEA38E2BF4D6EA7D3F9ED3B6AD7F176419F4963BD81318067A4AEE73FE"
										},
										{
											"begin": 2504,
											"end": 2510,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "57"
										},
										{
											"begin": 2477,
											"end": 2511,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2477,
											"end": 2511,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2182,
											"end": 2523,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2158,
											"end": 2523,
											"name": "tag",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 2158,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2561,
											"end": 2576,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2541,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 2535,
											"end": 2558,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2576,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2576,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2576,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2535,
											"end": 2576,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2091,
											"end": 2584,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2045,
											"end": 2584,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3537,
											"end": 3541,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3543,
											"end": 3553,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3543,
											"end": 3555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 3543,
											"end": 3555,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3526,
											"end": 3556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 3526,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3460,
											"end": 3563,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 7678,
											"end": 7682,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7684,
											"end": 7691,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 7670,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 7670,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7740,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7708,
											"end": 7714,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7715,
											"end": 7719,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7720,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7728,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7736,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7737,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7708,
											"end": 7744,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7790,
											"end": 7800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 7790,
											"end": 7802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "tag",
											"source": 0,
											"value": "185"
										},
										{
											"begin": 7790,
											"end": 7802,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7781,
											"end": 7788,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7775,
											"end": 7779,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7763,
											"end": 7803,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7665,
											"end": 7814,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7587,
											"end": 7820,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 655,
											"end": 751,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 655,
											"end": 751,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 734,
											"end": 744,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 727,
											"end": 744,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 727,
											"end": 744,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 655,
											"end": 751,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 655,
											"end": 751,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8082,
											"end": 8086,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8088,
											"end": 8095,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 8074,
											"end": 8096,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 8074,
											"end": 8096,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8144,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8118,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8119,
											"end": 8123,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8124,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8132,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8133,
											"end": 8140,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8141,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8112,
											"end": 8149,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8195,
											"end": 8205,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 8195,
											"end": 8207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "tag",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 8195,
											"end": 8207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8186,
											"end": 8193,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8180,
											"end": 8184,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8168,
											"end": 8208,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "tag",
											"source": 0,
											"value": "189"
										},
										{
											"begin": 8070,
											"end": 8219,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7991,
											"end": 8225,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 2037,
											"name": "tag",
											"source": 11,
											"value": "128"
										},
										{
											"begin": 1901,
											"end": 2037,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1993,
											"end": 2004,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2011,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 2011,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2011,
											"name": "PUSH",
											"source": 11,
											"value": "40C10F19"
										},
										{
											"begin": 2012,
											"end": 2014,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2016,
											"end": 2028,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 1977,
											"end": 2029,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "tag",
											"source": 11,
											"value": "192"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP8",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "tag",
											"source": 11,
											"value": "193"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "GAS",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "CALL",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "RETURNDATACOPY",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "RETURNDATASIZE",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "tag",
											"source": 11,
											"value": "195"
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1977,
											"end": 2029,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 2037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 2037,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1901,
											"end": 2037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 2,
											"value": "132"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 1433,
											"end": 1445,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 2,
											"value": "197"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 1422,
											"end": 1429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 2,
											"value": "198"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "201"
										},
										{
											"begin": 1414,
											"end": 1482,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "200"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 2,
											"value": "199"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1359,
											"end": 1489,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2515,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2518,
											"end": 2524,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2499,
											"end": 2524,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2543,
											"end": 2551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2540,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2534,
											"end": 2551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2597,
											"end": 2605,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2587,
											"end": 2595,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2566,
											"end": 2606,
											"name": "LOG3",
											"source": 2
										},
										{
											"begin": 2489,
											"end": 2613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2613,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2426,
											"end": 2613,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "tag",
											"source": 0,
											"value": "181"
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3940,
											"end": 3944,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3946,
											"end": 3953,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 3932,
											"end": 3954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3932,
											"end": 3954,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4135,
											"end": 4142,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4134,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 4115,
											"end": 4143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "tag",
											"source": 0,
											"value": "206"
										},
										{
											"begin": 4115,
											"end": 4143,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4242,
											"end": 4246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4234,
											"end": 4247,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 4249,
											"end": 4251,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4214,
											"end": 4233,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 4214,
											"end": 4252,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 4214,
											"end": 4252,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 4022,
											"end": 4274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4022,
											"end": 4274,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 3970,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3970,
											"end": 4306,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3927,
											"end": 4317,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3844,
											"end": 4323,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2465,
											"end": 2478,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2525,
											"end": 2529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2509,
											"end": 2531,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 343,
											"end": 345,
											"name": "PUSH",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "PUSH",
											"source": 5,
											"value": "FF"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2508,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 2497,
											"end": 2549,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 2497,
											"end": 2549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2490,
											"end": 2549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2407,
											"end": 2556,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1906,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1918,
											"end": 1937,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 1964,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1954,
											"end": 1960,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1951,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 1950,
											"end": 1960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 1950,
											"end": 1960,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1950,
											"end": 1964,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 1950,
											"end": 1964,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "221"
										},
										{
											"begin": 1940,
											"end": 1965,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "MUL",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATASIZE",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1940,
											"end": 1965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1918,
											"end": 1965,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "3000000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1975,
											"end": 1981,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1982,
											"end": 1983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 1975,
											"end": 1984,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 5,
											"value": "224"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 1990,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "7800000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2000,
											"end": 2006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2007,
											"end": 2008,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2000,
											"end": 2009,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "tag",
											"source": 5,
											"value": "226"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2009,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 2000,
											"end": 2015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2039,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2046,
											"end": 2052,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2043,
											"name": "PUSH",
											"source": 5,
											"value": "2"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 2042,
											"end": 2052,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 2042,
											"end": 2052,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 2042,
											"end": 2056,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 2042,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2030,
											"end": 2056,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2062,
											"end": 2063,
											"name": "PUSH",
											"source": 5,
											"value": "1"
										},
										{
											"begin": 2058,
											"end": 2059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2104,
											"name": "PUSH",
											"source": 5,
											"value": "3031323334353637383961626364656600000000000000000000000000000000"
										},
										{
											"begin": 2113,
											"end": 2116,
											"name": "PUSH",
											"source": 5,
											"value": "F"
										},
										{
											"begin": 2105,
											"end": 2110,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 2105,
											"end": 2116,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "10"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2096,
											"end": 2117,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "tag",
											"source": 5,
											"value": "233"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "F8"
										},
										{
											"begin": 2096,
											"end": 2117,
											"name": "SHL",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2090,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2091,
											"end": 2092,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 2084,
											"end": 2093,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "tag",
											"source": 5,
											"value": "235"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "BYTE",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "MSTORE8",
											"source": 5
										},
										{
											"begin": 2084,
											"end": 2117,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2141,
											"end": 2142,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SHR",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 2131,
											"end": 2142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 2065,
											"end": 2068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "tag",
											"source": 5,
											"value": "237"
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2065,
											"end": 2068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2025,
											"end": 2153,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2179,
											"end": 2180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2170,
											"end": 2175,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2170,
											"end": 2180,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "241"
										},
										{
											"begin": 2162,
											"end": 2217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "tag",
											"source": 5,
											"value": "239"
										},
										{
											"begin": 2162,
											"end": 2217,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2247,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2227,
											"end": 2248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2255,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1818,
											"end": 2255,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "245"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 12,
											"value": "297"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 12,
											"value": "298"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "246"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 12,
											"value": "300"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 12,
											"value": "25"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 12,
											"value": "303"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "247"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 12,
											"value": "304"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 12,
											"value": "307"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 12,
											"value": "28"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "249"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 12,
											"value": "309"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "tag",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1555,
											"end": 1562,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1584,
											"end": 1589,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1573,
											"end": 1589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1518,
											"end": 1595,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "tag",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1692,
											"end": 1697,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 1674,
											"end": 1698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 1674,
											"end": 1698,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1667,
											"end": 1672,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1664,
											"end": 1699,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1711,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1703,
											"end": 1715,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "tag",
											"source": 12,
											"value": "313"
										},
										{
											"begin": 1654,
											"end": 1717,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1601,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "tag",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1775,
											"end": 1780,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1819,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1800,
											"end": 1820,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1791,
											"end": 1820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "251"
										},
										{
											"begin": 1829,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "tag",
											"source": 12,
											"value": "315"
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1729,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "tag",
											"source": 12,
											"value": "31"
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1933,
											"end": 1939,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1982,
											"end": 1984,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 1970,
											"end": 1979,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1961,
											"end": 1968,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 1980,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 1953,
											"end": 1985,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 1988,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "tag",
											"source": 12,
											"value": "318"
										},
										{
											"begin": 1988,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "tag",
											"source": 12,
											"value": "317"
										},
										{
											"begin": 1950,
											"end": 2069,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2108,
											"end": 2109,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 2178,
											"end": 2185,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2169,
											"end": 2175,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2158,
											"end": 2167,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 2154,
											"end": 2176,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 2133,
											"end": 2186,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "tag",
											"source": 12,
											"value": "319"
										},
										{
											"begin": 2133,
											"end": 2186,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2123,
											"end": 2186,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2079,
											"end": 2196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1874,
											"end": 2203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "tag",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2314,
											"end": 2319,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "250"
										},
										{
											"begin": 2296,
											"end": 2320,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "tag",
											"source": 12,
											"value": "321"
										},
										{
											"begin": 2296,
											"end": 2320,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2291,
											"end": 2294,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2284,
											"end": 2321,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2209,
											"end": 2327,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2426,
											"end": 2430,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2464,
											"end": 2466,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2462,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2449,
											"end": 2467,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2441,
											"end": 2467,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2545,
											"end": 2546,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2534,
											"end": 2543,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2530,
											"end": 2547,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2521,
											"end": 2527,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "253"
										},
										{
											"begin": 2477,
											"end": 2548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "tag",
											"source": 12,
											"value": "323"
										},
										{
											"begin": 2477,
											"end": 2548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2333,
											"end": 2555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "tag",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2632,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2616,
											"end": 2632,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2561,
											"end": 2638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "tag",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2735,
											"end": 2740,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 2717,
											"end": 2741,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "tag",
											"source": 12,
											"value": "326"
										},
										{
											"begin": 2717,
											"end": 2741,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2710,
											"end": 2715,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2707,
											"end": 2742,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2756,
											"end": 2757,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2753,
											"end": 2754,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "tag",
											"source": 12,
											"value": "327"
										},
										{
											"begin": 2697,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2766,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2644,
											"end": 2766,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "tag",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2818,
											"end": 2823,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2856,
											"end": 2862,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2843,
											"end": 2863,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2834,
											"end": 2863,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2899,
											"end": 2904,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "255"
										},
										{
											"begin": 2872,
											"end": 2905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "tag",
											"source": 12,
											"value": "329"
										},
										{
											"begin": 2872,
											"end": 2905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2772,
											"end": 2911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "tag",
											"source": 12,
											"value": "37"
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3027,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3013,
											"end": 3022,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3004,
											"end": 3011,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3000,
											"end": 3023,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2996,
											"end": 3028,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3031,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 3031,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "tag",
											"source": 12,
											"value": "331"
										},
										{
											"begin": 2993,
											"end": 3112,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3151,
											"end": 3152,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3221,
											"end": 3228,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 3212,
											"end": 3218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3201,
											"end": 3210,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3197,
											"end": 3219,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "256"
										},
										{
											"begin": 3176,
											"end": 3229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "tag",
											"source": 12,
											"value": "333"
										},
										{
											"begin": 3176,
											"end": 3229,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3166,
											"end": 3229,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3122,
											"end": 3239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2917,
											"end": 3246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "tag",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3289,
											"end": 3296,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3371,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3322,
											"end": 3327,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3318,
											"end": 3372,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3307,
											"end": 3372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3252,
											"end": 3378,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "tag",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3428,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3468,
											"end": 3473,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 3450,
											"end": 3474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 3450,
											"end": 3474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3439,
											"end": 3474,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3480,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3384,
											"end": 3480,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "tag",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 3559,
											"end": 3583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3552,
											"end": 3557,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3549,
											"end": 3584,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3598,
											"end": 3599,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3595,
											"end": 3596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3588,
											"end": 3600,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 3539,
											"end": 3602,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3608,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3486,
											"end": 3608,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "tag",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3665,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3698,
											"end": 3704,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3685,
											"end": 3705,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3676,
											"end": 3705,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3741,
											"end": 3746,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "259"
										},
										{
											"begin": 3714,
											"end": 3747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 3714,
											"end": 3747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3614,
											"end": 3753,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3614,
											"end": 3753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "tag",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3827,
											"end": 3833,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3835,
											"end": 3841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3884,
											"end": 3886,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3872,
											"end": 3881,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 3863,
											"end": 3870,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3859,
											"end": 3882,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 3855,
											"end": 3887,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 3890,
											"end": 3969,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3890,
											"end": 3969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 3852,
											"end": 3971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4010,
											"end": 4011,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 4080,
											"end": 4087,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4071,
											"end": 4077,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4060,
											"end": 4069,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4056,
											"end": 4078,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "252"
										},
										{
											"begin": 4035,
											"end": 4088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 4035,
											"end": 4088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4025,
											"end": 4088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3981,
											"end": 4098,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4137,
											"end": 4139,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 4208,
											"end": 4215,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4199,
											"end": 4205,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4188,
											"end": 4197,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 4184,
											"end": 4206,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 4163,
											"end": 4216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 4163,
											"end": 4216,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4153,
											"end": 4216,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4108,
											"end": 4226,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 4233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3759,
											"end": 4233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "tag",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4267,
											"end": 4270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4288,
											"end": 4293,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4281,
											"end": 4293,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4281,
											"end": 4293,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4299,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4239,
											"end": 4299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "tag",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4355,
											"end": 4364,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4433,
											"end": 4438,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 4415,
											"end": 4439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4415,
											"end": 4439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "261"
										},
										{
											"begin": 4406,
											"end": 4440,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4406,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "257"
										},
										{
											"begin": 4388,
											"end": 4441,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 4388,
											"end": 4441,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4441,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4375,
											"end": 4441,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4447,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4305,
											"end": 4447,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "tag",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4503,
											"end": 4512,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4567,
											"end": 4572,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "262"
										},
										{
											"begin": 4536,
											"end": 4573,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4536,
											"end": 4573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4523,
											"end": 4573,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4523,
											"end": 4573,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4579,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4453,
											"end": 4579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4585,
											"end": 4725,
											"name": "tag",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 4585,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4649,
											"end": 4658,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 4713,
											"end": 4718,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 4719,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "263"
										},
										{
											"begin": 4682,
											"end": 4719,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4682,
											"end": 4719,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 4682,
											"end": 4719,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4719,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4669,
											"end": 4719,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4585,
											"end": 4725,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4585,
											"end": 4725,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4585,
											"end": 4725,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4585,
											"end": 4725,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "tag",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 4877,
											"end": 4882,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "264"
										},
										{
											"begin": 4832,
											"end": 4883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4832,
											"end": 4883,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 4832,
											"end": 4883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4827,
											"end": 4830,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4820,
											"end": 4884,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4890,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4731,
											"end": 4890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 5146,
											"name": "tag",
											"source": 12,
											"value": "51"
										},
										{
											"begin": 4896,
											"end": 5146,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5003,
											"end": 5007,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5041,
											"end": 5043,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5026,
											"end": 5044,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5018,
											"end": 5044,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5136,
											"end": 5137,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5125,
											"end": 5134,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5121,
											"end": 5138,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5112,
											"end": 5118,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5139,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "265"
										},
										{
											"begin": 5054,
											"end": 5139,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5054,
											"end": 5139,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 5054,
											"end": 5139,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 5146,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 5146,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 5146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 5146,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4896,
											"end": 5146,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5270,
											"name": "tag",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5152,
											"end": 5270,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5239,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 5257,
											"end": 5262,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5239,
											"end": 5263,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 5239,
											"end": 5263,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5239,
											"end": 5263,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 5239,
											"end": 5263,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5234,
											"end": 5237,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5227,
											"end": 5264,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5270,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5152,
											"end": 5270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5498,
											"name": "tag",
											"source": 12,
											"value": "57"
										},
										{
											"begin": 5276,
											"end": 5498,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5369,
											"end": 5373,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5407,
											"end": 5409,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5396,
											"end": 5405,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5392,
											"end": 5410,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5410,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5384,
											"end": 5410,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 5488,
											"end": 5489,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5477,
											"end": 5486,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5473,
											"end": 5490,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5464,
											"end": 5470,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5491,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 5420,
											"end": 5491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5420,
											"end": 5491,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 5420,
											"end": 5491,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5498,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5498,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5498,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5276,
											"end": 5498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "tag",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 5609,
											"end": 5614,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "258"
										},
										{
											"begin": 5591,
											"end": 5615,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 5591,
											"end": 5615,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5586,
											"end": 5589,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5579,
											"end": 5616,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5504,
											"end": 5622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5504,
											"end": 5622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "tag",
											"source": 12,
											"value": "61"
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5721,
											"end": 5725,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5759,
											"end": 5761,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5748,
											"end": 5757,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5744,
											"end": 5762,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5736,
											"end": 5762,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5736,
											"end": 5762,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5772,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 5840,
											"end": 5841,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5829,
											"end": 5838,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5825,
											"end": 5842,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5822,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5772,
											"end": 5843,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 5772,
											"end": 5843,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5772,
											"end": 5843,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 5772,
											"end": 5843,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5850,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5628,
											"end": 5850,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5856,
											"end": 6185,
											"name": "tag",
											"source": 12,
											"value": "64"
										},
										{
											"begin": 5856,
											"end": 6185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5964,
											"end": 5966,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5952,
											"end": 5961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5943,
											"end": 5950,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5939,
											"end": 5962,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 5935,
											"end": 5967,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 5932,
											"end": 6051,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 5932,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 5932,
											"end": 6051,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 5970,
											"end": 6049,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 5970,
											"end": 6049,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5970,
											"end": 6049,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 5970,
											"end": 6049,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5932,
											"end": 6051,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 5932,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6090,
											"end": 6091,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 6160,
											"end": 6167,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6151,
											"end": 6157,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6140,
											"end": 6149,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6136,
											"end": 6158,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "260"
										},
										{
											"begin": 6115,
											"end": 6168,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 6115,
											"end": 6168,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6168,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6105,
											"end": 6168,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6061,
											"end": 6178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5856,
											"end": 6185,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5856,
											"end": 6185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5856,
											"end": 6185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5856,
											"end": 6185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5856,
											"end": 6185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6191,
											"end": 6633,
											"name": "tag",
											"source": 12,
											"value": "67"
										},
										{
											"begin": 6191,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6378,
											"end": 6380,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 6367,
											"end": 6376,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6363,
											"end": 6381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6355,
											"end": 6381,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6355,
											"end": 6381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 6459,
											"end": 6460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6448,
											"end": 6457,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6444,
											"end": 6461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6435,
											"end": 6441,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 6391,
											"end": 6462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6391,
											"end": 6462,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 6391,
											"end": 6462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 6540,
											"end": 6542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6529,
											"end": 6538,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6525,
											"end": 6543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6516,
											"end": 6522,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 6472,
											"end": 6544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6472,
											"end": 6544,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 6472,
											"end": 6544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6554,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 6622,
											"end": 6624,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6611,
											"end": 6620,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6607,
											"end": 6625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6598,
											"end": 6604,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6554,
											"end": 6626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 6554,
											"end": 6626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6554,
											"end": 6626,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 6554,
											"end": 6626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6191,
											"end": 6633,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 6191,
											"end": 6633,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 6191,
											"end": 6633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6191,
											"end": 6633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6191,
											"end": 6633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6191,
											"end": 6633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6191,
											"end": 6633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6639,
											"end": 6819,
											"name": "tag",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 6639,
											"end": 6819,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6764,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6684,
											"end": 6685,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6677,
											"end": 6765,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6784,
											"end": 6788,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 6781,
											"end": 6782,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6774,
											"end": 6789,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6808,
											"end": 6812,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 6805,
											"end": 6806,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6798,
											"end": 6813,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7019,
											"name": "tag",
											"source": 12,
											"value": "100"
										},
										{
											"begin": 6825,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6865,
											"end": 6869,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6885,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 6903,
											"end": 6904,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6905,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6885,
											"end": 6905,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6885,
											"end": 6905,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 6885,
											"end": 6905,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6905,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6880,
											"end": 6905,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6919,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 6937,
											"end": 6938,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6919,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 6919,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6919,
											"end": 6939,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 6919,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6914,
											"end": 6939,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6914,
											"end": 6939,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6960,
											"end": 6961,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6956,
											"end": 6965,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6948,
											"end": 6965,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6948,
											"end": 6965,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6987,
											"end": 6988,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6981,
											"end": 6985,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6978,
											"end": 6989,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 6975,
											"end": 7012,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6975,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 6975,
											"end": 7012,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6992,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 6992,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 6992,
											"end": 7010,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6992,
											"end": 7010,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 6992,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6975,
											"end": 7012,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 6975,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6825,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "tag",
											"source": 12,
											"value": "103"
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7146,
											"end": 7150,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7184,
											"end": 7186,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 7173,
											"end": 7182,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7169,
											"end": 7187,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7161,
											"end": 7187,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7161,
											"end": 7187,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7197,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 7265,
											"end": 7266,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7254,
											"end": 7263,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7250,
											"end": 7267,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7241,
											"end": 7247,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7197,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 7197,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7197,
											"end": 7268,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 7197,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 7346,
											"end": 7348,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7335,
											"end": 7344,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 7331,
											"end": 7349,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7322,
											"end": 7328,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 7278,
											"end": 7350,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 7278,
											"end": 7350,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7357,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7357,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7479,
											"name": "tag",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 7363,
											"end": 7479,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 7448,
											"end": 7453,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7454,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "248"
										},
										{
											"begin": 7433,
											"end": 7454,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7433,
											"end": 7454,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 7433,
											"end": 7454,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7426,
											"end": 7431,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7423,
											"end": 7455,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7413,
											"end": 7473,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 7413,
											"end": 7473,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7469,
											"end": 7470,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7466,
											"end": 7467,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7459,
											"end": 7471,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7413,
											"end": 7473,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 7413,
											"end": 7473,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7479,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7479,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7622,
											"name": "tag",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 7485,
											"end": 7622,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7539,
											"end": 7544,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7570,
											"end": 7576,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7564,
											"end": 7577,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 7555,
											"end": 7577,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7555,
											"end": 7577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7586,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 7610,
											"end": 7615,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7586,
											"end": 7616,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "269"
										},
										{
											"begin": 7586,
											"end": 7616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7586,
											"end": 7616,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 7586,
											"end": 7616,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7622,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7622,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7622,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7622,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7973,
											"name": "tag",
											"source": 12,
											"value": "107"
										},
										{
											"begin": 7628,
											"end": 7973,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7695,
											"end": 7701,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7744,
											"end": 7746,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 7732,
											"end": 7741,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7723,
											"end": 7730,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7719,
											"end": 7742,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 7715,
											"end": 7747,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 7712,
											"end": 7831,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 7712,
											"end": 7831,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 7712,
											"end": 7831,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "243"
										},
										{
											"begin": 7750,
											"end": 7829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 7750,
											"end": 7829,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7712,
											"end": 7831,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 7712,
											"end": 7831,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7870,
											"end": 7871,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7895,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 7948,
											"end": 7955,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 7939,
											"end": 7945,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 7928,
											"end": 7937,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 7924,
											"end": 7946,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 7895,
											"end": 7956,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "270"
										},
										{
											"begin": 7895,
											"end": 7956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7895,
											"end": 7956,
											"name": "tag",
											"source": 12,
											"value": "393"
										},
										{
											"begin": 7895,
											"end": 7956,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7885,
											"end": 7956,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7885,
											"end": 7956,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7841,
											"end": 7966,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7973,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7973,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7628,
											"end": 7973,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8148,
											"name": "tag",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 7979,
											"end": 8148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8063,
											"end": 8074,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8103,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8092,
											"end": 8095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8085,
											"end": 8104,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8137,
											"end": 8141,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8132,
											"end": 8135,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8128,
											"end": 8142,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8113,
											"end": 8142,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8113,
											"end": 8142,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8148,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8148,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7979,
											"end": 8148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8154,
											"end": 8388,
											"name": "tag",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 8154,
											"end": 8388,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8294,
											"end": 8328,
											"name": "PUSH",
											"source": 12,
											"value": "416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365"
										},
										{
											"begin": 8290,
											"end": 8291,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8282,
											"end": 8288,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8278,
											"end": 8292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8271,
											"end": 8329,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8363,
											"end": 8380,
											"name": "PUSH",
											"source": 12,
											"value": "20726F6C657320666F722073656C660000000000000000000000000000000000"
										},
										{
											"begin": 8358,
											"end": 8360,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8350,
											"end": 8356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8346,
											"end": 8361,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8339,
											"end": 8381,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8154,
											"end": 8388,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8154,
											"end": 8388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8760,
											"name": "tag",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 8394,
											"end": 8760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8536,
											"end": 8539,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 8621,
											"end": 8623,
											"name": "PUSH",
											"source": 12,
											"value": "2F"
										},
										{
											"begin": 8616,
											"end": 8619,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8557,
											"end": 8624,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 8557,
											"end": 8624,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8557,
											"end": 8624,
											"name": "tag",
											"source": 12,
											"value": "397"
										},
										{
											"begin": 8557,
											"end": 8624,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8624,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8550,
											"end": 8624,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8633,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 8722,
											"end": 8725,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8633,
											"end": 8726,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "272"
										},
										{
											"begin": 8633,
											"end": 8726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8633,
											"end": 8726,
											"name": "tag",
											"source": 12,
											"value": "398"
										},
										{
											"begin": 8633,
											"end": 8726,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8751,
											"end": 8753,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8746,
											"end": 8749,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8742,
											"end": 8754,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8735,
											"end": 8754,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8735,
											"end": 8754,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8760,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8760,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8394,
											"end": 8760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 9185,
											"name": "tag",
											"source": 12,
											"value": "122"
										},
										{
											"begin": 8766,
											"end": 9185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8932,
											"end": 8936,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8970,
											"end": 8972,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8959,
											"end": 8968,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8955,
											"end": 8973,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8947,
											"end": 8973,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8947,
											"end": 8973,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9019,
											"end": 9028,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9013,
											"end": 9017,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9009,
											"end": 9029,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9005,
											"end": 9006,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8994,
											"end": 9003,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 8990,
											"end": 9007,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8983,
											"end": 9030,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 9173,
											"end": 9177,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9178,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "273"
										},
										{
											"begin": 9047,
											"end": 9178,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9047,
											"end": 9178,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 9047,
											"end": 9178,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9039,
											"end": 9178,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9039,
											"end": 9178,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 9185,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 9185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 9185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8766,
											"end": 9185,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9633,
											"name": "tag",
											"source": 12,
											"value": "142"
										},
										{
											"begin": 9191,
											"end": 9633,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9340,
											"end": 9344,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9378,
											"end": 9380,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9367,
											"end": 9376,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9363,
											"end": 9381,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9355,
											"end": 9381,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9355,
											"end": 9381,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 9459,
											"end": 9460,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9448,
											"end": 9457,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9444,
											"end": 9461,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9435,
											"end": 9441,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9391,
											"end": 9462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9391,
											"end": 9462,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 9391,
											"end": 9462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9472,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 9540,
											"end": 9542,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9529,
											"end": 9538,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9525,
											"end": 9543,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9516,
											"end": 9522,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9472,
											"end": 9544,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "267"
										},
										{
											"begin": 9472,
											"end": 9544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9472,
											"end": 9544,
											"name": "tag",
											"source": 12,
											"value": "403"
										},
										{
											"begin": 9472,
											"end": 9544,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 9622,
											"end": 9624,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9611,
											"end": 9620,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9607,
											"end": 9625,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9604,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9626,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "266"
										},
										{
											"begin": 9554,
											"end": 9626,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9554,
											"end": 9626,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 9554,
											"end": 9626,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9633,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9633,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9633,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9191,
											"end": 9633,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9830,
											"name": "tag",
											"source": 12,
											"value": "150"
										},
										{
											"begin": 9639,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9679,
											"end": 9682,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9698,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 9716,
											"end": 9717,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9698,
											"end": 9718,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 9698,
											"end": 9718,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9698,
											"end": 9718,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 9698,
											"end": 9718,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9693,
											"end": 9718,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9693,
											"end": 9718,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9732,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 9750,
											"end": 9751,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9732,
											"end": 9752,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 9732,
											"end": 9752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9732,
											"end": 9752,
											"name": "tag",
											"source": 12,
											"value": "407"
										},
										{
											"begin": 9732,
											"end": 9752,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9727,
											"end": 9752,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9775,
											"end": 9776,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9772,
											"end": 9773,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9768,
											"end": 9777,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9761,
											"end": 9777,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9761,
											"end": 9777,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9796,
											"end": 9799,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 9793,
											"end": 9794,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9790,
											"end": 9800,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9823,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9823,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 9787,
											"end": 9823,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 9803,
											"end": 9821,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "tag",
											"source": 12,
											"value": "409"
										},
										{
											"begin": 9803,
											"end": 9821,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9787,
											"end": 9823,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 9787,
											"end": 9823,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9830,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9639,
											"end": 9830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9836,
											"end": 10061,
											"name": "tag",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 9836,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9976,
											"end": 10010,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 9972,
											"end": 9973,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9964,
											"end": 9970,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9960,
											"end": 9974,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9953,
											"end": 10011,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10045,
											"end": 10053,
											"name": "PUSH",
											"source": 12,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10040,
											"end": 10042,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10032,
											"end": 10038,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10028,
											"end": 10043,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10021,
											"end": 10054,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 9836,
											"end": 10061,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9836,
											"end": 10061,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "tag",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10209,
											"end": 10212,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10230,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 10294,
											"end": 10296,
											"name": "PUSH",
											"source": 12,
											"value": "26"
										},
										{
											"begin": 10289,
											"end": 10292,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10230,
											"end": 10297,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 10230,
											"end": 10297,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10230,
											"end": 10297,
											"name": "tag",
											"source": 12,
											"value": "412"
										},
										{
											"begin": 10230,
											"end": 10297,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10297,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10223,
											"end": 10297,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10306,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 10395,
											"end": 10398,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10306,
											"end": 10399,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "274"
										},
										{
											"begin": 10306,
											"end": 10399,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10306,
											"end": 10399,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 10306,
											"end": 10399,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10424,
											"end": 10426,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10419,
											"end": 10422,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10415,
											"end": 10427,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10408,
											"end": 10427,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10408,
											"end": 10427,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10433,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10067,
											"end": 10433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "tag",
											"source": 12,
											"value": "163"
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10605,
											"end": 10609,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10643,
											"end": 10645,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10632,
											"end": 10641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10628,
											"end": 10646,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10646,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10620,
											"end": 10646,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10692,
											"end": 10701,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10686,
											"end": 10690,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10682,
											"end": 10702,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10678,
											"end": 10679,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10667,
											"end": 10676,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10663,
											"end": 10680,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10656,
											"end": 10703,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 10720,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 10846,
											"end": 10850,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10720,
											"end": 10851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "275"
										},
										{
											"begin": 10720,
											"end": 10851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10720,
											"end": 10851,
											"name": "tag",
											"source": 12,
											"value": "415"
										},
										{
											"begin": 10720,
											"end": 10851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10712,
											"end": 10851,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10712,
											"end": 10851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10858,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10439,
											"end": 10858,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10864,
											"end": 11274,
											"name": "tag",
											"source": 12,
											"value": "170"
										},
										{
											"begin": 10864,
											"end": 11274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10904,
											"end": 10911,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10927,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 10945,
											"end": 10946,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 10947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 10927,
											"end": 10947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10927,
											"end": 10947,
											"name": "tag",
											"source": 12,
											"value": "417"
										},
										{
											"begin": 10927,
											"end": 10947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 10947,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10922,
											"end": 10947,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10961,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 10979,
											"end": 10980,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10961,
											"end": 10981,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 10961,
											"end": 10981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10961,
											"end": 10981,
											"name": "tag",
											"source": 12,
											"value": "418"
										},
										{
											"begin": 10961,
											"end": 10981,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 10981,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10956,
											"end": 10981,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11016,
											"end": 11017,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11013,
											"end": 11014,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11009,
											"end": 11018,
											"name": "MUL",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 11056,
											"end": 11067,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11038,
											"end": 11068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 11038,
											"end": 11068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11027,
											"end": 11068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11027,
											"end": 11068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11217,
											"end": 11218,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11208,
											"end": 11215,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11204,
											"end": 11219,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11201,
											"end": 11202,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11198,
											"end": 11220,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11171,
											"end": 11180,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11151,
											"end": 11234,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 11128,
											"end": 11267,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 11128,
											"end": 11267,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 11247,
											"end": 11265,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 11247,
											"end": 11265,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11247,
											"end": 11265,
											"name": "tag",
											"source": 12,
											"value": "421"
										},
										{
											"begin": 11247,
											"end": 11265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11128,
											"end": 11267,
											"name": "tag",
											"source": 12,
											"value": "420"
										},
										{
											"begin": 11128,
											"end": 11267,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10912,
											"end": 11274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10864,
											"end": 11274,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10864,
											"end": 11274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10864,
											"end": 11274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10864,
											"end": 11274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10864,
											"end": 11274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11280,
											"end": 11460,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 11280,
											"end": 11460,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11328,
											"end": 11405,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11325,
											"end": 11326,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11318,
											"end": 11406,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11425,
											"end": 11429,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 11422,
											"end": 11423,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 11415,
											"end": 11430,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11449,
											"end": 11453,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 11446,
											"end": 11447,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11439,
											"end": 11454,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 11466,
											"end": 11651,
											"name": "tag",
											"source": 12,
											"value": "172"
										},
										{
											"begin": 11466,
											"end": 11651,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11506,
											"end": 11507,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 11541,
											"end": 11542,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11523,
											"end": 11543,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "tag",
											"source": 12,
											"value": "424"
										},
										{
											"begin": 11523,
											"end": 11543,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11543,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 11575,
											"end": 11576,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 11557,
											"end": 11577,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 11557,
											"end": 11577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11552,
											"end": 11577,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11552,
											"end": 11577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11596,
											"end": 11597,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11586,
											"end": 11621,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 11586,
											"end": 11621,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 11601,
											"end": 11619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 11601,
											"end": 11619,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11586,
											"end": 11621,
											"name": "tag",
											"source": 12,
											"value": "426"
										},
										{
											"begin": 11586,
											"end": 11621,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11643,
											"end": 11644,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11640,
											"end": 11641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11636,
											"end": 11645,
											"name": "DIV",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11645,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11631,
											"end": 11645,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11466,
											"end": 11651,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11466,
											"end": 11651,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11466,
											"end": 11651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11466,
											"end": 11651,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11466,
											"end": 11651,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11657,
											"end": 11839,
											"name": "tag",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 11657,
											"end": 11839,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11797,
											"end": 11831,
											"name": "PUSH",
											"source": 12,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 11793,
											"end": 11794,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11785,
											"end": 11791,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11781,
											"end": 11795,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11774,
											"end": 11832,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11657,
											"end": 11839,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11657,
											"end": 11839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "tag",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11987,
											"end": 11990,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 12072,
											"end": 12074,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12067,
											"end": 12070,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12008,
											"end": 12075,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 12008,
											"end": 12075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12008,
											"end": 12075,
											"name": "tag",
											"source": 12,
											"value": "430"
										},
										{
											"begin": 12008,
											"end": 12075,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 12075,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12001,
											"end": 12075,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12084,
											"end": 12177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 12173,
											"end": 12176,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12084,
											"end": 12177,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "277"
										},
										{
											"begin": 12084,
											"end": 12177,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12084,
											"end": 12177,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 12084,
											"end": 12177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12202,
											"end": 12204,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12197,
											"end": 12200,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12193,
											"end": 12205,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12205,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12186,
											"end": 12205,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 12211,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11845,
											"end": 12211,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "tag",
											"source": 12,
											"value": "201"
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12383,
											"end": 12387,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12421,
											"end": 12423,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12410,
											"end": 12419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12406,
											"end": 12424,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 12424,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12398,
											"end": 12424,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12470,
											"end": 12479,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12464,
											"end": 12468,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12460,
											"end": 12480,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 12456,
											"end": 12457,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12445,
											"end": 12454,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12441,
											"end": 12458,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12434,
											"end": 12481,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12498,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 12624,
											"end": 12628,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12498,
											"end": 12629,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "278"
										},
										{
											"begin": 12498,
											"end": 12629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12498,
											"end": 12629,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 12498,
											"end": 12629,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12490,
											"end": 12629,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12490,
											"end": 12629,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12217,
											"end": 12636,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12790,
											"name": "tag",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 12642,
											"end": 12790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12744,
											"end": 12755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12781,
											"end": 12784,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12766,
											"end": 12784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12790,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12790,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12642,
											"end": 12790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12796,
											"end": 12969,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 12796,
											"end": 12969,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12936,
											"end": 12961,
											"name": "PUSH",
											"source": 12,
											"value": "416363657373436F6E74726F6C3A206163636F756E7420000000000000000000"
										},
										{
											"begin": 12932,
											"end": 12933,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12924,
											"end": 12930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12920,
											"end": 12934,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12913,
											"end": 12962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 12796,
											"end": 12969,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12796,
											"end": 12969,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12975,
											"end": 13377,
											"name": "tag",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 12975,
											"end": 13377,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13135,
											"end": 13138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13156,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 13238,
											"end": 13240,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 13233,
											"end": 13236,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13156,
											"end": 13241,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 13156,
											"end": 13241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13156,
											"end": 13241,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 13156,
											"end": 13241,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13149,
											"end": 13241,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13149,
											"end": 13241,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13250,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 13339,
											"end": 13342,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13250,
											"end": 13343,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 13250,
											"end": 13343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13250,
											"end": 13343,
											"name": "tag",
											"source": 12,
											"value": "438"
										},
										{
											"begin": 13250,
											"end": 13343,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13368,
											"end": 13370,
											"name": "PUSH",
											"source": 12,
											"value": "17"
										},
										{
											"begin": 13363,
											"end": 13366,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13359,
											"end": 13371,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13352,
											"end": 13371,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13352,
											"end": 13371,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12975,
											"end": 13377,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12975,
											"end": 13377,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12975,
											"end": 13377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12975,
											"end": 13377,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13383,
											"end": 13482,
											"name": "tag",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 13383,
											"end": 13482,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13435,
											"end": 13441,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13469,
											"end": 13474,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13463,
											"end": 13475,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13475,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13453,
											"end": 13475,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13383,
											"end": 13482,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13383,
											"end": 13482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13383,
											"end": 13482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13383,
											"end": 13482,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13488,
											"end": 13627,
											"name": "tag",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 13488,
											"end": 13627,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13577,
											"end": 13583,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13572,
											"end": 13575,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13567,
											"end": 13570,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13561,
											"end": 13584,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 13618,
											"end": 13619,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13609,
											"end": 13615,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13604,
											"end": 13607,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 13600,
											"end": 13616,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13593,
											"end": 13620,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13488,
											"end": 13627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13488,
											"end": 13627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13488,
											"end": 13627,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13488,
											"end": 13627,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 14023,
											"name": "tag",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 13633,
											"end": 14023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13739,
											"end": 13742,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13767,
											"end": 13806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 13800,
											"end": 13805,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13767,
											"end": 13806,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 13767,
											"end": 13806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13767,
											"end": 13806,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 13767,
											"end": 13806,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 13904,
											"end": 13910,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13899,
											"end": 13902,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 13911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 13822,
											"end": 13911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13822,
											"end": 13911,
											"name": "tag",
											"source": 12,
											"value": "443"
										},
										{
											"begin": 13822,
											"end": 13911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13815,
											"end": 13911,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13815,
											"end": 13911,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13920,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 13978,
											"end": 13984,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13973,
											"end": 13976,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 13966,
											"end": 13970,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 13959,
											"end": 13964,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 13971,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13920,
											"end": 13985,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 13920,
											"end": 13985,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13920,
											"end": 13985,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 13920,
											"end": 13985,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14010,
											"end": 14016,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 14005,
											"end": 14008,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14001,
											"end": 14017,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 13994,
											"end": 14017,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13994,
											"end": 14017,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13743,
											"end": 14023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 14023,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 14023,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 14023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 14023,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13633,
											"end": 14023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14029,
											"end": 14196,
											"name": "tag",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 14029,
											"end": 14196,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14169,
											"end": 14188,
											"name": "PUSH",
											"source": 12,
											"value": "206973206D697373696E6720726F6C6520000000000000000000000000000000"
										},
										{
											"begin": 14165,
											"end": 14166,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14157,
											"end": 14163,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14153,
											"end": 14167,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14146,
											"end": 14189,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14029,
											"end": 14196,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14029,
											"end": 14196,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14604,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 14202,
											"end": 14604,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14362,
											"end": 14365,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14383,
											"end": 14468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 14465,
											"end": 14467,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 14460,
											"end": 14463,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14383,
											"end": 14468,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "279"
										},
										{
											"begin": 14383,
											"end": 14468,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14383,
											"end": 14468,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 14383,
											"end": 14468,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14376,
											"end": 14468,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14376,
											"end": 14468,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14477,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 14566,
											"end": 14569,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14477,
											"end": 14570,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "285"
										},
										{
											"begin": 14477,
											"end": 14570,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14477,
											"end": 14570,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 14477,
											"end": 14570,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14595,
											"end": 14597,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 14590,
											"end": 14593,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14586,
											"end": 14598,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14579,
											"end": 14598,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14579,
											"end": 14598,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14604,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14604,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14604,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14202,
											"end": 14604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14610,
											"end": 15577,
											"name": "tag",
											"source": 12,
											"value": "211"
										},
										{
											"begin": 14610,
											"end": 15577,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14992,
											"end": 14995,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15014,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 15158,
											"end": 15161,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15162,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "281"
										},
										{
											"begin": 15014,
											"end": 15162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15014,
											"end": 15162,
											"name": "tag",
											"source": 12,
											"value": "450"
										},
										{
											"begin": 15014,
											"end": 15162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15162,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15007,
											"end": 15162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15179,
											"end": 15274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 15270,
											"end": 15273,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15261,
											"end": 15267,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15179,
											"end": 15274,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 15179,
											"end": 15274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15179,
											"end": 15274,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 15179,
											"end": 15274,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15172,
											"end": 15274,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15172,
											"end": 15274,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15291,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 15435,
											"end": 15438,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15291,
											"end": 15439,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 15291,
											"end": 15439,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15291,
											"end": 15439,
											"name": "tag",
											"source": 12,
											"value": "452"
										},
										{
											"begin": 15291,
											"end": 15439,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15284,
											"end": 15439,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15284,
											"end": 15439,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 15547,
											"end": 15550,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15538,
											"end": 15544,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15551,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "284"
										},
										{
											"begin": 15456,
											"end": 15551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15456,
											"end": 15551,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 15456,
											"end": 15551,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15449,
											"end": 15551,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15449,
											"end": 15551,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15568,
											"end": 15571,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15561,
											"end": 15571,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15561,
											"end": 15571,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14610,
											"end": 15577,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14610,
											"end": 15577,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14610,
											"end": 15577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14610,
											"end": 15577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14610,
											"end": 15577,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14610,
											"end": 15577,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15583,
											"end": 15685,
											"name": "tag",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 15583,
											"end": 15685,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15624,
											"end": 15630,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15675,
											"end": 15677,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15671,
											"end": 15678,
											"name": "NOT",
											"source": 12
										},
										{
											"begin": 15666,
											"end": 15668,
											"name": "PUSH",
											"source": 12,
											"value": "1F"
										},
										{
											"begin": 15659,
											"end": 15664,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15655,
											"end": 15669,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15651,
											"end": 15679,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 15641,
											"end": 15679,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15641,
											"end": 15679,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15583,
											"end": 15685,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15583,
											"end": 15685,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15583,
											"end": 15685,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15583,
											"end": 15685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15691,
											"end": 16068,
											"name": "tag",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 15691,
											"end": 16068,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15779,
											"end": 15782,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15807,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 15840,
											"end": 15845,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15846,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "282"
										},
										{
											"begin": 15807,
											"end": 15846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15807,
											"end": 15846,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 15807,
											"end": 15846,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15862,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 15926,
											"end": 15932,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15921,
											"end": 15924,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15862,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 15862,
											"end": 15933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15862,
											"end": 15933,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 15862,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15855,
											"end": 15933,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15855,
											"end": 15933,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15942,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 16000,
											"end": 16006,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15995,
											"end": 15998,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15988,
											"end": 15992,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15981,
											"end": 15986,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 15977,
											"end": 15993,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15942,
											"end": 16007,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "283"
										},
										{
											"begin": 15942,
											"end": 16007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15942,
											"end": 16007,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 15942,
											"end": 16007,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16032,
											"end": 16061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 16054,
											"end": 16060,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16032,
											"end": 16061,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "287"
										},
										{
											"begin": 16032,
											"end": 16061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16032,
											"end": 16061,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 16032,
											"end": 16061,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16027,
											"end": 16030,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16023,
											"end": 16062,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16016,
											"end": 16062,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16016,
											"end": 16062,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15783,
											"end": 16068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15691,
											"end": 16068,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15691,
											"end": 16068,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15691,
											"end": 16068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15691,
											"end": 16068,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15691,
											"end": 16068,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16074,
											"end": 16387,
											"name": "tag",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 16074,
											"end": 16387,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16187,
											"end": 16191,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16225,
											"end": 16227,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16214,
											"end": 16223,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16210,
											"end": 16228,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16202,
											"end": 16228,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16202,
											"end": 16228,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16274,
											"end": 16283,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16268,
											"end": 16272,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16264,
											"end": 16284,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16260,
											"end": 16261,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16249,
											"end": 16258,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16245,
											"end": 16262,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16238,
											"end": 16285,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16302,
											"end": 16380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 16375,
											"end": 16379,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16366,
											"end": 16372,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16302,
											"end": 16380,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "288"
										},
										{
											"begin": 16302,
											"end": 16380,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16302,
											"end": 16380,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 16302,
											"end": 16380,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16294,
											"end": 16380,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16294,
											"end": 16380,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16074,
											"end": 16387,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16074,
											"end": 16387,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16074,
											"end": 16387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16074,
											"end": 16387,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16074,
											"end": 16387,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16393,
											"end": 16573,
											"name": "tag",
											"source": 12,
											"value": "221"
										},
										{
											"begin": 16393,
											"end": 16573,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16441,
											"end": 16518,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16438,
											"end": 16439,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16431,
											"end": 16519,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16538,
											"end": 16542,
											"name": "PUSH",
											"source": 12,
											"value": "41"
										},
										{
											"begin": 16535,
											"end": 16536,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16528,
											"end": 16543,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16562,
											"end": 16566,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16559,
											"end": 16560,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16552,
											"end": 16567,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16579,
											"end": 16759,
											"name": "tag",
											"source": 12,
											"value": "225"
										},
										{
											"begin": 16579,
											"end": 16759,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16627,
											"end": 16704,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 16624,
											"end": 16625,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16617,
											"end": 16705,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16724,
											"end": 16728,
											"name": "PUSH",
											"source": 12,
											"value": "32"
										},
										{
											"begin": 16721,
											"end": 16722,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 16714,
											"end": 16729,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16748,
											"end": 16752,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 16745,
											"end": 16746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16738,
											"end": 16753,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 16765,
											"end": 16936,
											"name": "tag",
											"source": 12,
											"value": "238"
										},
										{
											"begin": 16765,
											"end": 16936,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16804,
											"end": 16807,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16827,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 16845,
											"end": 16850,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16827,
											"end": 16851,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "254"
										},
										{
											"begin": 16827,
											"end": 16851,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16827,
											"end": 16851,
											"name": "tag",
											"source": 12,
											"value": "465"
										},
										{
											"begin": 16827,
											"end": 16851,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16851,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16818,
											"end": 16851,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16873,
											"end": 16877,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16866,
											"end": 16871,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16863,
											"end": 16878,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16860,
											"end": 16901,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 16860,
											"end": 16901,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 16881,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 16881,
											"end": 16899,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "268"
										},
										{
											"begin": 16881,
											"end": 16899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16881,
											"end": 16899,
											"name": "tag",
											"source": 12,
											"value": "467"
										},
										{
											"begin": 16881,
											"end": 16899,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16860,
											"end": 16901,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 16860,
											"end": 16901,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16928,
											"end": 16929,
											"name": "PUSH",
											"source": 12,
											"value": "1"
										},
										{
											"begin": 16921,
											"end": 16926,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16917,
											"end": 16930,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 16910,
											"end": 16930,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16910,
											"end": 16930,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16765,
											"end": 16936,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 16765,
											"end": 16936,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16765,
											"end": 16936,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16765,
											"end": 16936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16942,
											"end": 17124,
											"name": "tag",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 16942,
											"end": 17124,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17082,
											"end": 17116,
											"name": "PUSH",
											"source": 12,
											"value": "537472696E67733A20686578206C656E67746820696E73756666696369656E74"
										},
										{
											"begin": 17078,
											"end": 17079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17070,
											"end": 17076,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17066,
											"end": 17080,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17059,
											"end": 17117,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16942,
											"end": 17124,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16942,
											"end": 17124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17130,
											"end": 17496,
											"name": "tag",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 17130,
											"end": 17496,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17272,
											"end": 17275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17293,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 17357,
											"end": 17359,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17352,
											"end": 17355,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17293,
											"end": 17360,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "271"
										},
										{
											"begin": 17293,
											"end": 17360,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17293,
											"end": 17360,
											"name": "tag",
											"source": 12,
											"value": "470"
										},
										{
											"begin": 17293,
											"end": 17360,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17286,
											"end": 17360,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17286,
											"end": 17360,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17369,
											"end": 17462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 17458,
											"end": 17461,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17369,
											"end": 17462,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "289"
										},
										{
											"begin": 17369,
											"end": 17462,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17369,
											"end": 17462,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 17369,
											"end": 17462,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17487,
											"end": 17489,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17482,
											"end": 17485,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17478,
											"end": 17490,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17471,
											"end": 17490,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17471,
											"end": 17490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17130,
											"end": 17496,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17130,
											"end": 17496,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17130,
											"end": 17496,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17130,
											"end": 17496,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17502,
											"end": 17921,
											"name": "tag",
											"source": 12,
											"value": "241"
										},
										{
											"begin": 17502,
											"end": 17921,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17668,
											"end": 17672,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17706,
											"end": 17708,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17695,
											"end": 17704,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17691,
											"end": 17709,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17683,
											"end": 17709,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17683,
											"end": 17709,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17755,
											"end": 17764,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17749,
											"end": 17753,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17745,
											"end": 17765,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17741,
											"end": 17742,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17730,
											"end": 17739,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17726,
											"end": 17743,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17719,
											"end": 17766,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17783,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17909,
											"end": 17913,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17783,
											"end": 17914,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "290"
										},
										{
											"begin": 17783,
											"end": 17914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17783,
											"end": 17914,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 17783,
											"end": 17914,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17775,
											"end": 17914,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17775,
											"end": 17914,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17502,
											"end": 17921,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17502,
											"end": 17921,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17502,
											"end": 17921,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17502,
											"end": 17921,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/AccessControl.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"@openzeppelin/contracts/utils/Strings.sol",
								"@openzeppelin/contracts/utils/introspection/ERC165.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"@openzeppelin/contracts/utils/math/Math.sol",
								"@openzeppelin/contracts/utils/math/SignedMath.sol",
								"contracts/IStakeX.sol",
								"contracts/StakingPool.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"MINTER_ROLE()": "d5391393",
							"claimRewards()": "372500ab",
							"deposit(uint256)": "b6b55f25",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"stakeXToken()": "6ae674e2",
							"stakers(address)": "9168ae72",
							"supportsInterface(bytes4)": "01ffc9a7",
							"totalStaked()": "817b1cd2",
							"transferOwnership(address)": "f2fde38b",
							"withdraw(uint256)": "2e1a7d4d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_stakeXToken\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"InsufficientAmount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NoAvailableRewards\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"RewardsTransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"WithdrawnFailed\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"RewardsClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdrawn\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MINTER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimRewards\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakeXToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardDebt\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"stakingStartTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalStaked\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/StakingPool.sol\":\"StakingPool\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x0dd6e52cb394d7f5abe5dca2d4908a6be40417914720932de757de34a99ab87f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc117ce50ea746cab6b97ed1a1facee17a715ae0cb95d67b943dacbaf15176fb\",\"dweb:/ipfs/QmYRZ2UGNYwsHwfNu7Wjr8L2j1LBZ1mKv6NvbwgterYMXc\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x287b55befed2961a7eabd7d7b1b2839cbca8a5b80ef8dcbb25ed3d4c2002c305\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd39944e8fc06be6dbe2dd1d8449b5336e23c6a7ba3e8e9ae5ae0f37f35283f5\",\"dweb:/ipfs/QmPV3FGYjVwvKSgAXKUN3r9T9GwniZz83CxBpM7vyj2G53\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0x3088eb2868e8d13d89d16670b5f8612c4ab9ff8956272837d8e90106c59c14a0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b81d9ff6559ea5c47fc573e17ece6d9ba5d6839e213e6ebc3b4c5c8fe4199d7f\",\"dweb:/ipfs/QmPCW1bFisUzJkyjroY3yipwfism9RRCigCcK1hbXtVM8n\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xe4455ac1eb7fc497bb7402579e7b4d64d928b846fce7d2b6fde06d366f21c2b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cc8841b3cd48ad125e2f46323c8bad3aa0e88e399ec62acb9e57efa7e7c8058c\",\"dweb:/ipfs/QmSqE4mXHA2BXW58deDbXE8MTcsL5JSKNDbm23sVQxRLPS\"]},\"@openzeppelin/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xf92515413956f529d95977adc9b0567d583c6203fc31ab1c23824c35187e3ddc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c50fcc459e49a9858b6d8ad5f911295cb7c9ab57567845a250bf0153f84a95c7\",\"dweb:/ipfs/QmcEW85JRzvDkQggxiBBLVAasXWdkhEysqypj9EaB6H2g6\"]},\"contracts/IStakeX.sol\":{\"keccak256\":\"0xc78bc6fc5eea58b3b5c3b8a8a92cdfa14e977f938527d7d947d9dba4220d1728\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dc5b252fc21de30c31f8a859e79534068a6db25ab000174f1013a951c7fbc520\",\"dweb:/ipfs/QmYbvLqT9hc8MMd7iMEVDubobwv6KwRuAVtEXeGR6F8bqY\"]},\"contracts/StakingPool.sol\":{\"keccak256\":\"0xd9e31f494e60c04f50254ed9c6e682ef3f0cabf9fa57ad4fec44f39d1be23e90\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ff1bc8253eeedb733dd82c681bf27e2e3d3f0c6a72abbcd430debce3346b327c\",\"dweb:/ipfs/QmfPLjMxoaBTjAwqisoL2oEjRBRVNGHrmkws9Uvnhopm18\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 396,
								"contract": "contracts/StakingPool.sol:StakingPool",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 24,
								"contract": "contracts/StakingPool.sol:StakingPool",
								"label": "_roles",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_bytes32,t_struct(RoleData)19_storage)"
							},
							{
								"astId": 1886,
								"contract": "contracts/StakingPool.sol:StakingPool",
								"label": "stakeXToken",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC20)579"
							},
							{
								"astId": 1888,
								"contract": "contracts/StakingPool.sol:StakingPool",
								"label": "totalStaked",
								"offset": 0,
								"slot": "3",
								"type": "t_uint256"
							},
							{
								"astId": 1900,
								"contract": "contracts/StakingPool.sol:StakingPool",
								"label": "stakers",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_struct(Staker)1895_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_contract(IERC20)579": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Staker)1895_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct StakingPool.Staker)",
								"numberOfBytes": "32",
								"value": "t_struct(Staker)1895_storage"
							},
							"t_mapping(t_bytes32,t_struct(RoleData)19_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct AccessControl.RoleData)",
								"numberOfBytes": "32",
								"value": "t_struct(RoleData)19_storage"
							},
							"t_struct(RoleData)19_storage": {
								"encoding": "inplace",
								"label": "struct AccessControl.RoleData",
								"members": [
									{
										"astId": 16,
										"contract": "contracts/StakingPool.sol:StakingPool",
										"label": "members",
										"offset": 0,
										"slot": "0",
										"type": "t_mapping(t_address,t_bool)"
									},
									{
										"astId": 18,
										"contract": "contracts/StakingPool.sol:StakingPool",
										"label": "adminRole",
										"offset": 0,
										"slot": "1",
										"type": "t_bytes32"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Staker)1895_storage": {
								"encoding": "inplace",
								"label": "struct StakingPool.Staker",
								"members": [
									{
										"astId": 1890,
										"contract": "contracts/StakingPool.sol:StakingPool",
										"label": "balance",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1892,
										"contract": "contracts/StakingPool.sol:StakingPool",
										"label": "rewardDebt",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1894,
										"contract": "contracts/StakingPool.sol:StakingPool",
										"label": "stakingStartTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/AccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"Context": [
							609
						],
						"ERC165": [
							862
						],
						"IAccessControl": [
							388
						],
						"IERC165": [
							874
						],
						"Math": [
							1740
						],
						"SignedMath": [
							1845
						],
						"Strings": [
							838
						]
					},
					"id": 316,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "./IAccessControl.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 389,
							"src": "133:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 610,
							"src": "164:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
							"file": "../utils/Strings.sol",
							"id": 4,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 839,
							"src": "195:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
							"file": "../utils/introspection/ERC165.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 316,
							"sourceUnit": 863,
							"src": "226:43:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 7,
										"name": "Context",
										"nameLocations": [
											"1967:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 609,
										"src": "1967:7:0"
									},
									"id": 8,
									"nodeType": "InheritanceSpecifier",
									"src": "1967:7:0"
								},
								{
									"baseName": {
										"id": 9,
										"name": "IAccessControl",
										"nameLocations": [
											"1976:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 388,
										"src": "1976:14:0"
									},
									"id": 10,
									"nodeType": "InheritanceSpecifier",
									"src": "1976:14:0"
								},
								{
									"baseName": {
										"id": 11,
										"name": "ERC165",
										"nameLocations": [
											"1992:6:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 862,
										"src": "1992:6:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "1992:6:0"
								}
							],
							"canonicalName": "AccessControl",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 6,
								"nodeType": "StructuredDocumentation",
								"src": "271:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 315,
							"linearizedBaseContracts": [
								315,
								862,
								874,
								388,
								609
							],
							"name": "AccessControl",
							"nameLocation": "1950:13:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControl.RoleData",
									"id": 19,
									"members": [
										{
											"constant": false,
											"id": 16,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "2056:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2031:32:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 15,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 13,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2039:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2031:24:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 14,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2050:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 18,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2081:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 19,
											"src": "2073:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 17,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2073:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2012:8:0",
									"nodeType": "StructDefinition",
									"scope": 315,
									"src": "2005:92:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 24,
									"mutability": "mutable",
									"name": "_roles",
									"nameLocation": "2140:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2103:43:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
										"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
									},
									"typeName": {
										"id": 23,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 20,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "2111:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "2103:28:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
											"typeString": "mapping(bytes32 => struct AccessControl.RoleData)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 22,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 21,
												"name": "RoleData",
												"nameLocations": [
													"2122:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 19,
												"src": "2122:8:0"
											},
											"referencedDeclaration": 19,
											"src": "2122:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_RoleData_$19_storage_ptr",
												"typeString": "struct AccessControl.RoleData"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 27,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2177:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 315,
									"src": "2153:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 25,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2153:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 26,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2198:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2621:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 33,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 30,
															"src": "2642:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 32,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 92,
														"src": "2631:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2631:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "2631:16:0"
											},
											{
												"id": 36,
												"nodeType": "PlaceholderStatement",
												"src": "2657:1:0"
											}
										]
									},
									"documentation": {
										"id": 28,
										"nodeType": "StructuredDocumentation",
										"src": "2209:375:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"
									},
									"id": 38,
									"name": "onlyRole",
									"nameLocation": "2598:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "2607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 29,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2606:14:0"
									},
									"src": "2589:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										861
									],
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "2823:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 47,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 41,
															"src": "2840:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 49,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 388,
																		"src": "2860:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$388_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 48,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "2855:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2855:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$388",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 51,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "2876:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "2855:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "2840:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 55,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 41,
																"src": "2915:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 53,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "2891:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControl_$315_$",
																	"typeString": "type(contract super AccessControl)"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2897:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 861,
															"src": "2891:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 56,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2891:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "2840:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 46,
												"id": 58,
												"nodeType": "Return",
												"src": "2833:94:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "2671:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "2741:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 43,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2799:8:0"
									},
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "2766:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2759:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 40,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "2759:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2758:20:0"
									},
									"returnParameters": {
										"id": 46,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "2817:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 44,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2817:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:6:0"
									},
									"scope": 315,
									"src": "2732:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										355
									],
									"body": {
										"id": 78,
										"nodeType": "Block",
										"src": "3113:53:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"id": 71,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "3130:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 73,
															"indexExpression": {
																"id": 72,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "3137:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3130:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3143:7:0",
														"memberName": "members",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 16,
														"src": "3130:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 76,
													"indexExpression": {
														"id": 75,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "3151:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3130:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 70,
												"id": 77,
												"nodeType": "Return",
												"src": "3123:36:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "2940:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 79,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3030:7:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 67,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3089:8:0"
									},
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3046:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3038:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 62,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3038:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3060:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3052:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 64,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3052:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3037:31:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 79,
												"src": "3107:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 68,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3107:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3106:6:0"
									},
									"scope": 315,
									"src": "3021:145:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "3516:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 86,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 82,
															"src": "3537:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 87,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "3543:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3543:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 85,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															92,
															131
														],
														"referencedDeclaration": 131,
														"src": "3526:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3526:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "3526:30:0"
											}
										]
									},
									"documentation": {
										"id": 80,
										"nodeType": "StructuredDocumentation",
										"src": "3172:283:0",
										"text": " @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"
									},
									"id": 92,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3469:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3488:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 92,
												"src": "3480:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 81,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3480:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3479:14:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3516:0:0"
									},
									"scope": 315,
									"src": "3460:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 130,
										"nodeType": "Block",
										"src": "3917:406:0",
										"statements": [
											{
												"condition": {
													"id": 104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3931:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 101,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "3940:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 102,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 97,
																"src": "3946:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 100,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "3932:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 103,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3932:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 129,
												"nodeType": "IfStatement",
												"src": "3927:390:0",
												"trueBody": {
													"id": 128,
													"nodeType": "Block",
													"src": "3956:361:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"hexValue": "416363657373436f6e74726f6c3a206163636f756e7420",
																						"id": 110,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4064:25:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						"value": "AccessControl: account "
																					},
																					{
																						"arguments": [
																							{
																								"id": 113,
																								"name": "account",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 97,
																								"src": "4135:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_address",
																									"typeString": "address"
																								}
																							],
																							"expression": {
																								"id": 111,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 838,
																								"src": "4115:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$838_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 112,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4123:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 812,
																							"src": "4115:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (address) pure returns (string memory)"
																							}
																						},
																						"id": 114,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4115:28:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					},
																					{
																						"hexValue": "206973206d697373696e6720726f6c6520",
																						"id": 115,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "4169:19:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						"value": " is missing role "
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"id": 120,
																										"name": "role",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 95,
																										"src": "4242:4:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									}
																								],
																								"expression": {
																									"argumentTypes": [
																										{
																											"typeIdentifier": "t_bytes32",
																											"typeString": "bytes32"
																										}
																									],
																									"id": 119,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"lValueRequested": false,
																									"nodeType": "ElementaryTypeNameExpression",
																									"src": "4234:7:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_type$_t_uint256_$",
																										"typeString": "type(uint256)"
																									},
																									"typeName": {
																										"id": 118,
																										"name": "uint256",
																										"nodeType": "ElementaryTypeName",
																										"src": "4234:7:0",
																										"typeDescriptions": {}
																									}
																								},
																								"id": 121,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"kind": "typeConversion",
																								"lValueRequested": false,
																								"nameLocations": [],
																								"names": [],
																								"nodeType": "FunctionCall",
																								"src": "4234:13:0",
																								"tryCall": false,
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							{
																								"hexValue": "3332",
																								"id": 122,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"kind": "number",
																								"lValueRequested": false,
																								"nodeType": "Literal",
																								"src": "4249:2:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								},
																								"value": "32"
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								{
																									"typeIdentifier": "t_rational_32_by_1",
																									"typeString": "int_const 32"
																								}
																							],
																							"expression": {
																								"id": 116,
																								"name": "Strings",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 838,
																								"src": "4214:7:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_type$_t_contract$_Strings_$838_$",
																									"typeString": "type(library Strings)"
																								}
																							},
																							"id": 117,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "4222:11:0",
																							"memberName": "toHexString",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": 792,
																							"src": "4214:19:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																								"typeString": "function (uint256,uint256) pure returns (string memory)"
																							}
																						},
																						"id": 123,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "4214:38:0",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874",
																							"typeString": "literal_string \"AccessControl: account \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						},
																						{
																							"typeIdentifier": "t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69",
																							"typeString": "literal_string \" is missing role \""
																						},
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 108,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "4022:3:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 109,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "4026:12:0",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "4022:16:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 124,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "4022:252:0",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 107,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3994:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_string_storage_ptr_$",
																				"typeString": "type(string storage pointer)"
																			},
																			"typeName": {
																				"id": 106,
																				"name": "string",
																				"nodeType": "ElementaryTypeName",
																				"src": "3994:6:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3994:298:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 105,
																	"name": "revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967277,
																		4294967277
																	],
																	"referencedDeclaration": 4294967277,
																	"src": "3970:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (string memory) pure"
																	}
																},
																"id": 126,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3970:336:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 127,
															"nodeType": "ExpressionStatement",
															"src": "3970:336:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 93,
										"nodeType": "StructuredDocumentation",
										"src": "3569:270:0",
										"text": " @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"
									},
									"id": 131,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "3853:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 98,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3872:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3864:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 94,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3864:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3886:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 131,
												"src": "3878:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3878:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3863:31:0"
									},
									"returnParameters": {
										"id": 99,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3917:0:0"
									},
									"scope": 315,
									"src": "3844:479:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										363
									],
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "4587:46:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 140,
															"name": "_roles",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 24,
															"src": "4604:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
															}
														},
														"id": 142,
														"indexExpression": {
															"id": 141,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "4611:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4604:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$19_storage",
															"typeString": "struct AccessControl.RoleData storage ref"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4617:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 18,
													"src": "4604:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 139,
												"id": 144,
												"nodeType": "Return",
												"src": "4597:29:0"
											}
										]
									},
									"documentation": {
										"id": 132,
										"nodeType": "StructuredDocumentation",
										"src": "4329:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4513:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 136,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4560:8:0"
									},
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4534:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4526:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 133,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4526:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4525:14:0"
									},
									"returnParameters": {
										"id": 139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "4578:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 137,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4578:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4577:9:0"
									},
									"scope": 315,
									"src": "4504:129:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										371
									],
									"body": {
										"id": 165,
										"nodeType": "Block",
										"src": "5032:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 161,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5053:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 162,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 151,
															"src": "5059:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 160,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "5042:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 163,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5042:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 164,
												"nodeType": "ExpressionStatement",
												"src": "5042:25:0"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "4639:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 166,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 156,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "5025:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 155,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5012:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 157,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5012:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 154,
												"name": "onlyRole",
												"nameLocations": [
													"5003:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5003:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5003:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "4938:9:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 153,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "4994:8:0"
									},
									"parameters": {
										"id": 152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4956:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4948:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 148,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4948:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 151,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4970:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "4962:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 150,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4962:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4947:31:0"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5032:0:0"
									},
									"scope": 315,
									"src": "4929:145:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										379
									],
									"body": {
										"id": 185,
										"nodeType": "Block",
										"src": "5458:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 181,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5480:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 182,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 171,
															"src": "5486:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 180,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "5468:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 183,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5468:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 184,
												"nodeType": "ExpressionStatement",
												"src": "5468:26:0"
											}
										]
									},
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "5080:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 186,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 176,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 169,
															"src": "5451:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 175,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "5438:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5438:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 178,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 174,
												"name": "onlyRole",
												"nameLocations": [
													"5429:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "5429:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5429:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5363:10:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 173,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "5420:8:0"
									},
									"parameters": {
										"id": 172,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5382:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5374:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 168,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5374:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5396:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 186,
												"src": "5388:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5388:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5373:31:0"
									},
									"returnParameters": {
										"id": 179,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5458:0:0"
									},
									"scope": 315,
									"src": "5354:147:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										387
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "6115:137:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 199,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 196,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 191,
																"src": "6133:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 197,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "6144:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 198,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6144:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6133:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66",
															"id": 200,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6158:49:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															},
															"value": "AccessControl: can only renounce roles for self"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b",
																"typeString": "literal_string \"AccessControl: can only renounce roles for self\""
															}
														],
														"id": 195,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6125:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6125:83:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 202,
												"nodeType": "ExpressionStatement",
												"src": "6125:83:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 189,
															"src": "6231:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 191,
															"src": "6237:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 314,
														"src": "6219:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6219:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "6219:26:0"
											}
										]
									},
									"documentation": {
										"id": 187,
										"nodeType": "StructuredDocumentation",
										"src": "5507:526:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6047:12:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 193,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6106:8:0"
									},
									"parameters": {
										"id": 192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 189,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6068:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6060:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 188,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6060:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6082:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "6074:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6074:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6059:31:0"
									},
									"returnParameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6115:0:0"
									},
									"scope": 315,
									"src": "6038:214:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "7005:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 218,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "7026:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 219,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "7032:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 217,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 283,
														"src": "7015:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7015:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "7015:25:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "6258:674:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."
									},
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setupRole",
									"nameLocation": "6946:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6965:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6957:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6957:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6979:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "6971:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6971:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6956:31:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7005:0:0"
									},
									"scope": 315,
									"src": "6937:110:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 250,
										"nodeType": "Block",
										"src": "7245:174:0",
										"statements": [
											{
												"assignments": [
													232
												],
												"declarations": [
													{
														"constant": false,
														"id": 232,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "7263:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 250,
														"src": "7255:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 231,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "7255:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 236,
												"initialValue": {
													"arguments": [
														{
															"id": 234,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7296:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 233,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "7283:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 235,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7283:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7255:46:0"
											},
											{
												"expression": {
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 237,
																"name": "_roles",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 24,
																"src": "7311:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																}
															},
															"id": 239,
															"indexExpression": {
																"id": 238,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 226,
																"src": "7318:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "7311:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$19_storage",
																"typeString": "struct AccessControl.RoleData storage ref"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "7324:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 18,
														"src": "7311:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 241,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "7336:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "7311:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "7311:34:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 245,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "7377:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 246,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 232,
															"src": "7383:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 247,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "7402:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 244,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 327,
														"src": "7360:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7360:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 249,
												"nodeType": "EmitStatement",
												"src": "7355:57:0"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "7053:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "7181:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 229,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7203:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7195:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 225,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7195:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "7217:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 251,
												"src": "7209:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 227,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7209:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7194:33:0"
									},
									"returnParameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7245:0:0"
									},
									"scope": 315,
									"src": "7172:247:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 282,
										"nodeType": "Block",
										"src": "7655:165:0",
										"statements": [
											{
												"condition": {
													"id": 263,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7669:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 260,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 254,
																"src": "7678:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 261,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 256,
																"src": "7684:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 259,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 79,
															"src": "7670:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 262,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7670:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 281,
												"nodeType": "IfStatement",
												"src": "7665:149:0",
												"trueBody": {
													"id": 280,
													"nodeType": "Block",
													"src": "7694:120:0",
													"statements": [
														{
															"expression": {
																"id": 271,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 264,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "7708:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 266,
																			"indexExpression": {
																				"id": 265,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 254,
																				"src": "7715:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7708:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 267,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7721:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "7708:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 269,
																	"indexExpression": {
																		"id": 268,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7729:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7708:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 270,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7740:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7708:36:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 272,
															"nodeType": "ExpressionStatement",
															"src": "7708:36:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 274,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 254,
																		"src": "7775:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 275,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 256,
																		"src": "7781:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 276,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "7790:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 277,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7790:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 273,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "7763:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 278,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7763:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 279,
															"nodeType": "EmitStatement",
															"src": "7758:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 252,
										"nodeType": "StructuredDocumentation",
										"src": "7425:157:0",
										"text": " @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 283,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7596:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 254,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7615:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7607:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 253,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7607:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 256,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7629:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "7621:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 255,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7621:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7606:31:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7655:0:0"
									},
									"scope": 315,
									"src": "7587:233:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 313,
										"nodeType": "Block",
										"src": "8060:165:0",
										"statements": [
											{
												"condition": {
													"arguments": [
														{
															"id": 292,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 286,
															"src": "8082:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 293,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 288,
															"src": "8088:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 291,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 79,
														"src": "8074:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8074:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 312,
												"nodeType": "IfStatement",
												"src": "8070:149:0",
												"trueBody": {
													"id": 311,
													"nodeType": "Block",
													"src": "8098:121:0",
													"statements": [
														{
															"expression": {
																"id": 302,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"id": 295,
																				"name": "_roles",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 24,
																				"src": "8112:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControl.RoleData storage ref)"
																				}
																			},
																			"id": 297,
																			"indexExpression": {
																				"id": 296,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 286,
																				"src": "8119:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8112:12:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$19_storage",
																				"typeString": "struct AccessControl.RoleData storage ref"
																			}
																		},
																		"id": 298,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8125:7:0",
																		"memberName": "members",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 16,
																		"src": "8112:20:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 300,
																	"indexExpression": {
																		"id": 299,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8133:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8112:29:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 301,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8144:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8112:37:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 303,
															"nodeType": "ExpressionStatement",
															"src": "8112:37:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 305,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 286,
																		"src": "8180:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 306,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 288,
																		"src": "8186:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 307,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 591,
																			"src": "8195:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8195:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 304,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 345,
																	"src": "8168:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8168:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 310,
															"nodeType": "EmitStatement",
															"src": "8163:45:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 284,
										"nodeType": "StructuredDocumentation",
										"src": "7826:160:0",
										"text": " @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 314,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "8000:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 286,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "8020:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8012:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "8012:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 288,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8034:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 314,
												"src": "8026:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 287,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8026:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8011:31:0"
									},
									"returnParameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8060:0:0"
									},
									"scope": 315,
									"src": "7991:234:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 316,
							"src": "1932:6295:0",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "108:8120:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							388
						]
					},
					"id": 389,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 317,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "94:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 318,
								"nodeType": "StructuredDocumentation",
								"src": "119:89:1",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 388,
							"linearizedBaseContracts": [
								388
							],
							"name": "IAccessControl",
							"nameLocation": "219:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 319,
										"nodeType": "StructuredDocumentation",
										"src": "240:292:1",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 327,
									"name": "RoleAdminChanged",
									"nameLocation": "543:16:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 321,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "576:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "560:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 320,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 323,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "598:17:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "582:33:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 322,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "582:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "633:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "617:28:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 324,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "559:87:1"
									},
									"src": "537:110:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "653:212:1",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 336,
									"name": "RoleGranted",
									"nameLocation": "876:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 330,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "904:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "888:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 329,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "888:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 332,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "926:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "910:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 331,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "910:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "951:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "935:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "887:71:1"
									},
									"src": "870:89:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "965:275:1",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 345,
									"name": "RoleRevoked",
									"nameLocation": "1251:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 339,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1279:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1263:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 338,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1263:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1301:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1285:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 340,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1285:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1326:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 345,
												"src": "1310:22:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1310:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1262:71:1"
									},
									"src": "1245:89:1"
								},
								{
									"documentation": {
										"id": 346,
										"nodeType": "StructuredDocumentation",
										"src": "1340:76:1",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 355,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1430:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 348,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1446:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1438:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1438:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1460:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1452:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1452:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1437:31:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 353,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1492:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 352,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1492:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1491:6:1"
									},
									"scope": 388,
									"src": "1421:77:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 356,
										"nodeType": "StructuredDocumentation",
										"src": "1504:184:1",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 363,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "1702:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 359,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 358,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1723:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1715:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1715:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1714:14:1"
									},
									"returnParameters": {
										"id": 362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 363,
												"src": "1752:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 360,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1752:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1751:9:1"
									},
									"scope": 388,
									"src": "1693:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 364,
										"nodeType": "StructuredDocumentation",
										"src": "1767:239:1",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 371,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2020:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 366,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2038:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2030:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 365,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2030:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2052:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 371,
												"src": "2044:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 367,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2044:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2029:31:1"
									},
									"returnParameters": {
										"id": 370,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2069:0:1"
									},
									"scope": 388,
									"src": "2011:59:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 372,
										"nodeType": "StructuredDocumentation",
										"src": "2076:223:1",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 379,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2313:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 374,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2332:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2324:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2324:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 376,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2346:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 379,
												"src": "2338:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2338:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2323:31:1"
									},
									"returnParameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2363:0:1"
									},
									"scope": 388,
									"src": "2304:60:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "2370:480:1",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."
									},
									"functionSelector": "36568abe",
									"id": 387,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "2864:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 385,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 382,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2885:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2877:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 381,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2877:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 384,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2899:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "2891:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 383,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2876:31:1"
									},
									"returnParameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:0:1"
									},
									"scope": 388,
									"src": "2855:62:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 389,
							"src": "209:2710:1",
							"usedErrors": [],
							"usedEvents": [
								327,
								336,
								345
							]
						}
					],
					"src": "94:2826:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							609
						],
						"Ownable": [
							501
						]
					},
					"id": 502,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 390,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 391,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 502,
							"sourceUnit": 610,
							"src": "127:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 393,
										"name": "Context",
										"nameLocations": [
											"683:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 609,
										"src": "683:7:2"
									},
									"id": 394,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:2"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 392,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:2",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 501,
							"linearizedBaseContracts": [
								501,
								609
							],
							"name": "Ownable",
							"nameLocation": "672:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 396,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 501,
									"src": "697:22:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 395,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 402,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 401,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "753:29:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 400,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 402,
												"src": "784:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 399,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:2"
									},
									"src": "726:84:2"
								},
								{
									"body": {
										"id": 411,
										"nodeType": "Block",
										"src": "926:49:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 407,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 591,
																"src": "955:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 406,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "936:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "936:32:2"
											}
										]
									},
									"documentation": {
										"id": 403,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:2",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 412,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:2"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:2"
									},
									"scope": 501,
									"src": "912:63:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 419,
										"nodeType": "Block",
										"src": "1084:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 415,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 443,
														"src": "1094:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 417,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:2"
											},
											{
												"id": 418,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:2"
											}
										]
									},
									"documentation": {
										"id": 413,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:2",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 420,
									"name": "onlyOwner",
									"nameLocation": "1072:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 414,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:2"
									},
									"src": "1063:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 428,
										"nodeType": "Block",
										"src": "1256:30:2",
										"statements": [
											{
												"expression": {
													"id": 426,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "1273:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 425,
												"id": 427,
												"nodeType": "Return",
												"src": "1266:13:2"
											}
										]
									},
									"documentation": {
										"id": 421,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:2",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 429,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:2"
									},
									"returnParameters": {
										"id": 425,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "1247:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:2"
									},
									"scope": 501,
									"src": "1201:85:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 442,
										"nodeType": "Block",
										"src": "1404:85:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 438,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 434,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 429,
																	"src": "1422:5:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 435,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 436,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 591,
																	"src": "1433:10:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 437,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 439,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 433,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 440,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 441,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:2"
											}
										]
									},
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:2",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 443,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 431,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:2"
									},
									"returnParameters": {
										"id": 432,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:2"
									},
									"scope": 501,
									"src": "1359:130:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 456,
										"nodeType": "Block",
										"src": "1878:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 452,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1915:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1907:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 450,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1907:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 453,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1907:10:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 449,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "1888:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 454,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1888:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 455,
												"nodeType": "ExpressionStatement",
												"src": "1888:30:2"
											}
										]
									},
									"documentation": {
										"id": 444,
										"nodeType": "StructuredDocumentation",
										"src": "1495:324:2",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 457,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 446,
												"name": "onlyOwner",
												"nameLocations": [
													"1868:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 420,
												"src": "1868:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1868:9:2"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1833:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 445,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1850:2:2"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1878:0:2"
									},
									"scope": 501,
									"src": "1824:101:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 479,
										"nodeType": "Block",
										"src": "2144:128:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 471,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 466,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 460,
																"src": "2162:8:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2182:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 468,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2174:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 467,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2174:7:2",
																		"typeDescriptions": {}
																	}
																},
																"id": 470,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2174:10:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2162:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 472,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2186:40:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 465,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2154:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2154:73:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 474,
												"nodeType": "ExpressionStatement",
												"src": "2154:73:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 476,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 460,
															"src": "2256:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 475,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 500,
														"src": "2237:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2237:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 478,
												"nodeType": "ExpressionStatement",
												"src": "2237:28:2"
											}
										]
									},
									"documentation": {
										"id": 458,
										"nodeType": "StructuredDocumentation",
										"src": "1931:138:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 480,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 463,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 462,
												"name": "onlyOwner",
												"nameLocations": [
													"2134:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 420,
												"src": "2134:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2134:9:2"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2083:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 461,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 460,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2109:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 480,
												"src": "2101:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 459,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2101:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2100:18:2"
									},
									"returnParameters": {
										"id": 464,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2144:0:2"
									},
									"scope": 501,
									"src": "2074:198:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 499,
										"nodeType": "Block",
										"src": "2489:124:2",
										"statements": [
											{
												"assignments": [
													487
												],
												"declarations": [
													{
														"constant": false,
														"id": 487,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2507:8:2",
														"nodeType": "VariableDeclaration",
														"scope": 499,
														"src": "2499:16:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 486,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2499:7:2",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 489,
												"initialValue": {
													"id": 488,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 396,
													"src": "2518:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2499:25:2"
											},
											{
												"expression": {
													"id": 492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 490,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 396,
														"src": "2534:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 491,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 483,
														"src": "2543:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2534:17:2",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 493,
												"nodeType": "ExpressionStatement",
												"src": "2534:17:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 495,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 487,
															"src": "2587:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 496,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 483,
															"src": "2597:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 494,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 402,
														"src": "2566:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2566:40:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 498,
												"nodeType": "EmitStatement",
												"src": "2561:45:2"
											}
										]
									},
									"documentation": {
										"id": 481,
										"nodeType": "StructuredDocumentation",
										"src": "2278:143:2",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 500,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2435:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 483,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2462:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 500,
												"src": "2454:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 482,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2454:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2453:18:2"
									},
									"returnParameters": {
										"id": 485,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2489:0:2"
									},
									"scope": 501,
									"src": "2426:187:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 502,
							"src": "654:1961:2",
							"usedErrors": [],
							"usedEvents": [
								402
							]
						}
					],
					"src": "102:2514:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							579
						]
					},
					"id": 580,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 503,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 504,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 579,
							"linearizedBaseContracts": [
								579
							],
							"name": "IERC20",
							"nameLocation": "212:6:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 505,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 513,
									"name": "Transfer",
									"nameLocation": "394:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 512,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 507,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "403:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 506,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 509,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "425:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 508,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 511,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 513,
												"src": "445:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 510,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:3"
									},
									"src": "388:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 514,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 522,
									"name": "Approval",
									"nameLocation": "625:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 521,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 516,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "634:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 515,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 518,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "657:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 517,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 520,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 522,
												"src": "682:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 519,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:3"
									},
									"src": "619:78:3"
								},
								{
									"documentation": {
										"id": 523,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 528,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 524,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:3"
									},
									"returnParameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 526,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 528,
												"src": "820:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 525,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:3"
									},
									"scope": 579,
									"src": "774:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 529,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "931:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 530,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:3"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 534,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "971:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 533,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:3"
									},
									"scope": 579,
									"src": "912:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 546,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 539,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1211:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 538,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 541,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1223:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:3"
									},
									"returnParameters": {
										"id": 545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 544,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 546,
												"src": "1257:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 543,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:3"
									},
									"scope": 579,
									"src": "1193:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 547,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 556,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 549,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1557:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 548,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1572:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 550,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:3"
									},
									"returnParameters": {
										"id": 555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 556,
												"src": "1612:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 553,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:3"
									},
									"scope": 579,
									"src": "1538:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 557,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 566,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 562,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 559,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "2291:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 558,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "2308:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 560,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:3"
									},
									"returnParameters": {
										"id": 565,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 564,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 566,
												"src": "2342:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 563,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:3"
									},
									"scope": 579,
									"src": "2274:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 567,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 578,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 569,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2676:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2668:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 568,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 571,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2690:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2682:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 570,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2682:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2702:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2694:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2694:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:42:3"
									},
									"returnParameters": {
										"id": 577,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 576,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 578,
												"src": "2728:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 575,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2728:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2727:6:3"
									},
									"scope": 579,
									"src": "2646:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 580,
							"src": "202:2534:3",
							"usedErrors": [],
							"usedEvents": [
								513,
								522
							]
						}
					],
					"src": "106:2631:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							609
						]
					},
					"id": 610,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 581,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:4"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 582,
								"nodeType": "StructuredDocumentation",
								"src": "126:496:4",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 609,
							"linearizedBaseContracts": [
								609
							],
							"name": "Context",
							"nameLocation": "641:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 590,
										"nodeType": "Block",
										"src": "717:34:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 587,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "734:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 588,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "738:6:4",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "734:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 586,
												"id": 589,
												"nodeType": "Return",
												"src": "727:17:4"
											}
										]
									},
									"id": 591,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "664:10:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 583,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "674:2:4"
									},
									"returnParameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 591,
												"src": "708:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "708:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "707:9:4"
									},
									"scope": 609,
									"src": "655:96:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 599,
										"nodeType": "Block",
										"src": "824:32:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 596,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "841:3:4",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 597,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "845:4:4",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "841:8:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 595,
												"id": 598,
												"nodeType": "Return",
												"src": "834:15:4"
											}
										]
									},
									"id": 600,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "766:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "774:2:4"
									},
									"returnParameters": {
										"id": 595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 600,
												"src": "808:14:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "808:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "807:16:4"
									},
									"scope": 609,
									"src": "757:99:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 607,
										"nodeType": "Block",
										"src": "934:25:4",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 605,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "951:1:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 604,
												"id": 606,
												"nodeType": "Return",
												"src": "944:8:4"
											}
										]
									},
									"id": 608,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "871:20:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "891:2:4"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 608,
												"src": "925:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 602,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "925:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "924:9:4"
									},
									"scope": 609,
									"src": "862:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 610,
							"src": "623:338:4",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:861:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/utils/Strings.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Strings.sol",
					"exportedSymbols": {
						"Math": [
							1740
						],
						"SignedMath": [
							1845
						],
						"Strings": [
							838
						]
					},
					"id": 839,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 611,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "101:23:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
							"file": "./math/Math.sol",
							"id": 612,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 839,
							"sourceUnit": 1741,
							"src": "126:25:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
							"file": "./math/SignedMath.sol",
							"id": 613,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 839,
							"sourceUnit": 1846,
							"src": "152:31:5",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Strings",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 614,
								"nodeType": "StructuredDocumentation",
								"src": "185:34:5",
								"text": " @dev String operations."
							},
							"fullyImplemented": true,
							"id": 838,
							"linearizedBaseContracts": [
								838
							],
							"name": "Strings",
							"nameLocation": "228:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 617,
									"mutability": "constant",
									"name": "_SYMBOLS",
									"nameLocation": "267:8:5",
									"nodeType": "VariableDeclaration",
									"scope": 838,
									"src": "242:54:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes16",
										"typeString": "bytes16"
									},
									"typeName": {
										"id": 615,
										"name": "bytes16",
										"nodeType": "ElementaryTypeName",
										"src": "242:7:5",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes16",
											"typeString": "bytes16"
										}
									},
									"value": {
										"hexValue": "30313233343536373839616263646566",
										"id": 616,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "278:18:5",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f",
											"typeString": "literal_string \"0123456789abcdef\""
										},
										"value": "0123456789abcdef"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 620,
									"mutability": "constant",
									"name": "_ADDRESS_LENGTH",
									"nameLocation": "325:15:5",
									"nodeType": "VariableDeclaration",
									"scope": 838,
									"src": "302:43:5",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 618,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "302:5:5",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"hexValue": "3230",
										"id": 619,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "343:2:5",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_20_by_1",
											"typeString": "int_const 20"
										},
										"value": "20"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 667,
										"nodeType": "Block",
										"src": "518:625:5",
										"statements": [
											{
												"id": 666,
												"nodeType": "UncheckedBlock",
												"src": "528:609:5",
												"statements": [
													{
														"assignments": [
															629
														],
														"declarations": [
															{
																"constant": false,
																"id": 629,
																"mutability": "mutable",
																"name": "length",
																"nameLocation": "560:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 666,
																"src": "552:14:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 628,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "552:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 636,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 635,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 632,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 623,
																		"src": "580:5:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 630,
																		"name": "Math",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1740,
																		"src": "569:4:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Math_$1740_$",
																			"typeString": "type(library Math)"
																		}
																	},
																	"id": 631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "574:5:5",
																	"memberName": "log10",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1577,
																	"src": "569:10:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																		"typeString": "function (uint256) pure returns (uint256)"
																	}
																},
																"id": 633,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "569:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "31",
																"id": 634,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "589:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															"src": "569:21:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "552:38:5"
													},
													{
														"assignments": [
															638
														],
														"declarations": [
															{
																"constant": false,
																"id": 638,
																"mutability": "mutable",
																"name": "buffer",
																"nameLocation": "618:6:5",
																"nodeType": "VariableDeclaration",
																"scope": 666,
																"src": "604:20:5",
																"stateVariable": false,
																"storageLocation": "memory",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string"
																},
																"typeName": {
																	"id": 637,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "604:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 643,
														"initialValue": {
															"arguments": [
																{
																	"id": 641,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 629,
																	"src": "638:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 640,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "NewExpression",
																"src": "627:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256) pure returns (string memory)"
																},
																"typeName": {
																	"id": 639,
																	"name": "string",
																	"nodeType": "ElementaryTypeName",
																	"src": "631:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_storage_ptr",
																		"typeString": "string"
																	}
																}
															},
															"id": 642,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "627:18:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "604:41:5"
													},
													{
														"assignments": [
															645
														],
														"declarations": [
															{
																"constant": false,
																"id": 645,
																"mutability": "mutable",
																"name": "ptr",
																"nameLocation": "667:3:5",
																"nodeType": "VariableDeclaration",
																"scope": 666,
																"src": "659:11:5",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 644,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "659:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 646,
														"nodeType": "VariableDeclarationStatement",
														"src": "659:11:5"
													},
													{
														"AST": {
															"nativeSrc": "740:67:5",
															"nodeType": "YulBlock",
															"src": "740:67:5",
															"statements": [
																{
																	"nativeSrc": "758:35:5",
																	"nodeType": "YulAssignment",
																	"src": "758:35:5",
																	"value": {
																		"arguments": [
																			{
																				"name": "buffer",
																				"nativeSrc": "769:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "769:6:5"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "781:2:5",
																						"nodeType": "YulLiteral",
																						"src": "781:2:5",
																						"type": "",
																						"value": "32"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "785:6:5",
																						"nodeType": "YulIdentifier",
																						"src": "785:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "777:3:5",
																					"nodeType": "YulIdentifier",
																					"src": "777:3:5"
																				},
																				"nativeSrc": "777:15:5",
																				"nodeType": "YulFunctionCall",
																				"src": "777:15:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "765:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "765:3:5"
																		},
																		"nativeSrc": "765:28:5",
																		"nodeType": "YulFunctionCall",
																		"src": "765:28:5"
																	},
																	"variableNames": [
																		{
																			"name": "ptr",
																			"nativeSrc": "758:3:5",
																			"nodeType": "YulIdentifier",
																			"src": "758:3:5"
																		}
																	]
																}
															]
														},
														"documentation": "@solidity memory-safe-assembly",
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 638,
																"isOffset": false,
																"isSlot": false,
																"src": "769:6:5",
																"valueSize": 1
															},
															{
																"declaration": 629,
																"isOffset": false,
																"isSlot": false,
																"src": "785:6:5",
																"valueSize": 1
															},
															{
																"declaration": 645,
																"isOffset": false,
																"isSlot": false,
																"src": "758:3:5",
																"valueSize": 1
															}
														],
														"id": 647,
														"nodeType": "InlineAssembly",
														"src": "731:76:5"
													},
													{
														"body": {
															"id": 662,
															"nodeType": "Block",
															"src": "833:267:5",
															"statements": [
																{
																	"expression": {
																		"id": 650,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "--",
																		"prefix": false,
																		"src": "851:5:5",
																		"subExpression": {
																			"id": 649,
																			"name": "ptr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 645,
																			"src": "851:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 651,
																	"nodeType": "ExpressionStatement",
																	"src": "851:5:5"
																},
																{
																	"AST": {
																		"nativeSrc": "934:84:5",
																		"nodeType": "YulBlock",
																		"src": "934:84:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "ptr",
																							"nativeSrc": "964:3:5",
																							"nodeType": "YulIdentifier",
																							"src": "964:3:5"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "value",
																											"nativeSrc": "978:5:5",
																											"nodeType": "YulIdentifier",
																											"src": "978:5:5"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "985:2:5",
																											"nodeType": "YulLiteral",
																											"src": "985:2:5",
																											"type": "",
																											"value": "10"
																										}
																									],
																									"functionName": {
																										"name": "mod",
																										"nativeSrc": "974:3:5",
																										"nodeType": "YulIdentifier",
																										"src": "974:3:5"
																									},
																									"nativeSrc": "974:14:5",
																									"nodeType": "YulFunctionCall",
																									"src": "974:14:5"
																								},
																								{
																									"name": "_SYMBOLS",
																									"nativeSrc": "990:8:5",
																									"nodeType": "YulIdentifier",
																									"src": "990:8:5"
																								}
																							],
																							"functionName": {
																								"name": "byte",
																								"nativeSrc": "969:4:5",
																								"nodeType": "YulIdentifier",
																								"src": "969:4:5"
																							},
																							"nativeSrc": "969:30:5",
																							"nodeType": "YulFunctionCall",
																							"src": "969:30:5"
																						}
																					],
																					"functionName": {
																						"name": "mstore8",
																						"nativeSrc": "956:7:5",
																						"nodeType": "YulIdentifier",
																						"src": "956:7:5"
																					},
																					"nativeSrc": "956:44:5",
																					"nodeType": "YulFunctionCall",
																					"src": "956:44:5"
																				},
																				"nativeSrc": "956:44:5",
																				"nodeType": "YulExpressionStatement",
																				"src": "956:44:5"
																			}
																		]
																	},
																	"documentation": "@solidity memory-safe-assembly",
																	"evmVersion": "cancun",
																	"externalReferences": [
																		{
																			"declaration": 617,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "990:8:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 645,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "964:3:5",
																			"valueSize": 1
																		},
																		{
																			"declaration": 623,
																			"isOffset": false,
																			"isSlot": false,
																			"src": "978:5:5",
																			"valueSize": 1
																		}
																	],
																	"id": 652,
																	"nodeType": "InlineAssembly",
																	"src": "925:93:5"
																},
																{
																	"expression": {
																		"id": 655,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 653,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "1035:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"hexValue": "3130",
																			"id": 654,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1044:2:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10_by_1",
																				"typeString": "int_const 10"
																			},
																			"value": "10"
																		},
																		"src": "1035:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 656,
																	"nodeType": "ExpressionStatement",
																	"src": "1035:11:5"
																},
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 657,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 623,
																			"src": "1068:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 658,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1077:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1068:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 661,
																	"nodeType": "IfStatement",
																	"src": "1064:21:5",
																	"trueBody": {
																		"id": 660,
																		"nodeType": "Break",
																		"src": "1080:5:5"
																	}
																}
															]
														},
														"condition": {
															"hexValue": "74727565",
															"id": 648,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "827:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														},
														"id": 663,
														"nodeType": "WhileStatement",
														"src": "820:280:5"
													},
													{
														"expression": {
															"id": 664,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 638,
															"src": "1120:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 627,
														"id": 665,
														"nodeType": "Return",
														"src": "1113:13:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 621,
										"nodeType": "StructuredDocumentation",
										"src": "352:90:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` decimal representation."
									},
									"id": 668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "456:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 624,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 623,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "473:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "465:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 622,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "465:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "464:15:5"
									},
									"returnParameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 668,
												"src": "503:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 625,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:15:5"
									},
									"scope": 838,
									"src": "447:696:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 695,
										"nodeType": "Block",
										"src": "1313:103:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 682,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 680,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 671,
																			"src": "1354:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "<",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 681,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1362:1:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1354:9:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"hexValue": "",
																		"id": 684,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1372:2:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																			"typeString": "literal_string \"\""
																		},
																		"value": ""
																	},
																	"id": 685,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1354:20:5",
																	"trueExpression": {
																		"hexValue": "2d",
																		"id": 683,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1366:3:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_d3b8281179950f98149eefdb158d0e1acb56f56e8e343aa9fefafa7e36959561",
																			"typeString": "literal_string \"-\""
																		},
																		"value": "-"
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"arguments": [
																		{
																			"arguments": [
																				{
																					"id": 689,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 671,
																					"src": "1400:5:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_int256",
																						"typeString": "int256"
																					}
																				],
																				"expression": {
																					"id": 687,
																					"name": "SignedMath",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1845,
																					"src": "1385:10:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_SignedMath_$1845_$",
																						"typeString": "type(library SignedMath)"
																					}
																				},
																				"id": 688,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "1396:3:5",
																				"memberName": "abs",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1844,
																				"src": "1385:14:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_internal_pure$_t_int256_$returns$_t_uint256_$",
																					"typeString": "function (int256) pure returns (uint256)"
																				}
																			},
																			"id": 690,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1385:21:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 686,
																		"name": "toString",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			668,
																			696
																		],
																		"referencedDeclaration": 668,
																		"src": "1376:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
																			"typeString": "function (uint256) pure returns (string memory)"
																		}
																	},
																	"id": 691,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1376:31:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																],
																"expression": {
																	"id": 678,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1337:3:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 679,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1341:12:5",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "1337:16:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 692,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1337:71:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 677,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1330:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 676,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "1330:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1330:79:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 675,
												"id": 694,
												"nodeType": "Return",
												"src": "1323:86:5"
											}
										]
									},
									"documentation": {
										"id": 669,
										"nodeType": "StructuredDocumentation",
										"src": "1149:89:5",
										"text": " @dev Converts a `int256` to its ASCII `string` decimal representation."
									},
									"id": 696,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toString",
									"nameLocation": "1252:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1268:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1261:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 670,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1261:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1260:14:5"
									},
									"returnParameters": {
										"id": 675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 674,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 696,
												"src": "1298:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 673,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1298:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1297:15:5"
									},
									"scope": 838,
									"src": "1243:173:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 715,
										"nodeType": "Block",
										"src": "1595:100:5",
										"statements": [
											{
												"id": 714,
												"nodeType": "UncheckedBlock",
												"src": "1605:84:5",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"id": 705,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 699,
																	"src": "1648:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 711,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"id": 708,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 699,
																				"src": "1667:5:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"expression": {
																				"id": 706,
																				"name": "Math",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1740,
																				"src": "1655:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_Math_$1740_$",
																					"typeString": "type(library Math)"
																				}
																			},
																			"id": 707,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "1660:6:5",
																			"memberName": "log256",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1700,
																			"src": "1655:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																				"typeString": "function (uint256) pure returns (uint256)"
																			}
																		},
																		"id": 709,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1655:18:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "31",
																		"id": 710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1676:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	},
																	"src": "1655:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 704,
																"name": "toHexString",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	716,
																	792,
																	812
																],
																"referencedDeclaration": 792,
																"src": "1636:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
																	"typeString": "function (uint256,uint256) pure returns (string memory)"
																}
															},
															"id": 712,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1636:42:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"functionReturnParameters": 703,
														"id": 713,
														"nodeType": "Return",
														"src": "1629:49:5"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 697,
										"nodeType": "StructuredDocumentation",
										"src": "1422:94:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."
									},
									"id": 716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1530:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 700,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 699,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1550:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1542:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 698,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1542:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1541:15:5"
									},
									"returnParameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 716,
												"src": "1580:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 701,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1580:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:15:5"
									},
									"scope": 838,
									"src": "1521:174:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 791,
										"nodeType": "Block",
										"src": "1908:347:5",
										"statements": [
											{
												"assignments": [
													727
												],
												"declarations": [
													{
														"constant": false,
														"id": 727,
														"mutability": "mutable",
														"name": "buffer",
														"nameLocation": "1931:6:5",
														"nodeType": "VariableDeclaration",
														"scope": 791,
														"src": "1918:19:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 726,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1918:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 736,
												"initialValue": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 732,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 730,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1950:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 731,
																	"name": "length",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 721,
																	"src": "1954:6:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1950:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"hexValue": "32",
																"id": 733,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1963:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "1950:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 729,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "NewExpression",
														"src": "1940:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (uint256) pure returns (bytes memory)"
														},
														"typeName": {
															"id": 728,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1944:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														}
													},
													"id": 735,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1940:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1918:47:5"
											},
											{
												"expression": {
													"id": 741,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 737,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "1975:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 739,
														"indexExpression": {
															"hexValue": "30",
															"id": 738,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1982:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1975:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 740,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1987:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d",
															"typeString": "literal_string \"0\""
														},
														"value": "0"
													},
													"src": "1975:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 742,
												"nodeType": "ExpressionStatement",
												"src": "1975:15:5"
											},
											{
												"expression": {
													"id": 747,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 743,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "2000:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 745,
														"indexExpression": {
															"hexValue": "31",
															"id": 744,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2007:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2000:9:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes1",
															"typeString": "bytes1"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "78",
														"id": 746,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2012:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83",
															"typeString": "literal_string \"x\""
														},
														"value": "x"
													},
													"src": "2000:15:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes1",
														"typeString": "bytes1"
													}
												},
												"id": 748,
												"nodeType": "ExpressionStatement",
												"src": "2000:15:5"
											},
											{
												"body": {
													"id": 777,
													"nodeType": "Block",
													"src": "2070:83:5",
													"statements": [
														{
															"expression": {
																"id": 771,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 763,
																		"name": "buffer",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 727,
																		"src": "2084:6:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	},
																	"id": 765,
																	"indexExpression": {
																		"id": 764,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 750,
																		"src": "2091:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "2084:9:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"baseExpression": {
																		"id": 766,
																		"name": "_SYMBOLS",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 617,
																		"src": "2096:8:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes16",
																			"typeString": "bytes16"
																		}
																	},
																	"id": 770,
																	"indexExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 767,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 719,
																			"src": "2105:5:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&",
																		"rightExpression": {
																			"hexValue": "307866",
																			"id": 768,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "2113:3:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_15_by_1",
																				"typeString": "int_const 15"
																			},
																			"value": "0xf"
																		},
																		"src": "2105:11:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2096:21:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes1",
																		"typeString": "bytes1"
																	}
																},
																"src": "2084:33:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes1",
																	"typeString": "bytes1"
																}
															},
															"id": 772,
															"nodeType": "ExpressionStatement",
															"src": "2084:33:5"
														},
														{
															"expression": {
																"id": 775,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 773,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 719,
																	"src": "2131:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": ">>=",
																"rightHandSide": {
																	"hexValue": "34",
																	"id": 774,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2141:1:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "2131:11:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 776,
															"nodeType": "ExpressionStatement",
															"src": "2131:11:5"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 757,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 750,
														"src": "2058:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "31",
														"id": 758,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2062:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "2058:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 778,
												"initializationExpression": {
													"assignments": [
														750
													],
													"declarations": [
														{
															"constant": false,
															"id": 750,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2038:1:5",
															"nodeType": "VariableDeclaration",
															"scope": 778,
															"src": "2030:9:5",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 749,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "2030:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 756,
													"initialValue": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"hexValue": "32",
																"id": 751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2042:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 752,
																"name": "length",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 721,
																"src": "2046:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2042:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 754,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2055:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "2042:14:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "2030:26:5"
												},
												"isSimpleCounterLoop": false,
												"loopExpression": {
													"expression": {
														"id": 761,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "--",
														"prefix": true,
														"src": "2065:3:5",
														"subExpression": {
															"id": 760,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 750,
															"src": "2067:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 762,
													"nodeType": "ExpressionStatement",
													"src": "2065:3:5"
												},
												"nodeType": "ForStatement",
												"src": "2025:128:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 782,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 780,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 719,
																"src": "2170:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 781,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2179:1:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2170:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "537472696e67733a20686578206c656e67746820696e73756666696369656e74",
															"id": 783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2182:34:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															},
															"value": "Strings: hex length insufficient"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2",
																"typeString": "literal_string \"Strings: hex length insufficient\""
															}
														],
														"id": 779,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2162:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 784,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2162:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 785,
												"nodeType": "ExpressionStatement",
												"src": "2162:55:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 788,
															"name": "buffer",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 727,
															"src": "2241:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 787,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2234:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_string_storage_ptr_$",
															"typeString": "type(string storage pointer)"
														},
														"typeName": {
															"id": 786,
															"name": "string",
															"nodeType": "ElementaryTypeName",
															"src": "2234:6:5",
															"typeDescriptions": {}
														}
													},
													"id": 789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2234:14:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 725,
												"id": 790,
												"nodeType": "Return",
												"src": "2227:21:5"
											}
										]
									},
									"documentation": {
										"id": 717,
										"nodeType": "StructuredDocumentation",
										"src": "1701:112:5",
										"text": " @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."
									},
									"id": 792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "1827:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1847:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1839:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1839:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "length",
												"nameLocation": "1862:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1854:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1854:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1838:31:5"
									},
									"returnParameters": {
										"id": 725,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 724,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 792,
												"src": "1893:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 723,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1893:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1892:15:5"
									},
									"scope": 838,
									"src": "1818:437:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "2480:76:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 805,
																			"name": "addr",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 795,
																			"src": "2525:4:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		],
																		"id": 804,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2517:7:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint160_$",
																			"typeString": "type(uint160)"
																		},
																		"typeName": {
																			"id": 803,
																			"name": "uint160",
																			"nodeType": "ElementaryTypeName",
																			"src": "2517:7:5",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 806,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2517:13:5",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint160",
																		"typeString": "uint160"
																	}
																],
																"id": 802,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2509:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 801,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2509:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2509:22:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 808,
															"name": "_ADDRESS_LENGTH",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 620,
															"src": "2533:15:5",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														],
														"id": 800,
														"name": "toHexString",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															716,
															792,
															812
														],
														"referencedDeclaration": 792,
														"src": "2497:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$",
															"typeString": "function (uint256,uint256) pure returns (string memory)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2497:52:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_string_memory_ptr",
														"typeString": "string memory"
													}
												},
												"functionReturnParameters": 799,
												"id": 810,
												"nodeType": "Return",
												"src": "2490:59:5"
											}
										]
									},
									"documentation": {
										"id": 793,
										"nodeType": "StructuredDocumentation",
										"src": "2261:141:5",
										"text": " @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toHexString",
									"nameLocation": "2416:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 796,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 795,
												"mutability": "mutable",
												"name": "addr",
												"nameLocation": "2436:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "2428:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2428:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2427:14:5"
									},
									"returnParameters": {
										"id": 799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 798,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "2465:13:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2465:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:5"
									},
									"scope": 838,
									"src": "2407:149:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 836,
										"nodeType": "Block",
										"src": "2711:66:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													},
													"id": 834,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 825,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 815,
																		"src": "2744:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 824,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2738:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 823,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2738:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 826,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2738:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 822,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2728:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2728:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"arguments": [
																	{
																		"id": 831,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 817,
																		"src": "2767:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_string_memory_ptr",
																			"typeString": "string memory"
																		}
																	],
																	"id": 830,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2761:5:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																		"typeString": "type(bytes storage pointer)"
																	},
																	"typeName": {
																		"id": 829,
																		"name": "bytes",
																		"nodeType": "ElementaryTypeName",
																		"src": "2761:5:5",
																		"typeDescriptions": {}
																	}
																},
																"id": 832,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2761:8:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 828,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967288,
															"src": "2751:9:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2751:19:5",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "2728:42:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 821,
												"id": 835,
												"nodeType": "Return",
												"src": "2721:49:5"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "2562:66:5",
										"text": " @dev Returns true if the two strings are equal."
									},
									"id": 837,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "equal",
									"nameLocation": "2642:5:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2662:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "2648:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 814,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2648:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2679:1:5",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "2665:15:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 816,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2665:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2647:34:5"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 837,
												"src": "2705:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 819,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2705:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2704:6:5"
									},
									"scope": 838,
									"src": "2633:144:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 839,
							"src": "220:2559:5",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:2679:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/utils/introspection/ERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/ERC165.sol",
					"exportedSymbols": {
						"ERC165": [
							862
						],
						"IERC165": [
							874
						]
					},
					"id": 863,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 840,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "99:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 841,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 863,
							"sourceUnit": 875,
							"src": "124:23:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 843,
										"name": "IERC165",
										"nameLocations": [
											"754:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 874,
										"src": "754:7:6"
									},
									"id": 844,
									"nodeType": "InheritanceSpecifier",
									"src": "754:7:6"
								}
							],
							"canonicalName": "ERC165",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 842,
								"nodeType": "StructuredDocumentation",
								"src": "149:576:6",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."
							},
							"fullyImplemented": true,
							"id": 862,
							"linearizedBaseContracts": [
								862,
								874
							],
							"name": "ERC165",
							"nameLocation": "744:6:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"baseFunctions": [
										873
									],
									"body": {
										"id": 860,
										"nodeType": "Block",
										"src": "920:64:6",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 858,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 853,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 847,
														"src": "937:11:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 855,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 874,
																	"src": "957:7:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$874_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$874_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 854,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "952:4:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 856,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "952:13:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$874",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 857,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "966:11:6",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "952:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "937:40:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 852,
												"id": 859,
												"nodeType": "Return",
												"src": "930:47:6"
											}
										]
									},
									"documentation": {
										"id": 845,
										"nodeType": "StructuredDocumentation",
										"src": "768:56:6",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 861,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "838:17:6",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 849,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "896:8:6"
									},
									"parameters": {
										"id": 848,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 847,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "863:11:6",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "856:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 846,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "856:6:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "855:20:6"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 861,
												"src": "914:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 850,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "914:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:6:6"
									},
									"scope": 862,
									"src": "829:155:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 863,
							"src": "726:260:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "99:888:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							874
						]
					},
					"id": 875,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 864,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:7",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 874,
							"linearizedBaseContracts": [
								874
							],
							"name": "IERC165",
							"nameLocation": "415:7:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:7",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 873,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 869,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "801:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 867,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:7"
									},
									"returnParameters": {
										"id": 872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 871,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 873,
												"src": "844:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 870,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:7"
									},
									"scope": 874,
									"src": "774:76:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 875,
							"src": "405:447:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:753:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							1740
						]
					},
					"id": 1741,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 876,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 877,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:8",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1740,
							"linearizedBaseContracts": [
								1740
							],
							"name": "Math",
							"nameLocation": "210:4:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Math.Rounding",
									"id": 881,
									"members": [
										{
											"id": 878,
											"name": "Down",
											"nameLocation": "245:4:8",
											"nodeType": "EnumValue",
											"src": "245:4:8"
										},
										{
											"id": 879,
											"name": "Up",
											"nameLocation": "287:2:8",
											"nodeType": "EnumValue",
											"src": "287:2:8"
										},
										{
											"id": 880,
											"name": "Zero",
											"nameLocation": "318:4:8",
											"nodeType": "EnumValue",
											"src": "318:4:8"
										}
									],
									"name": "Rounding",
									"nameLocation": "226:8:8",
									"nodeType": "EnumDefinition",
									"src": "221:122:8"
								},
								{
									"body": {
										"id": 898,
										"nodeType": "Block",
										"src": "480:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 893,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 891,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 884,
															"src": "497:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 892,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 886,
															"src": "501:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "497:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 895,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 886,
														"src": "509:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "497:13:8",
													"trueExpression": {
														"id": 894,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 884,
														"src": "505:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 890,
												"id": 897,
												"nodeType": "Return",
												"src": "490:20:8"
											}
										]
									},
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "349:59:8",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 899,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "422:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "434:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "426:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 883,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "445:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "437:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "437:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:22:8"
									},
									"returnParameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 899,
												"src": "471:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "471:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "470:9:8"
									},
									"scope": 1740,
									"src": "413:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 916,
										"nodeType": "Block",
										"src": "655:37:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 909,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 902,
															"src": "672:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 910,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 904,
															"src": "676:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "672:5:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 913,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "684:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 914,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "672:13:8",
													"trueExpression": {
														"id": 912,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 902,
														"src": "680:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 908,
												"id": 915,
												"nodeType": "Return",
												"src": "665:20:8"
											}
										]
									},
									"documentation": {
										"id": 900,
										"nodeType": "StructuredDocumentation",
										"src": "523:60:8",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 917,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "597:3:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 902,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "601:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 901,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 904,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "612:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:8"
									},
									"returnParameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 907,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "646:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 906,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:9:8"
									},
									"scope": 1740,
									"src": "588:104:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 939,
										"nodeType": "Block",
										"src": "876:82:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 927,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 920,
																	"src": "931:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 928,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 922,
																	"src": "935:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "931:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 930,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "930:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 933,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 931,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 920,
																		"src": "941:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 932,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 922,
																		"src": "945:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "941:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 934,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "940:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 935,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "950:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "940:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "930:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 926,
												"id": 938,
												"nodeType": "Return",
												"src": "923:28:8"
											}
										]
									},
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "698:102:8",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 940,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "814:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "830:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "822:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "822:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "841:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "833:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "833:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "821:22:8"
									},
									"returnParameters": {
										"id": 926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 925,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "867:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 924,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "867:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "866:9:8"
									},
									"scope": 1740,
									"src": "805:153:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 964,
										"nodeType": "Block",
										"src": "1228:123:8",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 952,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 950,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 943,
															"src": "1316:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1321:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "1316:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 961,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 959,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 956,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 954,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 943,
																			"src": "1330:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 955,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1334:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "1330:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 957,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1329:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 958,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 945,
																"src": "1339:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1329:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 960,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1343:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "1329:15:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 962,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "1316:28:8",
													"trueExpression": {
														"hexValue": "30",
														"id": 953,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1325:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 949,
												"id": 963,
												"nodeType": "Return",
												"src": "1309:35:8"
											}
										]
									},
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "964:188:8",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 965,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1166:7:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1182:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1174:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1174:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1193:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1185:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 944,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1185:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1173:22:8"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "1219:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 947,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1219:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1218:9:8"
									},
									"scope": 1740,
									"src": "1157:194:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1087,
										"nodeType": "Block",
										"src": "1765:4115:8",
										"statements": [
											{
												"id": 1086,
												"nodeType": "UncheckedBlock",
												"src": "1775:4099:8",
												"statements": [
													{
														"assignments": [
															978
														],
														"declarations": [
															{
																"constant": false,
																"id": 978,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "2104:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1086,
																"src": "2096:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 977,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2096:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 979,
														"nodeType": "VariableDeclarationStatement",
														"src": "2096:13:8"
													},
													{
														"assignments": [
															981
														],
														"declarations": [
															{
																"constant": false,
																"id": 981,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "2176:5:8",
																"nodeType": "VariableDeclaration",
																"scope": 1086,
																"src": "2168:13:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 980,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2168:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 982,
														"nodeType": "VariableDeclarationStatement",
														"src": "2168:13:8"
													},
													{
														"AST": {
															"nativeSrc": "2248:157:8",
															"nodeType": "YulBlock",
															"src": "2248:157:8",
															"statements": [
																{
																	"nativeSrc": "2266:30:8",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2266:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2283:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2283:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2286:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2286:1:8"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "2293:1:8",
																						"nodeType": "YulLiteral",
																						"src": "2293:1:8",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "2289:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2289:3:8"
																				},
																				"nativeSrc": "2289:6:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2289:6:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "2276:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "2276:6:8"
																		},
																		"nativeSrc": "2276:20:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2276:20:8"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "2270:2:8",
																			"nodeType": "YulTypedName",
																			"src": "2270:2:8",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2313:18:8",
																	"nodeType": "YulAssignment",
																	"src": "2313:18:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "2326:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2326:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "2329:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "2329:1:8"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "2322:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2322:3:8"
																		},
																		"nativeSrc": "2322:9:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2322:9:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "2313:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2313:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "2348:43:8",
																	"nodeType": "YulAssignment",
																	"src": "2348:43:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2365:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2365:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2369:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2369:5:8"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2361:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "2361:3:8"
																				},
																				"nativeSrc": "2361:14:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2361:14:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "2380:2:8",
																						"nodeType": "YulIdentifier",
																						"src": "2380:2:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "2384:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "2384:5:8"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "2377:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "2377:2:8"
																				},
																				"nativeSrc": "2377:13:8",
																				"nodeType": "YulFunctionCall",
																				"src": "2377:13:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2357:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "2357:3:8"
																		},
																		"nativeSrc": "2357:34:8",
																		"nodeType": "YulFunctionCall",
																		"src": "2357:34:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "2348:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "2348:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "2313:5:8",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "2369:5:8",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "2384:5:8",
																"valueSize": 1
															},
															{
																"declaration": 981,
																"isOffset": false,
																"isSlot": false,
																"src": "2348:5:8",
																"valueSize": 1
															},
															{
																"declaration": 968,
																"isOffset": false,
																"isSlot": false,
																"src": "2283:1:8",
																"valueSize": 1
															},
															{
																"declaration": 968,
																"isOffset": false,
																"isSlot": false,
																"src": "2326:1:8",
																"valueSize": 1
															},
															{
																"declaration": 970,
																"isOffset": false,
																"isSlot": false,
																"src": "2286:1:8",
																"valueSize": 1
															},
															{
																"declaration": 970,
																"isOffset": false,
																"isSlot": false,
																"src": "2329:1:8",
																"valueSize": 1
															}
														],
														"id": 983,
														"nodeType": "InlineAssembly",
														"src": "2239:166:8"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 984,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 981,
																"src": "2486:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2495:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2486:10:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 992,
														"nodeType": "IfStatement",
														"src": "2482:368:8",
														"trueBody": {
															"id": 991,
															"nodeType": "Block",
															"src": "2498:352:8",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 987,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 978,
																			"src": "2816:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 988,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "2824:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2816:19:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 976,
																	"id": 990,
																	"nodeType": "Return",
																	"src": "2809:26:8"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 996,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 994,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "2960:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": ">",
																	"rightExpression": {
																		"id": 995,
																		"name": "prod1",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 981,
																		"src": "2974:5:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2960:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																{
																	"hexValue": "4d6174683a206d756c446976206f766572666c6f77",
																	"id": 997,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2981:23:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	},
																	"value": "Math: mulDiv overflow"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_stringliteral_d87093691d63b122ac2c14d1b11554b287e2431cf2b03550b3be7cffb0f86851",
																		"typeString": "literal_string \"Math: mulDiv overflow\""
																	}
																],
																"id": 993,
																"name": "require",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	4294967278,
																	4294967278,
																	4294967278
																],
																"referencedDeclaration": 4294967278,
																"src": "2952:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																	"typeString": "function (bool,string memory) pure"
																}
															},
															"id": 998,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2952:53:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 999,
														"nodeType": "ExpressionStatement",
														"src": "2952:53:8"
													},
													{
														"assignments": [
															1001
														],
														"declarations": [
															{
																"constant": false,
																"id": 1001,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "3269:9:8",
																"nodeType": "VariableDeclaration",
																"scope": 1086,
																"src": "3261:17:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1000,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3261:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1002,
														"nodeType": "VariableDeclarationStatement",
														"src": "3261:17:8"
													},
													{
														"AST": {
															"nativeSrc": "3301:291:8",
															"nodeType": "YulBlock",
															"src": "3301:291:8",
															"statements": [
																{
																	"nativeSrc": "3370:38:8",
																	"nodeType": "YulAssignment",
																	"src": "3370:38:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "3390:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3390:1:8"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "3393:1:8",
																				"nodeType": "YulIdentifier",
																				"src": "3393:1:8"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "3396:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "3396:11:8"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "3383:6:8",
																			"nodeType": "YulIdentifier",
																			"src": "3383:6:8"
																		},
																		"nativeSrc": "3383:25:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3383:25:8"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "3370:9:8",
																			"nodeType": "YulIdentifier",
																			"src": "3370:9:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3490:41:8",
																	"nodeType": "YulAssignment",
																	"src": "3490:41:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "3503:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3503:5:8"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "3513:9:8",
																						"nodeType": "YulIdentifier",
																						"src": "3513:9:8"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "3524:5:8",
																						"nodeType": "YulIdentifier",
																						"src": "3524:5:8"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "3510:2:8",
																					"nodeType": "YulIdentifier",
																					"src": "3510:2:8"
																				},
																				"nativeSrc": "3510:20:8",
																				"nodeType": "YulFunctionCall",
																				"src": "3510:20:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3499:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3499:3:8"
																		},
																		"nativeSrc": "3499:32:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3499:32:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "3490:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3490:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "3548:30:8",
																	"nodeType": "YulAssignment",
																	"src": "3548:30:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "3561:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "3561:5:8"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "3568:9:8",
																				"nodeType": "YulIdentifier",
																				"src": "3568:9:8"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3557:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "3557:3:8"
																		},
																		"nativeSrc": "3557:21:8",
																		"nodeType": "YulFunctionCall",
																		"src": "3557:21:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "3548:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "3548:5:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 972,
																"isOffset": false,
																"isSlot": false,
																"src": "3396:11:8",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "3524:5:8",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "3548:5:8",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "3561:5:8",
																"valueSize": 1
															},
															{
																"declaration": 981,
																"isOffset": false,
																"isSlot": false,
																"src": "3490:5:8",
																"valueSize": 1
															},
															{
																"declaration": 981,
																"isOffset": false,
																"isSlot": false,
																"src": "3503:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "3370:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "3513:9:8",
																"valueSize": 1
															},
															{
																"declaration": 1001,
																"isOffset": false,
																"isSlot": false,
																"src": "3568:9:8",
																"valueSize": 1
															},
															{
																"declaration": 968,
																"isOffset": false,
																"isSlot": false,
																"src": "3390:1:8",
																"valueSize": 1
															},
															{
																"declaration": 970,
																"isOffset": false,
																"isSlot": false,
																"src": "3393:1:8",
																"valueSize": 1
															}
														],
														"id": 1003,
														"nodeType": "InlineAssembly",
														"src": "3292:300:8"
													},
													{
														"assignments": [
															1005
														],
														"declarations": [
															{
																"constant": false,
																"id": 1005,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "3907:4:8",
																"nodeType": "VariableDeclaration",
																"scope": 1086,
																"src": "3899:12:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1004,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "3899:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1013,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1012,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1006,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 972,
																"src": "3914:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1010,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1008,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "UnaryOperation",
																			"operator": "~",
																			"prefix": true,
																			"src": "3929:12:8",
																			"subExpression": {
																				"id": 1007,
																				"name": "denominator",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 972,
																				"src": "3930:11:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "+",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1009,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3944:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3929:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1011,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3928:18:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3914:32:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "3899:47:8"
													},
													{
														"AST": {
															"nativeSrc": "3969:362:8",
															"nodeType": "YulBlock",
															"src": "3969:362:8",
															"statements": [
																{
																	"nativeSrc": "4034:37:8",
																	"nodeType": "YulAssignment",
																	"src": "4034:37:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "4053:11:8",
																				"nodeType": "YulIdentifier",
																				"src": "4053:11:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4066:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4066:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4049:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:8"
																		},
																		"nativeSrc": "4049:22:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4049:22:8"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "4034:11:8",
																			"nodeType": "YulIdentifier",
																			"src": "4034:11:8"
																		}
																	]
																},
																{
																	"nativeSrc": "4138:25:8",
																	"nodeType": "YulAssignment",
																	"src": "4138:25:8",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "4151:5:8",
																				"nodeType": "YulIdentifier",
																				"src": "4151:5:8"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "4158:4:8",
																				"nodeType": "YulIdentifier",
																				"src": "4158:4:8"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "4147:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4147:3:8"
																		},
																		"nativeSrc": "4147:16:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4147:16:8"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "4138:5:8",
																			"nodeType": "YulIdentifier",
																			"src": "4138:5:8"
																		}
																	]
																},
																{
																	"nativeSrc": "4278:39:8",
																	"nodeType": "YulAssignment",
																	"src": "4278:39:8",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4298:1:8",
																								"nodeType": "YulLiteral",
																								"src": "4298:1:8",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "4301:4:8",
																								"nodeType": "YulIdentifier",
																								"src": "4301:4:8"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "4294:3:8",
																							"nodeType": "YulIdentifier",
																							"src": "4294:3:8"
																						},
																						"nativeSrc": "4294:12:8",
																						"nodeType": "YulFunctionCall",
																						"src": "4294:12:8"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "4308:4:8",
																						"nodeType": "YulIdentifier",
																						"src": "4308:4:8"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "4290:3:8",
																					"nodeType": "YulIdentifier",
																					"src": "4290:3:8"
																				},
																				"nativeSrc": "4290:23:8",
																				"nodeType": "YulFunctionCall",
																				"src": "4290:23:8"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4315:1:8",
																				"nodeType": "YulLiteral",
																				"src": "4315:1:8",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4286:3:8",
																			"nodeType": "YulIdentifier",
																			"src": "4286:3:8"
																		},
																		"nativeSrc": "4286:31:8",
																		"nodeType": "YulFunctionCall",
																		"src": "4286:31:8"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "4278:4:8",
																			"nodeType": "YulIdentifier",
																			"src": "4278:4:8"
																		}
																	]
																}
															]
														},
														"evmVersion": "cancun",
														"externalReferences": [
															{
																"declaration": 972,
																"isOffset": false,
																"isSlot": false,
																"src": "4034:11:8",
																"valueSize": 1
															},
															{
																"declaration": 972,
																"isOffset": false,
																"isSlot": false,
																"src": "4053:11:8",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "4138:5:8",
																"valueSize": 1
															},
															{
																"declaration": 978,
																"isOffset": false,
																"isSlot": false,
																"src": "4151:5:8",
																"valueSize": 1
															},
															{
																"declaration": 1005,
																"isOffset": false,
																"isSlot": false,
																"src": "4066:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1005,
																"isOffset": false,
																"isSlot": false,
																"src": "4158:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1005,
																"isOffset": false,
																"isSlot": false,
																"src": "4278:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1005,
																"isOffset": false,
																"isSlot": false,
																"src": "4301:4:8",
																"valueSize": 1
															},
															{
																"declaration": 1005,
																"isOffset": false,
																"isSlot": false,
																"src": "4308:4:8",
																"valueSize": 1
															}
														],
														"id": 1014,
														"nodeType": "InlineAssembly",
														"src": "3960:371:8"
													},
													{
														"expression": {
															"id": 1019,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1015,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 978,
																"src": "4397:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1018,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1016,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 981,
																	"src": "4406:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1017,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1005,
																	"src": "4414:4:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4406:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4397:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1020,
														"nodeType": "ExpressionStatement",
														"src": "4397:21:8"
													},
													{
														"assignments": [
															1022
														],
														"declarations": [
															{
																"constant": false,
																"id": 1022,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "4744:7:8",
																"nodeType": "VariableDeclaration",
																"scope": 1086,
																"src": "4736:15:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1021,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4736:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1029,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1028,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1025,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1023,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "4755:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1024,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 972,
																			"src": "4759:11:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4755:15:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1026,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "4754:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1027,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4774:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "4754:21:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4736:39:8"
													},
													{
														"expression": {
															"id": 1036,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1030,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "4992:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1035,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1031,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5003:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1034,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1032,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "5007:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1033,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "5021:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5007:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5003:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4992:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1037,
														"nodeType": "ExpressionStatement",
														"src": "4992:36:8"
													},
													{
														"expression": {
															"id": 1044,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1038,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "5061:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1043,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5072:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1042,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1040,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "5076:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1041,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "5090:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5076:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5072:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5061:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1045,
														"nodeType": "ExpressionStatement",
														"src": "5061:36:8"
													},
													{
														"expression": {
															"id": 1052,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1046,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "5131:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1051,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1047,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5142:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1050,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1048,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "5146:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1049,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "5160:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5146:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5142:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5131:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1053,
														"nodeType": "ExpressionStatement",
														"src": "5131:36:8"
													},
													{
														"expression": {
															"id": 1060,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1054,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "5201:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1059,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1055,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5212:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1058,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1056,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "5216:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1057,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "5230:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5216:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5212:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5201:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1061,
														"nodeType": "ExpressionStatement",
														"src": "5201:36:8"
													},
													{
														"expression": {
															"id": 1068,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1062,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "5271:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1067,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1063,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5282:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1066,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1064,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "5286:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1065,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "5300:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5286:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5282:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5271:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1069,
														"nodeType": "ExpressionStatement",
														"src": "5271:36:8"
													},
													{
														"expression": {
															"id": 1076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1070,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1022,
																"src": "5342:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1075,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1071,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5353:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1074,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1072,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 972,
																		"src": "5357:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1073,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1022,
																		"src": "5371:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5357:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5353:25:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5342:36:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1077,
														"nodeType": "ExpressionStatement",
														"src": "5342:36:8"
													},
													{
														"expression": {
															"id": 1082,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1078,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 975,
																"src": "5812:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1081,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1079,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 978,
																	"src": "5821:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1080,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1022,
																	"src": "5829:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5821:15:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5812:24:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1083,
														"nodeType": "ExpressionStatement",
														"src": "5812:24:8"
													},
													{
														"expression": {
															"id": 1084,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 975,
															"src": "5857:6:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 976,
														"id": 1085,
														"nodeType": "Return",
														"src": "5850:13:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "1357:305:8",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."
									},
									"id": 1088,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "1676:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1691:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1683:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 967,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1683:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "1702:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1694:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1694:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 972,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "1713:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1705:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 971,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1705:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1682:43:8"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 975,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "1757:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1088,
												"src": "1749:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 974,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1749:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1748:16:8"
									},
									"scope": 1740,
									"src": "1667:4213:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1131,
										"nodeType": "Block",
										"src": "6122:189:8",
										"statements": [
											{
												"assignments": [
													1104
												],
												"declarations": [
													{
														"constant": false,
														"id": 1104,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "6140:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1131,
														"src": "6132:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1103,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6132:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1110,
												"initialValue": {
													"arguments": [
														{
															"id": 1106,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1091,
															"src": "6156:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1107,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1093,
															"src": "6159:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1108,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1095,
															"src": "6162:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1105,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1088,
															1132
														],
														"referencedDeclaration": 1088,
														"src": "6149:6:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6149:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6132:42:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1122,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_enum$_Rounding_$881",
															"typeString": "enum Math.Rounding"
														},
														"id": 1114,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1111,
															"name": "rounding",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1098,
															"src": "6188:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$881",
																"typeString": "enum Math.Rounding"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"id": 1112,
																"name": "Rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 881,
																"src": "6200:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_enum$_Rounding_$881_$",
																	"typeString": "type(enum Math.Rounding)"
																}
															},
															"id": 1113,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "6209:2:8",
															"memberName": "Up",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 879,
															"src": "6200:11:8",
															"typeDescriptions": {
																"typeIdentifier": "t_enum$_Rounding_$881",
																"typeString": "enum Math.Rounding"
															}
														},
														"src": "6188:23:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1121,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1116,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "6222:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1117,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1093,
																	"src": "6225:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1118,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1095,
																	"src": "6228:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1115,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "6215:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1119,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6215:25:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1120,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6243:1:8",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "6215:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6188:56:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1128,
												"nodeType": "IfStatement",
												"src": "6184:98:8",
												"trueBody": {
													"id": 1127,
													"nodeType": "Block",
													"src": "6246:36:8",
													"statements": [
														{
															"expression": {
																"id": 1125,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1123,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1104,
																	"src": "6260:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1124,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6270:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "6260:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1126,
															"nodeType": "ExpressionStatement",
															"src": "6260:11:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1129,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1104,
													"src": "6298:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1102,
												"id": 1130,
												"nodeType": "Return",
												"src": "6291:13:8"
											}
										]
									},
									"documentation": {
										"id": 1089,
										"nodeType": "StructuredDocumentation",
										"src": "5886:121:8",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1132,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "6021:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "6036:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6028:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1090,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6028:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1093,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "6047:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6039:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1092,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1095,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "6058:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6050:19:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1094,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6050:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "6080:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6071:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$881",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1097,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1096,
														"name": "Rounding",
														"nameLocations": [
															"6071:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "6071:8:8"
													},
													"referencedDeclaration": 881,
													"src": "6071:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$881",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6027:62:8"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1132,
												"src": "6113:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6113:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6112:9:8"
									},
									"scope": 1740,
									"src": "6012:299:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1243,
										"nodeType": "Block",
										"src": "6587:1585:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1140,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1135,
														"src": "6601:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6606:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6601:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1146,
												"nodeType": "IfStatement",
												"src": "6597:45:8",
												"trueBody": {
													"id": 1145,
													"nodeType": "Block",
													"src": "6609:33:8",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1143,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6630:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1139,
															"id": 1144,
															"nodeType": "Return",
															"src": "6623:8:8"
														}
													]
												}
											},
											{
												"assignments": [
													1148
												],
												"declarations": [
													{
														"constant": false,
														"id": 1148,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "7329:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1243,
														"src": "7321:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1147,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7321:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1157,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1156,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1149,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "7338:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1154,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1151,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1135,
																			"src": "7349:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1150,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1412,
																			1448
																		],
																		"referencedDeclaration": 1412,
																		"src": "7344:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1152,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "7344:7:8",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7355:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7344:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1155,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7343:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7338:19:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7321:36:8"
											},
											{
												"id": 1242,
												"nodeType": "UncheckedBlock",
												"src": "7758:408:8",
												"statements": [
													{
														"expression": {
															"id": 1167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1158,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "7782:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1166,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1163,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1159,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "7792:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1162,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1160,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "7801:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1161,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "7805:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7801:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7792:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1164,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7791:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1165,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7816:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7791:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7782:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1168,
														"nodeType": "ExpressionStatement",
														"src": "7782:35:8"
													},
													{
														"expression": {
															"id": 1178,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1169,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "7831:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1174,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1170,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "7841:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1173,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1171,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "7850:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1172,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "7854:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7850:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7841:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1175,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7840:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1176,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7865:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7840:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7831:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1179,
														"nodeType": "ExpressionStatement",
														"src": "7831:35:8"
													},
													{
														"expression": {
															"id": 1189,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1180,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "7880:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1188,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1185,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1181,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "7890:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1184,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1182,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "7899:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1183,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "7903:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7899:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7890:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1186,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7889:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1187,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7914:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7889:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7880:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1190,
														"nodeType": "ExpressionStatement",
														"src": "7880:35:8"
													},
													{
														"expression": {
															"id": 1200,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1191,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "7929:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1199,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1196,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1192,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "7939:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1195,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1193,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "7948:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1194,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "7952:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7948:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7939:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1197,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7938:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1198,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7963:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7938:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7929:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1201,
														"nodeType": "ExpressionStatement",
														"src": "7929:35:8"
													},
													{
														"expression": {
															"id": 1211,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1202,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "7978:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1210,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1207,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1203,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "7988:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1206,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1204,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "7997:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1205,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "8001:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "7997:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "7988:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1208,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "7987:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1209,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8012:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "7987:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7978:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1212,
														"nodeType": "ExpressionStatement",
														"src": "7978:35:8"
													},
													{
														"expression": {
															"id": 1222,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1213,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "8027:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1218,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1214,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "8037:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1217,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1215,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "8046:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1216,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "8050:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8046:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8037:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1219,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8036:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1220,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8061:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8036:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8027:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1223,
														"nodeType": "ExpressionStatement",
														"src": "8027:35:8"
													},
													{
														"expression": {
															"id": 1233,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1224,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1148,
																"src": "8076:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1232,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1225,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1148,
																				"src": "8086:6:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1228,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1226,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1135,
																					"src": "8095:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1227,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1148,
																					"src": "8099:6:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8095:10:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "8086:19:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1230,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "8085:21:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1231,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8110:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8085:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8076:35:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1234,
														"nodeType": "ExpressionStatement",
														"src": "8076:35:8"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1236,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1148,
																	"src": "8136:6:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1239,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1237,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1135,
																		"src": "8144:1:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1238,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1148,
																		"src": "8148:6:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "8144:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1235,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 917,
																"src": "8132:3:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8132:23:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1139,
														"id": 1241,
														"nodeType": "Return",
														"src": "8125:30:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "6317:208:8",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1244,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "6539:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1136,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "6552:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "6544:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1134,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6544:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6543:11:8"
									},
									"returnParameters": {
										"id": 1139,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1138,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1244,
												"src": "6578:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1137,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6578:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6577:9:8"
									},
									"scope": 1740,
									"src": "6530:1642:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1279,
										"nodeType": "Block",
										"src": "8348:161:8",
										"statements": [
											{
												"id": 1278,
												"nodeType": "UncheckedBlock",
												"src": "8358:145:8",
												"statements": [
													{
														"assignments": [
															1256
														],
														"declarations": [
															{
																"constant": false,
																"id": 1256,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "8390:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1278,
																"src": "8382:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1255,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "8382:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1260,
														"initialValue": {
															"arguments": [
																{
																	"id": 1258,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1247,
																	"src": "8404:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1257,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1244,
																	1280
																],
																"referencedDeclaration": 1244,
																"src": "8399:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1259,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8399:7:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "8382:24:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1276,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1261,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1256,
																"src": "8427:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1271,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$881",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1265,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1262,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1250,
																					"src": "8437:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$881",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1263,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 881,
																						"src": "8449:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$881_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1264,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "8458:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 879,
																					"src": "8449:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$881",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "8437:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1270,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1268,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1266,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "8464:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1267,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1256,
																						"src": "8473:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "8464:15:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1269,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1247,
																					"src": "8482:1:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "8464:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "8437:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1273,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8490:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1274,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "8437:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1272,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8486:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1275,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "8436:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "8427:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1254,
														"id": 1277,
														"nodeType": "Return",
														"src": "8420:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1245,
										"nodeType": "StructuredDocumentation",
										"src": "8178:89:8",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1280,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8281:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1251,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1247,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8294:1:8",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "8286:9:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8286:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1250,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8306:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "8297:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$881",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1249,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1248,
														"name": "Rounding",
														"nameLocations": [
															"8297:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "8297:8:8"
													},
													"referencedDeclaration": 881,
													"src": "8297:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$881",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8285:30:8"
									},
									"returnParameters": {
										"id": 1254,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1253,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1280,
												"src": "8339:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1252,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8339:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8338:9:8"
									},
									"scope": 1740,
									"src": "8272:237:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1411,
										"nodeType": "Block",
										"src": "8694:922:8",
										"statements": [
											{
												"assignments": [
													1289
												],
												"declarations": [
													{
														"constant": false,
														"id": 1289,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8712:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1411,
														"src": "8704:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1288,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8704:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1291,
												"initialValue": {
													"hexValue": "30",
													"id": 1290,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "8721:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8704:18:8"
											},
											{
												"id": 1408,
												"nodeType": "UncheckedBlock",
												"src": "8732:855:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1296,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1294,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1292,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "8760:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1293,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8769:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "8760:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1295,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8775:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8760:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1306,
														"nodeType": "IfStatement",
														"src": "8756:99:8",
														"trueBody": {
															"id": 1305,
															"nodeType": "Block",
															"src": "8778:77:8",
															"statements": [
																{
																	"expression": {
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1297,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "8796:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8806:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8796:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1300,
																	"nodeType": "ExpressionStatement",
																	"src": "8796:13:8"
																},
																{
																	"expression": {
																		"id": 1303,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1301,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "8827:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1302,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8837:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "8827:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1304,
																	"nodeType": "ExpressionStatement",
																	"src": "8827:13:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1311,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1307,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "8872:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1308,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8881:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "8872:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8886:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8872:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1321,
														"nodeType": "IfStatement",
														"src": "8868:96:8",
														"trueBody": {
															"id": 1320,
															"nodeType": "Block",
															"src": "8889:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1312,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "8907:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8917:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8907:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1315,
																	"nodeType": "ExpressionStatement",
																	"src": "8907:12:8"
																},
																{
																	"expression": {
																		"id": 1318,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1316,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "8937:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1317,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8947:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "8937:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1319,
																	"nodeType": "ExpressionStatement",
																	"src": "8937:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1326,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1324,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1322,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "8981:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1323,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8990:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "8981:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1325,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8995:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "8981:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1336,
														"nodeType": "IfStatement",
														"src": "8977:96:8",
														"trueBody": {
															"id": 1335,
															"nodeType": "Block",
															"src": "8998:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1329,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1327,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "9016:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1328,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9026:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9016:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1330,
																	"nodeType": "ExpressionStatement",
																	"src": "9016:12:8"
																},
																{
																	"expression": {
																		"id": 1333,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1331,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "9046:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9056:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "9046:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1334,
																	"nodeType": "ExpressionStatement",
																	"src": "9046:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1339,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1337,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "9090:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1338,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9099:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "9090:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1340,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9104:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9090:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1351,
														"nodeType": "IfStatement",
														"src": "9086:96:8",
														"trueBody": {
															"id": 1350,
															"nodeType": "Block",
															"src": "9107:75:8",
															"statements": [
																{
																	"expression": {
																		"id": 1344,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1342,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "9125:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1343,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9135:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9125:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1345,
																	"nodeType": "ExpressionStatement",
																	"src": "9125:12:8"
																},
																{
																	"expression": {
																		"id": 1348,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1346,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "9155:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1347,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9165:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "9155:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1349,
																	"nodeType": "ExpressionStatement",
																	"src": "9155:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1356,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1352,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "9199:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1353,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9208:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "9199:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1355,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9212:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9199:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1366,
														"nodeType": "IfStatement",
														"src": "9195:93:8",
														"trueBody": {
															"id": 1365,
															"nodeType": "Block",
															"src": "9215:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1359,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1357,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "9233:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1358,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9243:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9233:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1360,
																	"nodeType": "ExpressionStatement",
																	"src": "9233:11:8"
																},
																{
																	"expression": {
																		"id": 1363,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1361,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "9262:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1362,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9272:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "9262:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1364,
																	"nodeType": "ExpressionStatement",
																	"src": "9262:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1367,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "9305:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1368,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9314:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "9305:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9318:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9305:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1381,
														"nodeType": "IfStatement",
														"src": "9301:93:8",
														"trueBody": {
															"id": 1380,
															"nodeType": "Block",
															"src": "9321:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1374,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1372,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "9339:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1373,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9349:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9339:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1375,
																	"nodeType": "ExpressionStatement",
																	"src": "9339:11:8"
																},
																{
																	"expression": {
																		"id": 1378,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1376,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "9368:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1377,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9378:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "9368:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1379,
																	"nodeType": "ExpressionStatement",
																	"src": "9368:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1384,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1382,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "9411:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1383,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9420:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "9411:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1385,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9424:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9411:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1396,
														"nodeType": "IfStatement",
														"src": "9407:93:8",
														"trueBody": {
															"id": 1395,
															"nodeType": "Block",
															"src": "9427:73:8",
															"statements": [
																{
																	"expression": {
																		"id": 1389,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1387,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1283,
																			"src": "9445:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1388,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9455:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9445:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1390,
																	"nodeType": "ExpressionStatement",
																	"src": "9445:11:8"
																},
																{
																	"expression": {
																		"id": 1393,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1391,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "9474:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1392,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9484:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "9474:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1394,
																	"nodeType": "ExpressionStatement",
																	"src": "9474:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1401,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1397,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1283,
																	"src": "9517:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1398,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9526:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9517:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1400,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9530:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "9517:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1407,
														"nodeType": "IfStatement",
														"src": "9513:64:8",
														"trueBody": {
															"id": 1406,
															"nodeType": "Block",
															"src": "9533:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1404,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1402,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1289,
																			"src": "9551:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1403,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9561:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "9551:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1405,
																	"nodeType": "ExpressionStatement",
																	"src": "9551:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1409,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1289,
													"src": "9603:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1287,
												"id": 1410,
												"nodeType": "Return",
												"src": "9596:13:8"
											}
										]
									},
									"documentation": {
										"id": 1281,
										"nodeType": "StructuredDocumentation",
										"src": "8515:113:8",
										"text": " @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1412,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "8642:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8655:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "8647:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1282,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8647:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8646:15:8"
									},
									"returnParameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1286,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1412,
												"src": "8685:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1285,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8685:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8684:9:8"
									},
									"scope": 1740,
									"src": "8633:983:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1447,
										"nodeType": "Block",
										"src": "9849:165:8",
										"statements": [
											{
												"id": 1446,
												"nodeType": "UncheckedBlock",
												"src": "9859:149:8",
												"statements": [
													{
														"assignments": [
															1424
														],
														"declarations": [
															{
																"constant": false,
																"id": 1424,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "9891:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1446,
																"src": "9883:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1423,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "9883:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1428,
														"initialValue": {
															"arguments": [
																{
																	"id": 1426,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1415,
																	"src": "9905:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1425,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1412,
																	1448
																],
																"referencedDeclaration": 1412,
																"src": "9900:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9900:11:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "9883:28:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1444,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1429,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1424,
																"src": "9932:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1439,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$881",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1433,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1430,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1418,
																					"src": "9942:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$881",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1431,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 881,
																						"src": "9954:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$881_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1432,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "9963:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 879,
																					"src": "9954:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$881",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "9942:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1438,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1436,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1434,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "9969:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1435,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1424,
																						"src": "9974:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "9969:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1437,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1415,
																					"src": "9983:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9969:19:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "9942:46:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1441,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9995:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1442,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "9942:54:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1440,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "9991:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1443,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "9941:56:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "9932:65:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1422,
														"id": 1445,
														"nodeType": "Return",
														"src": "9925:72:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1413,
										"nodeType": "StructuredDocumentation",
										"src": "9622:142:8",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1448,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "9778:4:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1419,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1415,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9791:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "9783:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1414,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9783:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1418,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "9807:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "9798:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$881",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1417,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1416,
														"name": "Rounding",
														"nameLocations": [
															"9798:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "9798:8:8"
													},
													"referencedDeclaration": 881,
													"src": "9798:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$881",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9782:34:8"
									},
									"returnParameters": {
										"id": 1422,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1421,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1448,
												"src": "9840:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1420,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9840:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9839:9:8"
									},
									"scope": 1740,
									"src": "9769:245:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1576,
										"nodeType": "Block",
										"src": "10201:854:8",
										"statements": [
											{
												"assignments": [
													1457
												],
												"declarations": [
													{
														"constant": false,
														"id": 1457,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10219:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1576,
														"src": "10211:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1456,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10211:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1459,
												"initialValue": {
													"hexValue": "30",
													"id": 1458,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10228:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10211:18:8"
											},
											{
												"id": 1573,
												"nodeType": "UncheckedBlock",
												"src": "10239:787:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1460,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "10267:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1463,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1461,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10276:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1462,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10282:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10276:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "10267:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1476,
														"nodeType": "IfStatement",
														"src": "10263:103:8",
														"trueBody": {
															"id": 1475,
															"nodeType": "Block",
															"src": "10286:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1469,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1465,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "10304:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1466,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10313:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10319:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "10313:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "10304:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1470,
																	"nodeType": "ExpressionStatement",
																	"src": "10304:17:8"
																},
																{
																	"expression": {
																		"id": 1473,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1471,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10339:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1472,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10349:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10339:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1474,
																	"nodeType": "ExpressionStatement",
																	"src": "10339:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1481,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1477,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "10383:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1480,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1478,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10392:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1479,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10398:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "10392:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "10383:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1493,
														"nodeType": "IfStatement",
														"src": "10379:103:8",
														"trueBody": {
															"id": 1492,
															"nodeType": "Block",
															"src": "10402:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1486,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1482,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "10420:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1485,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1483,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10429:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1484,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10435:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "10429:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "10420:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1487,
																	"nodeType": "ExpressionStatement",
																	"src": "10420:17:8"
																},
																{
																	"expression": {
																		"id": 1490,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1488,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10455:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1489,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10465:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "10455:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1491,
																	"nodeType": "ExpressionStatement",
																	"src": "10455:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1498,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1494,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "10499:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1495,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10508:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1496,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10514:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "10508:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "10499:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1510,
														"nodeType": "IfStatement",
														"src": "10495:103:8",
														"trueBody": {
															"id": 1509,
															"nodeType": "Block",
															"src": "10518:80:8",
															"statements": [
																{
																	"expression": {
																		"id": 1503,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1499,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "10536:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1502,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1500,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10545:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1501,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10551:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "10545:8:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "10536:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1504,
																	"nodeType": "ExpressionStatement",
																	"src": "10536:17:8"
																},
																{
																	"expression": {
																		"id": 1507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1505,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10571:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1506,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10581:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "10571:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1508,
																	"nodeType": "ExpressionStatement",
																	"src": "10571:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1511,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "10615:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1514,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1512,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10624:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1513,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10630:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "10624:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "10615:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1527,
														"nodeType": "IfStatement",
														"src": "10611:100:8",
														"trueBody": {
															"id": 1526,
															"nodeType": "Block",
															"src": "10633:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1520,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1516,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "10651:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1517,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10660:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10666:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "10660:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "10651:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1521,
																	"nodeType": "ExpressionStatement",
																	"src": "10651:16:8"
																},
																{
																	"expression": {
																		"id": 1524,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1522,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10685:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1523,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10695:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "10685:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1525,
																	"nodeType": "ExpressionStatement",
																	"src": "10685:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1532,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1528,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "10728:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1531,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1529,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10737:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10743:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "10737:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "10728:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1544,
														"nodeType": "IfStatement",
														"src": "10724:100:8",
														"trueBody": {
															"id": 1543,
															"nodeType": "Block",
															"src": "10746:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1537,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1533,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "10764:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1536,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1534,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10773:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1535,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10779:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "10773:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "10764:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1538,
																	"nodeType": "ExpressionStatement",
																	"src": "10764:16:8"
																},
																{
																	"expression": {
																		"id": 1541,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1539,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10798:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10808:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "10798:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1542,
																	"nodeType": "ExpressionStatement",
																	"src": "10798:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1549,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1545,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "10841:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1548,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1546,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10850:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10856:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "10850:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "10841:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1561,
														"nodeType": "IfStatement",
														"src": "10837:100:8",
														"trueBody": {
															"id": 1560,
															"nodeType": "Block",
															"src": "10859:78:8",
															"statements": [
																{
																	"expression": {
																		"id": 1554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1550,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1451,
																			"src": "10877:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10886:2:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1552,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10892:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "10886:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "10877:16:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1555,
																	"nodeType": "ExpressionStatement",
																	"src": "10877:16:8"
																},
																{
																	"expression": {
																		"id": 1558,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1556,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10911:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1557,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10921:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "10911:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1559,
																	"nodeType": "ExpressionStatement",
																	"src": "10911:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1562,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1451,
																"src": "10954:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1565,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1563,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10963:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1564,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10969:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10963:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "10954:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1572,
														"nodeType": "IfStatement",
														"src": "10950:66:8",
														"trueBody": {
															"id": 1571,
															"nodeType": "Block",
															"src": "10972:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1567,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1457,
																			"src": "10990:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1568,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11000:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "10990:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1570,
																	"nodeType": "ExpressionStatement",
																	"src": "10990:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1574,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1457,
													"src": "11042:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1455,
												"id": 1575,
												"nodeType": "Return",
												"src": "11035:13:8"
											}
										]
									},
									"documentation": {
										"id": 1449,
										"nodeType": "StructuredDocumentation",
										"src": "10020:114:8",
										"text": " @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1577,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "10148:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1452,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1451,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10162:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "10154:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1450,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10154:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10153:15:8"
									},
									"returnParameters": {
										"id": 1455,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1454,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1577,
												"src": "10192:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1453,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10192:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10191:9:8"
									},
									"scope": 1740,
									"src": "10139:916:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1612,
										"nodeType": "Block",
										"src": "11290:167:8",
										"statements": [
											{
												"id": 1611,
												"nodeType": "UncheckedBlock",
												"src": "11300:151:8",
												"statements": [
													{
														"assignments": [
															1589
														],
														"declarations": [
															{
																"constant": false,
																"id": 1589,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11332:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1611,
																"src": "11324:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1588,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11324:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1593,
														"initialValue": {
															"arguments": [
																{
																	"id": 1591,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1580,
																	"src": "11347:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1590,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1577,
																	1613
																],
																"referencedDeclaration": 1577,
																"src": "11341:5:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11341:12:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11324:29:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1594,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1589,
																"src": "11374:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1604,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$881",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1598,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1595,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1583,
																					"src": "11384:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$881",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1596,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 881,
																						"src": "11396:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$881_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1597,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "11405:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 879,
																					"src": "11396:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$881",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "11384:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1603,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1601,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1599,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "11411:2:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1600,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1589,
																						"src": "11417:6:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "11411:12:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1602,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1580,
																					"src": "11426:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "11411:20:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "11384:47:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1606,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11438:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1607,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "11384:55:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1605,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11434:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1608,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "11383:57:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11374:66:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1587,
														"id": 1610,
														"nodeType": "Return",
														"src": "11367:73:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1578,
										"nodeType": "StructuredDocumentation",
										"src": "11061:143:8",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1613,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "11218:5:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11232:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "11224:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11224:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1583,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11248:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "11239:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$881",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1582,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1581,
														"name": "Rounding",
														"nameLocations": [
															"11239:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "11239:8:8"
													},
													"referencedDeclaration": 881,
													"src": "11239:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$881",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11223:34:8"
									},
									"returnParameters": {
										"id": 1587,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1586,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1613,
												"src": "11281:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1585,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11281:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11280:9:8"
									},
									"scope": 1740,
									"src": "11209:248:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "11771:600:8",
										"statements": [
											{
												"assignments": [
													1622
												],
												"declarations": [
													{
														"constant": false,
														"id": 1622,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "11789:6:8",
														"nodeType": "VariableDeclaration",
														"scope": 1699,
														"src": "11781:14:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1621,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "11781:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1624,
												"initialValue": {
													"hexValue": "30",
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "11798:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11781:18:8"
											},
											{
												"id": 1696,
												"nodeType": "UncheckedBlock",
												"src": "11809:533:8",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1629,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1627,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1625,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "11837:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1626,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11846:3:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "11837:12:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1628,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11852:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11837:16:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1639,
														"nodeType": "IfStatement",
														"src": "11833:98:8",
														"trueBody": {
															"id": 1638,
															"nodeType": "Block",
															"src": "11855:76:8",
															"statements": [
																{
																	"expression": {
																		"id": 1632,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1630,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1616,
																			"src": "11873:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1631,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11883:3:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "11873:13:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1633,
																	"nodeType": "ExpressionStatement",
																	"src": "11873:13:8"
																},
																{
																	"expression": {
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1634,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "11904:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11914:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11904:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1637,
																	"nodeType": "ExpressionStatement",
																	"src": "11904:12:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1640,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "11948:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1641,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11957:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "11948:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1643,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11962:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11948:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1654,
														"nodeType": "IfStatement",
														"src": "11944:95:8",
														"trueBody": {
															"id": 1653,
															"nodeType": "Block",
															"src": "11965:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1645,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1616,
																			"src": "11983:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11993:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11983:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1648,
																	"nodeType": "ExpressionStatement",
																	"src": "11983:12:8"
																},
																{
																	"expression": {
																		"id": 1651,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1649,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "12013:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1650,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12023:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12013:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1652,
																	"nodeType": "ExpressionStatement",
																	"src": "12013:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1655,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "12056:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1656,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12065:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12056:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1658,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12070:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12056:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1669,
														"nodeType": "IfStatement",
														"src": "12052:95:8",
														"trueBody": {
															"id": 1668,
															"nodeType": "Block",
															"src": "12073:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1660,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1616,
																			"src": "12091:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12101:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12091:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1663,
																	"nodeType": "ExpressionStatement",
																	"src": "12091:12:8"
																},
																{
																	"expression": {
																		"id": 1666,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1664,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "12121:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1665,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12131:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12121:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1667,
																	"nodeType": "ExpressionStatement",
																	"src": "12121:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1674,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1672,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1670,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "12164:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1671,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12173:2:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12164:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1673,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12178:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12164:15:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1684,
														"nodeType": "IfStatement",
														"src": "12160:95:8",
														"trueBody": {
															"id": 1683,
															"nodeType": "Block",
															"src": "12181:74:8",
															"statements": [
																{
																	"expression": {
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1675,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1616,
																			"src": "12199:5:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12209:2:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12199:12:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1678,
																	"nodeType": "ExpressionStatement",
																	"src": "12199:12:8"
																},
																{
																	"expression": {
																		"id": 1681,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1679,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "12229:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1680,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12239:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12229:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1682,
																	"nodeType": "ExpressionStatement",
																	"src": "12229:11:8"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1689,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1687,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1685,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1616,
																	"src": "12272:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1686,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12281:1:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12272:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1688,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "12285:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "12272:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1695,
														"nodeType": "IfStatement",
														"src": "12268:64:8",
														"trueBody": {
															"id": 1694,
															"nodeType": "Block",
															"src": "12288:44:8",
															"statements": [
																{
																	"expression": {
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1690,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1622,
																			"src": "12306:6:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12316:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "12306:11:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1693,
																	"nodeType": "ExpressionStatement",
																	"src": "12306:11:8"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1697,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1622,
													"src": "12358:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1620,
												"id": 1698,
												"nodeType": "Return",
												"src": "12351:13:8"
											}
										]
									},
									"documentation": {
										"id": 1614,
										"nodeType": "StructuredDocumentation",
										"src": "11463:240:8",
										"text": " @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "11717:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1617,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1616,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11732:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "11724:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1615,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11724:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11723:15:8"
									},
									"returnParameters": {
										"id": 1620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1619,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "11762:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1618,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11762:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11761:9:8"
									},
									"scope": 1740,
									"src": "11708:663:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1738,
										"nodeType": "Block",
										"src": "12608:174:8",
										"statements": [
											{
												"id": 1737,
												"nodeType": "UncheckedBlock",
												"src": "12618:158:8",
												"statements": [
													{
														"assignments": [
															1712
														],
														"declarations": [
															{
																"constant": false,
																"id": 1712,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "12650:6:8",
																"nodeType": "VariableDeclaration",
																"scope": 1737,
																"src": "12642:14:8",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1711,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "12642:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1716,
														"initialValue": {
															"arguments": [
																{
																	"id": 1714,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1703,
																	"src": "12666:5:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1713,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1700,
																	1739
																],
																"referencedDeclaration": 1700,
																"src": "12659:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12659:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "12642:30:8"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1735,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1717,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1712,
																"src": "12693:6:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1730,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"commonType": {
																					"typeIdentifier": "t_enum$_Rounding_$881",
																					"typeString": "enum Math.Rounding"
																				},
																				"id": 1721,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1718,
																					"name": "rounding",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1706,
																					"src": "12703:8:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$881",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "==",
																				"rightExpression": {
																					"expression": {
																						"id": 1719,
																						"name": "Rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 881,
																						"src": "12715:8:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_enum$_Rounding_$881_$",
																							"typeString": "type(enum Math.Rounding)"
																						}
																					},
																					"id": 1720,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "12724:2:8",
																					"memberName": "Up",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 879,
																					"src": "12715:11:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_enum$_Rounding_$881",
																						"typeString": "enum Math.Rounding"
																					}
																				},
																				"src": "12703:23:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1729,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1727,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1722,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12730:1:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 1725,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 1723,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 1712,
																									"src": "12736:6:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 1724,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "12746:1:8",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "12736:11:8",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 1726,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "12735:13:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12730:18:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1728,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1703,
																					"src": "12751:5:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12730:26:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12703:53:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12763:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12703:61:8",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1731,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12759:1:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1734,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12702:63:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "12693:72:8",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1710,
														"id": 1736,
														"nodeType": "Return",
														"src": "12686:79:8"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "12377:144:8",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "12535:6:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1707,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12550:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "12542:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1702,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12542:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1706,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "12566:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "12557:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$881",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1705,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1704,
														"name": "Rounding",
														"nameLocations": [
															"12557:8:8"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 881,
														"src": "12557:8:8"
													},
													"referencedDeclaration": 881,
													"src": "12557:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$881",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12541:34:8"
									},
									"returnParameters": {
										"id": 1710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1709,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1739,
												"src": "12599:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12599:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12598:9:8"
									},
									"scope": 1740,
									"src": "12526:256:8",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1741,
							"src": "202:12582:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "103:12682:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/utils/math/SignedMath.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/math/SignedMath.sol",
					"exportedSymbols": {
						"SignedMath": [
							1845
						]
					},
					"id": 1846,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1742,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "109:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SignedMath",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1743,
								"nodeType": "StructuredDocumentation",
								"src": "134:80:9",
								"text": " @dev Standard signed math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 1845,
							"linearizedBaseContracts": [
								1845
							],
							"name": "SignedMath",
							"nameLocation": "223:10:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1760,
										"nodeType": "Block",
										"src": "375:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1755,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1753,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1746,
															"src": "392:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1754,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1748,
															"src": "396:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "392:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1757,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1748,
														"src": "404:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1758,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "392:13:9",
													"trueExpression": {
														"id": 1756,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1746,
														"src": "400:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1752,
												"id": 1759,
												"nodeType": "Return",
												"src": "385:20:9"
											}
										]
									},
									"documentation": {
										"id": 1744,
										"nodeType": "StructuredDocumentation",
										"src": "240:66:9",
										"text": " @dev Returns the largest of two signed numbers."
									},
									"id": 1761,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "320:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1749,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1746,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "331:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "324:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1745,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "324:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1748,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "341:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "334:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1747,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "334:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "323:20:9"
									},
									"returnParameters": {
										"id": 1752,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1761,
												"src": "367:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1750,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "367:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "366:8:9"
									},
									"scope": 1845,
									"src": "311:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1778,
										"nodeType": "Block",
										"src": "554:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"id": 1773,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1771,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1764,
															"src": "571:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1772,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1766,
															"src": "575:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"src": "571:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1775,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1766,
														"src": "583:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "571:13:9",
													"trueExpression": {
														"id": 1774,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1764,
														"src": "579:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1770,
												"id": 1777,
												"nodeType": "Return",
												"src": "564:20:9"
											}
										]
									},
									"documentation": {
										"id": 1762,
										"nodeType": "StructuredDocumentation",
										"src": "418:67:9",
										"text": " @dev Returns the smallest of two signed numbers."
									},
									"id": 1779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "499:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1767,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1764,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "510:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "503:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1763,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "503:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1766,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "520:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "513:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1765,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "513:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "502:20:9"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1779,
												"src": "546:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1768,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "546:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "545:8:9"
									},
									"scope": 1845,
									"src": "490:101:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1822,
										"nodeType": "Block",
										"src": "796:162:9",
										"statements": [
											{
												"assignments": [
													1790
												],
												"declarations": [
													{
														"constant": false,
														"id": 1790,
														"mutability": "mutable",
														"name": "x",
														"nameLocation": "865:1:9",
														"nodeType": "VariableDeclaration",
														"scope": 1822,
														"src": "858:8:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														},
														"typeName": {
															"id": 1789,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "858:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1803,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1802,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1791,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1782,
																	"src": "870:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1792,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1784,
																	"src": "874:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "870:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1794,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "869:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1800,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1797,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1795,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1782,
																				"src": "881:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1796,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1784,
																				"src": "885:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "881:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1798,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "880:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1799,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "891:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "880:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1801,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "879:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "869:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "858:35:9"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 1820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1804,
														"name": "x",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1790,
														"src": "910:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																},
																"id": 1818,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1812,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1809,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1790,
																						"src": "930:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_int256",
																							"typeString": "int256"
																						}
																					],
																					"id": 1808,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "922:7:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint256_$",
																						"typeString": "type(uint256)"
																					},
																					"typeName": {
																						"id": 1807,
																						"name": "uint256",
																						"nodeType": "ElementaryTypeName",
																						"src": "922:7:9",
																						"typeDescriptions": {}
																					}
																				},
																				"id": 1810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "922:10:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">>",
																			"rightExpression": {
																				"hexValue": "323535",
																				"id": 1811,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "936:3:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_255_by_1",
																					"typeString": "int_const 255"
																				},
																				"value": "255"
																			},
																			"src": "922:17:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1806,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "915:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_int256_$",
																			"typeString": "type(int256)"
																		},
																		"typeName": {
																			"id": 1805,
																			"name": "int256",
																			"nodeType": "ElementaryTypeName",
																			"src": "915:6:9",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 1813,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "915:25:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			},
																			"id": 1816,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1814,
																				"name": "a",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1782,
																				"src": "944:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "^",
																			"rightExpression": {
																				"id": 1815,
																				"name": "b",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1784,
																				"src": "948:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_int256",
																					"typeString": "int256"
																				}
																			},
																			"src": "944:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		}
																	],
																	"id": 1817,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "943:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																},
																"src": "915:35:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"id": 1819,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "914:37:9",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "910:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 1788,
												"id": 1821,
												"nodeType": "Return",
												"src": "903:48:9"
											}
										]
									},
									"documentation": {
										"id": 1780,
										"nodeType": "StructuredDocumentation",
										"src": "597:126:9",
										"text": " @dev Returns the average of two signed numbers without overflow.\n The result is rounded towards zero."
									},
									"id": 1823,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "737:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1782,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "752:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "745:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1781,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "745:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1784,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "762:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "755:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1783,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "755:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "744:20:9"
									},
									"returnParameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1823,
												"src": "788:6:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1786,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "788:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "787:8:9"
									},
									"scope": 1845,
									"src": "728:230:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "1102:158:9",
										"statements": [
											{
												"id": 1842,
												"nodeType": "UncheckedBlock",
												"src": "1112:142:9",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		},
																		"id": 1835,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1833,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1826,
																			"src": "1227:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 1834,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1232:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "1227:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"falseExpression": {
																		"id": 1838,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "UnaryOperation",
																		"operator": "-",
																		"prefix": true,
																		"src": "1240:2:9",
																		"subExpression": {
																			"id": 1837,
																			"name": "n",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1826,
																			"src": "1241:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_int256",
																				"typeString": "int256"
																			}
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "Conditional",
																	"src": "1227:15:9",
																	"trueExpression": {
																		"id": 1836,
																		"name": "n",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1826,
																		"src": "1236:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_int256",
																		"typeString": "int256"
																	}
																],
																"id": 1832,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1219:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint256_$",
																	"typeString": "type(uint256)"
																},
																"typeName": {
																	"id": 1831,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1219:7:9",
																	"typeDescriptions": {}
																}
															},
															"id": 1840,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1219:24:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1830,
														"id": 1841,
														"nodeType": "Return",
														"src": "1212:31:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1824,
										"nodeType": "StructuredDocumentation",
										"src": "964:78:9",
										"text": " @dev Returns the absolute unsigned value of a signed value."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "abs",
									"nameLocation": "1056:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "n",
												"nameLocation": "1067:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1060:8:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 1825,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:10:9"
									},
									"returnParameters": {
										"id": 1830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "1093:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1828,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1093:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1092:9:9"
									},
									"scope": 1845,
									"src": "1047:213:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1846,
							"src": "215:1047:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "109:1154:9"
				},
				"id": 9
			},
			"contracts/IStakeX.sol": {
				"ast": {
					"absolutePath": "contracts/IStakeX.sol",
					"exportedSymbols": {
						"IERC20": [
							579
						],
						"IStakeX": [
							1864
						]
					},
					"id": 1865,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1847,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:10"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1849,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1865,
							"sourceUnit": 580,
							"src": "60:70:10",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1848,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 579,
										"src": "68:6:10",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1850,
										"name": "IERC20",
										"nameLocations": [
											"155:6:10"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 579,
										"src": "155:6:10"
									},
									"id": 1851,
									"nodeType": "InheritanceSpecifier",
									"src": "155:6:10"
								}
							],
							"canonicalName": "IStakeX",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 1864,
							"linearizedBaseContracts": [
								1864,
								579
							],
							"name": "IStakeX",
							"nameLocation": "144:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "313ce567",
									"id": 1856,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "178:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "186:2:10"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1856,
												"src": "212:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1853,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "212:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "211:7:10"
									},
									"scope": 1864,
									"src": "169:50:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "40c10f19",
									"id": 1863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "236:4:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1858,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "249:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "241:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1857,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "241:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1860,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "266:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1863,
												"src": "258:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1859,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "258:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "240:33:10"
									},
									"returnParameters": {
										"id": 1862,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "282:0:10"
									},
									"scope": 1864,
									"src": "227:56:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1865,
							"src": "134:152:10",
							"usedErrors": [],
							"usedEvents": [
								513,
								522
							]
						}
					],
					"src": "33:255:10"
				},
				"id": 10
			},
			"contracts/StakingPool.sol": {
				"ast": {
					"absolutePath": "contracts/StakingPool.sol",
					"exportedSymbols": {
						"AccessControl": [
							315
						],
						"IERC20": [
							579
						],
						"IStakeX": [
							1864
						],
						"Ownable": [
							501
						],
						"StakingPool": [
							2227
						]
					},
					"id": 2228,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1866,
							"literals": [
								"solidity",
								"0.8",
								".28"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 1868,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2228,
							"sourceUnit": 580,
							"src": "60:70:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1867,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 579,
										"src": "68:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1870,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2228,
							"sourceUnit": 502,
							"src": "132:67:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1869,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 501,
										"src": "140:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/AccessControl.sol",
							"file": "@openzeppelin/contracts/access/AccessControl.sol",
							"id": 1872,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2228,
							"sourceUnit": 316,
							"src": "201:79:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1871,
										"name": "AccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 315,
										"src": "209:13:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/IStakeX.sol",
							"file": "./IStakeX.sol",
							"id": 1874,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2228,
							"sourceUnit": 1865,
							"src": "282:38:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1873,
										"name": "IStakeX",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1864,
										"src": "290:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1875,
										"name": "Ownable",
										"nameLocations": [
											"348:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 501,
										"src": "348:7:11"
									},
									"id": 1876,
									"nodeType": "InheritanceSpecifier",
									"src": "348:7:11"
								},
								{
									"baseName": {
										"id": 1877,
										"name": "AccessControl",
										"nameLocations": [
											"357:13:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 315,
										"src": "357:13:11"
									},
									"id": 1878,
									"nodeType": "InheritanceSpecifier",
									"src": "357:13:11"
								}
							],
							"canonicalName": "StakingPool",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2227,
							"linearizedBaseContracts": [
								2227,
								315,
								862,
								874,
								388,
								501,
								609
							],
							"name": "StakingPool",
							"nameLocation": "333:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "d5391393",
									"id": 1883,
									"mutability": "constant",
									"name": "MINTER_ROLE",
									"nameLocation": "402:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2227,
									"src": "378:62:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1879,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "378:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4d494e5445525f524f4c45",
												"id": 1881,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "426:13:11",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												},
												"value": "MINTER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9f2df0fed2c77648de5860a4cc508cd0818c85b8b8a1ab4ceeef8d981c8956a6",
													"typeString": "literal_string \"MINTER_ROLE\""
												}
											],
											"id": 1880,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "416:9:11",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1882,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "416:24:11",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6ae674e2",
									"id": 1886,
									"mutability": "mutable",
									"name": "stakeXToken",
									"nameLocation": "463:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2227,
									"src": "449:25:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$579",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 1885,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 1884,
											"name": "IERC20",
											"nameLocations": [
												"449:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 579,
											"src": "449:6:11"
										},
										"referencedDeclaration": 579,
										"src": "449:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$579",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "817b1cd2",
									"id": 1888,
									"mutability": "mutable",
									"name": "totalStaked",
									"nameLocation": "496:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 2227,
									"src": "481:26:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1887,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "481:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "StakingPool.Staker",
									"id": 1895,
									"members": [
										{
											"constant": false,
											"id": 1890,
											"mutability": "mutable",
											"name": "balance",
											"nameLocation": "549:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 1895,
											"src": "541:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1889,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "541:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1892,
											"mutability": "mutable",
											"name": "rewardDebt",
											"nameLocation": "575:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 1895,
											"src": "567:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1891,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "567:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1894,
											"mutability": "mutable",
											"name": "stakingStartTime",
											"nameLocation": "604:16:11",
											"nodeType": "VariableDeclaration",
											"scope": 1895,
											"src": "596:24:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1893,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "596:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Staker",
									"nameLocation": "523:6:11",
									"nodeType": "StructDefinition",
									"scope": 2227,
									"src": "516:112:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9168ae72",
									"id": 1900,
									"mutability": "mutable",
									"name": "stakers",
									"nameLocation": "670:7:11",
									"nodeType": "VariableDeclaration",
									"scope": 2227,
									"src": "636:41:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1895_storage_$",
										"typeString": "mapping(address => struct StakingPool.Staker)"
									},
									"typeName": {
										"id": 1899,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1896,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "644:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "636:26:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1895_storage_$",
											"typeString": "mapping(address => struct StakingPool.Staker)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1898,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1897,
												"name": "Staker",
												"nameLocations": [
													"655:6:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1895,
												"src": "655:6:11"
											},
											"referencedDeclaration": 1895,
											"src": "655:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
												"typeString": "struct StakingPool.Staker"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "2da466a7b24304f47e87fa2e1e5a81b9831ce54fec19055ce277ca2f39ba42c4",
									"id": 1906,
									"name": "Deposited",
									"nameLocation": "692:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1905,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1902,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "718:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "702:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1901,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "702:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1904,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "732:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "724:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1903,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "724:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "701:38:11"
									},
									"src": "686:54:11"
								},
								{
									"anonymous": false,
									"eventSelector": "7084f5476618d8e60b11ef0d7d3f06914655adb8793e28ff7f018d4c76d505d5",
									"id": 1912,
									"name": "Withdrawn",
									"nameLocation": "752:9:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1908,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "778:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "762:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1907,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "762:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1910,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "792:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1912,
												"src": "784:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1909,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "761:38:11"
									},
									"src": "746:54:11"
								},
								{
									"anonymous": false,
									"eventSelector": "fc30cddea38e2bf4d6ea7d3f9ed3b6ad7f176419f4963bd81318067a4aee73fe",
									"id": 1918,
									"name": "RewardsClaimed",
									"nameLocation": "812:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1917,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1914,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "843:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "827:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1913,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "827:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1916,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "857:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "849:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1915,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "826:38:11"
									},
									"src": "806:59:11"
								},
								{
									"errorSelector": "77b8dde3",
									"id": 1922,
									"name": "InsufficientAmount",
									"nameLocation": "879:18:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1920,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "906:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1922,
												"src": "898:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "897:16:11"
									},
									"src": "873:41:11"
								},
								{
									"errorSelector": "baf91eeb",
									"id": 1924,
									"name": "RewardsTransferFailed",
									"nameLocation": "926:21:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1923,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "947:2:11"
									},
									"src": "920:30:11"
								},
								{
									"errorSelector": "83a8cdb6",
									"id": 1926,
									"name": "NoAvailableRewards",
									"nameLocation": "962:18:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1925,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "980:2:11"
									},
									"src": "956:27:11"
								},
								{
									"errorSelector": "6f3f6cd0",
									"id": 1928,
									"name": "WithdrawnFailed",
									"nameLocation": "995:15:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1010:2:11"
									},
									"src": "989:24:11"
								},
								{
									"errorSelector": "92665351",
									"id": 1932,
									"name": "InsufficientBalance",
									"nameLocation": "1025:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1930,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1053:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 1932,
												"src": "1045:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1045:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1044:17:11"
									},
									"src": "1019:43:11"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "1104:157:11",
										"statements": [
											{
												"expression": {
													"id": 1941,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1937,
														"name": "stakeXToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1886,
														"src": "1115:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$579",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 1939,
																"name": "_stakeXToken",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1934,
																"src": "1136:12:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 1938,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 579,
															"src": "1129:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$579_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 1940,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1129:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$579",
															"typeString": "contract IERC20"
														}
													},
													"src": "1115:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$579",
														"typeString": "contract IERC20"
													}
												},
												"id": 1942,
												"nodeType": "ExpressionStatement",
												"src": "1115:34:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1944,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1173:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 1945,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1193:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1946,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1197:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1193:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1943,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1162:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1947,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1162:42:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1948,
												"nodeType": "ExpressionStatement",
												"src": "1162:42:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1950,
															"name": "MINTER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1883,
															"src": "1226:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [
																{
																	"id": 1953,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1247:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPool_$2227",
																		"typeString": "contract StakingPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPool_$2227",
																		"typeString": "contract StakingPool"
																	}
																],
																"id": 1952,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1239:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1951,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1239:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1954,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1239:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1949,
														"name": "_setupRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 223,
														"src": "1215:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address)"
														}
													},
													"id": 1955,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1215:38:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1956,
												"nodeType": "ExpressionStatement",
												"src": "1215:38:11"
											}
										]
									},
									"id": 1958,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1934,
												"mutability": "mutable",
												"name": "_stakeXToken",
												"nameLocation": "1090:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "1082:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1933,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:22:11"
									},
									"returnParameters": {
										"id": 1936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1104:0:11"
									},
									"scope": 2227,
									"src": "1070:191:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2027,
										"nodeType": "Block",
										"src": "1311:582:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1963,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "1326:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1964,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1336:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "1326:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1971,
												"nodeType": "IfStatement",
												"src": "1322:77:11",
												"trueBody": {
													"id": 1970,
													"nodeType": "Block",
													"src": "1339:60:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1967,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1960,
																		"src": "1380:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1966,
																	"name": "InsufficientAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "1361:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1968,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1361:26:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1969,
															"nodeType": "RevertStatement",
															"src": "1354:33:11"
														}
													]
												}
											},
											{
												"assignments": [
													1973
												],
												"declarations": [
													{
														"constant": false,
														"id": 1973,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1416:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2027,
														"src": "1411:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1972,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1411:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1984,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 1976,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1465:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1977,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1469:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1465:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 1980,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1498:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_StakingPool_$2227",
																		"typeString": "contract StakingPool"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_StakingPool_$2227",
																		"typeString": "contract StakingPool"
																	}
																],
																"id": 1979,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1490:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1978,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1490:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 1981,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1490:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1982,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "1518:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1974,
															"name": "stakeXToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "1426:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$579",
																"typeString": "contract IERC20"
															}
														},
														"id": 1975,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1438:12:11",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 578,
														"src": "1426:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 1983,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1426:109:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1411:124:11"
											},
											{
												"condition": {
													"id": 1986,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1552:8:11",
													"subExpression": {
														"id": 1985,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1973,
														"src": "1553:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1992,
												"nodeType": "IfStatement",
												"src": "1548:74:11",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "1562:60:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1988,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1960,
																		"src": "1603:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 1987,
																	"name": "InsufficientAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "1584:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 1989,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1584:26:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1990,
															"nodeType": "RevertStatement",
															"src": "1577:33:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1993,
														"name": "_calculateAndClaimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "1634:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1994,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1634:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1995,
												"nodeType": "ExpressionStatement",
												"src": "1634:27:11"
											},
											{
												"assignments": [
													1998
												],
												"declarations": [
													{
														"constant": false,
														"id": 1998,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "1689:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2027,
														"src": "1674:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
															"typeString": "struct StakingPool.Staker"
														},
														"typeName": {
															"id": 1997,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1996,
																"name": "Staker",
																"nameLocations": [
																	"1674:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1895,
																"src": "1674:6:11"
															},
															"referencedDeclaration": 1895,
															"src": "1674:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2003,
												"initialValue": {
													"baseExpression": {
														"id": 1999,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "1698:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1895_storage_$",
															"typeString": "mapping(address => struct StakingPool.Staker storage ref)"
														}
													},
													"id": 2002,
													"indexExpression": {
														"expression": {
															"id": 2000,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1706:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2001,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1710:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1706:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "1698:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1895_storage",
														"typeString": "struct StakingPool.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1674:43:11"
											},
											{
												"expression": {
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2004,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "1728:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker storage pointer"
															}
														},
														"id": 2006,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1735:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1890,
														"src": "1728:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2007,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "1746:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1728:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "1728:24:11"
											},
											{
												"expression": {
													"id": 2015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2010,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1998,
															"src": "1763:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker storage pointer"
															}
														},
														"id": 2012,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "1770:16:11",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1894,
														"src": "1763:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2013,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1789:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2014,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1795:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1789:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1763:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2016,
												"nodeType": "ExpressionStatement",
												"src": "1763:41:11"
											},
											{
												"expression": {
													"id": 2019,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2017,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "1817:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2018,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "1832:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1817:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2020,
												"nodeType": "ExpressionStatement",
												"src": "1817:21:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2022,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1866:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2023,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1870:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1866:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2024,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "1878:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2021,
														"name": "Deposited",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1906,
														"src": "1856:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2025,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1856:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2026,
												"nodeType": "EmitStatement",
												"src": "1851:34:11"
											}
										]
									},
									"functionSelector": "b6b55f25",
									"id": 2028,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "deposit",
									"nameLocation": "1278:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1294:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2028,
												"src": "1286:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1286:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1285:16:11"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1311:0:11"
									},
									"scope": 2227,
									"src": "1269:624:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2046,
										"nodeType": "Block",
										"src": "1966:71:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2042,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2030,
															"src": "2012:2:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2043,
															"name": "rewardAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2032,
															"src": "2016:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 2038,
																			"name": "stakeXToken",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1886,
																			"src": "1993:11:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$579",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$579",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 2037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "1985:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2036,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "1985:7:11",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "1985:20:11",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2035,
																"name": "IStakeX",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1864,
																"src": "1977:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IStakeX_$1864_$",
																	"typeString": "type(contract IStakeX)"
																}
															},
															"id": 2040,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1977:29:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IStakeX_$1864",
																"typeString": "contract IStakeX"
															}
														},
														"id": 2041,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2007:4:11",
														"memberName": "mint",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1863,
														"src": "1977:34:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 2044,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1977:52:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2045,
												"nodeType": "ExpressionStatement",
												"src": "1977:52:11"
											}
										]
									},
									"id": 2047,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mintRewards",
									"nameLocation": "1910:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1931:2:11",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "1923:10:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1923:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2032,
												"mutability": "mutable",
												"name": "rewardAmount",
												"nameLocation": "1943:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 2047,
												"src": "1935:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1935:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1922:34:11"
									},
									"returnParameters": {
										"id": 2034,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1966:0:11"
									},
									"scope": 2227,
									"src": "1901:136:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2113,
										"nodeType": "Block",
										"src": "2091:493:11",
										"statements": [
											{
												"assignments": [
													2052
												],
												"declarations": [
													{
														"constant": false,
														"id": 2052,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2117:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2113,
														"src": "2102:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
															"typeString": "struct StakingPool.Staker"
														},
														"typeName": {
															"id": 2051,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2050,
																"name": "Staker",
																"nameLocations": [
																	"2102:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1895,
																"src": "2102:6:11"
															},
															"referencedDeclaration": 1895,
															"src": "2102:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2057,
												"initialValue": {
													"baseExpression": {
														"id": 2053,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "2126:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1895_storage_$",
															"typeString": "mapping(address => struct StakingPool.Staker storage ref)"
														}
													},
													"id": 2056,
													"indexExpression": {
														"expression": {
															"id": 2054,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2134:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2138:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2134:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2126:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1895_storage",
														"typeString": "struct StakingPool.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2102:43:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2058,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "2162:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker storage pointer"
															}
														},
														"id": 2059,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2169:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1890,
														"src": "2162:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 2060,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2179:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2162:18:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2105,
												"nodeType": "IfStatement",
												"src": "2158:365:11",
												"trueBody": {
													"id": 2104,
													"nodeType": "Block",
													"src": "2182:341:11",
													"statements": [
														{
															"assignments": [
																2063
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2063,
																	"mutability": "mutable",
																	"name": "elapsedTime",
																	"nameLocation": "2205:11:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2104,
																	"src": "2197:19:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2062,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2197:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2069,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2068,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2064,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2219:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 2065,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2225:9:11",
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2219:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"expression": {
																		"id": 2066,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "2237:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																			"typeString": "struct StakingPool.Staker storage pointer"
																		}
																	},
																	"id": 2067,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2244:16:11",
																	"memberName": "stakingStartTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1894,
																	"src": "2237:23:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2219:41:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2197:63:11"
														},
														{
															"assignments": [
																2071
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2071,
																	"mutability": "mutable",
																	"name": "reward",
																	"nameLocation": "2283:6:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 2104,
																	"src": "2275:14:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2070,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "2275:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2085,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2081,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"components": [
																					{
																						"commonType": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						},
																						"id": 2078,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftExpression": {
																							"components": [
																								{
																									"commonType": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									},
																									"id": 2075,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"leftExpression": {
																										"expression": {
																											"id": 2072,
																											"name": "staker",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 2052,
																											"src": "2295:6:11",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																												"typeString": "struct StakingPool.Staker storage pointer"
																											}
																										},
																										"id": 2073,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "2302:7:11",
																										"memberName": "balance",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1890,
																										"src": "2295:14:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_uint256",
																											"typeString": "uint256"
																										}
																									},
																									"nodeType": "BinaryOperation",
																									"operator": "*",
																									"rightExpression": {
																										"hexValue": "35",
																										"id": 2074,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": true,
																										"kind": "number",
																										"lValueRequested": false,
																										"nodeType": "Literal",
																										"src": "2312:1:11",
																										"typeDescriptions": {
																											"typeIdentifier": "t_rational_5_by_1",
																											"typeString": "int_const 5"
																										},
																										"value": "5"
																									},
																									"src": "2295:18:11",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								}
																							],
																							"id": 2076,
																							"isConstant": false,
																							"isInlineArray": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "TupleExpression",
																							"src": "2294:20:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "BinaryOperation",
																						"operator": "/",
																						"rightExpression": {
																							"hexValue": "313030",
																							"id": 2077,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "number",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "2317:3:11",
																							"typeDescriptions": {
																								"typeIdentifier": "t_rational_100_by_1",
																								"typeString": "int_const 100"
																							},
																							"value": "100"
																						},
																						"src": "2294:26:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					}
																				],
																				"id": 2079,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "2293:28:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2080,
																				"name": "elapsedTime",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2063,
																				"src": "2324:11:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2293:42:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2082,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2292:44:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"hexValue": "333635",
																	"id": 2083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2356:8:11",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_31536000_by_1",
																		"typeString": "int_const 31536000"
																	},
																	"value": "365"
																},
																"src": "2292:72:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "2275:89:11"
														},
														{
															"expression": {
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2086,
																		"name": "staker",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2052,
																		"src": "2379:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																			"typeString": "struct StakingPool.Staker storage pointer"
																		}
																	},
																	"id": 2088,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "2386:10:11",
																	"memberName": "rewardDebt",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1892,
																	"src": "2379:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2089,
																	"name": "reward",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2071,
																	"src": "2400:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2379:27:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2091,
															"nodeType": "ExpressionStatement",
															"src": "2379:27:11"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2093,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2436:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2440:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2436:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2095,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "2448:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2092,
																	"name": "_mintRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "2423:12:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2096,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2423:32:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2097,
															"nodeType": "ExpressionStatement",
															"src": "2423:32:11"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2099,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2492:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2496:6:11",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2492:10:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 2101,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2071,
																		"src": "2504:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2098,
																	"name": "RewardsClaimed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1918,
																	"src": "2477:14:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,uint256)"
																	}
																},
																"id": 2102,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2477:34:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2103,
															"nodeType": "EmitStatement",
															"src": "2472:39:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2106,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2052,
															"src": "2535:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker storage pointer"
															}
														},
														"id": 2108,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2542:16:11",
														"memberName": "stakingStartTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1894,
														"src": "2535:23:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 2109,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "2561:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2110,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2567:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "2561:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2535:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2112,
												"nodeType": "ExpressionStatement",
												"src": "2535:41:11"
											}
										]
									},
									"id": 2114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_calculateAndClaimRewards",
									"nameLocation": "2054:25:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2048,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2079:2:11"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2091:0:11"
									},
									"scope": 2227,
									"src": "2045:539:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2156,
										"nodeType": "Block",
										"src": "2625:325:11",
										"statements": [
											{
												"assignments": [
													2119
												],
												"declarations": [
													{
														"constant": false,
														"id": 2119,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "2651:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2156,
														"src": "2636:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
															"typeString": "struct StakingPool.Staker"
														},
														"typeName": {
															"id": 2118,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2117,
																"name": "Staker",
																"nameLocations": [
																	"2636:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1895,
																"src": "2636:6:11"
															},
															"referencedDeclaration": 1895,
															"src": "2636:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2124,
												"initialValue": {
													"baseExpression": {
														"id": 2120,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "2660:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1895_storage_$",
															"typeString": "mapping(address => struct StakingPool.Staker storage ref)"
														}
													},
													"id": 2123,
													"indexExpression": {
														"expression": {
															"id": 2121,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "2668:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2122,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2672:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "2668:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "2660:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1895_storage",
														"typeString": "struct StakingPool.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2636:43:11"
											},
											{
												"assignments": [
													2126
												],
												"declarations": [
													{
														"constant": false,
														"id": 2126,
														"mutability": "mutable",
														"name": "rewards",
														"nameLocation": "2698:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2156,
														"src": "2690:15:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2125,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2690:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2129,
												"initialValue": {
													"expression": {
														"id": 2127,
														"name": "staker",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2119,
														"src": "2708:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
															"typeString": "struct StakingPool.Staker storage pointer"
														}
													},
													"id": 2128,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2715:10:11",
													"memberName": "rewardDebt",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1892,
													"src": "2708:17:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2690:35:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2130,
														"name": "rewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2126,
														"src": "2742:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2131,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2753:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2742:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2137,
												"nodeType": "IfStatement",
												"src": "2738:72:11",
												"trueBody": {
													"id": 2136,
													"nodeType": "Block",
													"src": "2756:54:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2133,
																	"name": "NoAvailableRewards",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1926,
																	"src": "2778:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2134,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2778:20:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2135,
															"nodeType": "RevertStatement",
															"src": "2771:27:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2138,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2119,
															"src": "2822:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker storage pointer"
															}
														},
														"id": 2140,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2829:10:11",
														"memberName": "rewardDebt",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1892,
														"src": "2822:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 2141,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2842:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2822:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2143,
												"nodeType": "ExpressionStatement",
												"src": "2822:21:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2145,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2869:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2146,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2873:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2869:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2147,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "2881:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2144,
														"name": "_mintRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2047,
														"src": "2856:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2148,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2856:33:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2149,
												"nodeType": "ExpressionStatement",
												"src": "2856:33:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2151,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2922:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2152,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2926:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2922:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2153,
															"name": "rewards",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2126,
															"src": "2934:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2150,
														"name": "RewardsClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1918,
														"src": "2907:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2154,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2907:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2155,
												"nodeType": "EmitStatement",
												"src": "2902:40:11"
											}
										]
									},
									"functionSelector": "372500ab",
									"id": 2157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimRewards",
									"nameLocation": "2601:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:2:11"
									},
									"returnParameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2625:0:11"
									},
									"scope": 2227,
									"src": "2592:358:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2225,
										"nodeType": "Block",
										"src": "3001:558:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2164,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2162,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3016:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2163,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3026:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3016:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2170,
												"nodeType": "IfStatement",
												"src": "3012:77:11",
												"trueBody": {
													"id": 2169,
													"nodeType": "Block",
													"src": "3029:60:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 2166,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2159,
																		"src": "3070:6:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2165,
																	"name": "InsufficientAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1922,
																	"src": "3051:18:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2167,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3051:26:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2168,
															"nodeType": "RevertStatement",
															"src": "3044:33:11"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2171,
														"name": "_calculateAndClaimRewards",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2114,
														"src": "3101:25:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3101:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2173,
												"nodeType": "ExpressionStatement",
												"src": "3101:27:11"
											},
											{
												"assignments": [
													2176
												],
												"declarations": [
													{
														"constant": false,
														"id": 2176,
														"mutability": "mutable",
														"name": "staker",
														"nameLocation": "3154:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 2225,
														"src": "3139:21:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
															"typeString": "struct StakingPool.Staker"
														},
														"typeName": {
															"id": 2175,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2174,
																"name": "Staker",
																"nameLocations": [
																	"3139:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1895,
																"src": "3139:6:11"
															},
															"referencedDeclaration": 1895,
															"src": "3139:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2181,
												"initialValue": {
													"baseExpression": {
														"id": 2177,
														"name": "stakers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1900,
														"src": "3163:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Staker_$1895_storage_$",
															"typeString": "mapping(address => struct StakingPool.Staker storage ref)"
														}
													},
													"id": 2180,
													"indexExpression": {
														"expression": {
															"id": 2178,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "3171:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2179,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3175:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "3171:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3163:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Staker_$1895_storage",
														"typeString": "struct StakingPool.Staker storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3139:43:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2182,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "3199:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker storage pointer"
															}
														},
														"id": 2183,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3206:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1890,
														"src": "3199:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 2184,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3216:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3199:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2192,
												"nodeType": "IfStatement",
												"src": "3195:98:11",
												"trueBody": {
													"id": 2191,
													"nodeType": "Block",
													"src": "3224:69:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"id": 2187,
																			"name": "staker",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2176,
																			"src": "3266:6:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																				"typeString": "struct StakingPool.Staker storage pointer"
																			}
																		},
																		"id": 2188,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3273:7:11",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1890,
																		"src": "3266:14:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2186,
																	"name": "InsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1932,
																	"src": "3246:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 2189,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3246:35:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2190,
															"nodeType": "RevertStatement",
															"src": "3239:42:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2193,
															"name": "staker",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2176,
															"src": "3305:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Staker_$1895_storage_ptr",
																"typeString": "struct StakingPool.Staker storage pointer"
															}
														},
														"id": 2195,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3312:7:11",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1890,
														"src": "3305:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2196,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3323:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3305:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2198,
												"nodeType": "ExpressionStatement",
												"src": "3305:24:11"
											},
											{
												"expression": {
													"id": 2201,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2199,
														"name": "totalStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1888,
														"src": "3340:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2200,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2159,
														"src": "3355:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3340:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2202,
												"nodeType": "ExpressionStatement",
												"src": "3340:21:11"
											},
											{
												"assignments": [
													2204
												],
												"declarations": [
													{
														"constant": false,
														"id": 2204,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3379:7:11",
														"nodeType": "VariableDeclaration",
														"scope": 2225,
														"src": "3374:12:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2203,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3374:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2211,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2207,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3410:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3414:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3410:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2209,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "3422:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2205,
															"name": "stakeXToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1886,
															"src": "3389:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$579",
																"typeString": "contract IERC20"
															}
														},
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3401:8:11",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 546,
														"src": "3389:20:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3389:40:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3374:55:11"
											},
											{
												"condition": {
													"id": 2213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3444:8:11",
													"subExpression": {
														"id": 2212,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2204,
														"src": "3445:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2218,
												"nodeType": "IfStatement",
												"src": "3440:65:11",
												"trueBody": {
													"id": 2217,
													"nodeType": "Block",
													"src": "3454:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 2214,
																	"name": "WithdrawnFailed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1928,
																	"src": "3476:15:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 2215,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3476:17:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2216,
															"nodeType": "RevertStatement",
															"src": "3469:24:11"
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2220,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3532:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3536:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3532:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2222,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2159,
															"src": "3544:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2219,
														"name": "Withdrawn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1912,
														"src": "3522:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2223,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3522:29:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2224,
												"nodeType": "EmitStatement",
												"src": "3517:34:11"
											}
										]
									},
									"functionSelector": "2e1a7d4d",
									"id": 2226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "withdraw",
									"nameLocation": "2967:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2160,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2159,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2984:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 2226,
												"src": "2976:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2158,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2976:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2975:16:11"
									},
									"returnParameters": {
										"id": 2161,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3001:0:11"
									},
									"scope": 2227,
									"src": "2958:601:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2228,
							"src": "324:3238:11",
							"usedErrors": [
								1922,
								1924,
								1926,
								1928,
								1932
							],
							"usedEvents": [
								327,
								336,
								345,
								402,
								1906,
								1912,
								1918
							]
						}
					],
					"src": "33:3531:11"
				},
				"id": 11
			}
		}
	}
}